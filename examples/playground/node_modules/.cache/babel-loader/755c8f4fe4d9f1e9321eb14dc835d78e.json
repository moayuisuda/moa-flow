{"ast":null,"code":"import { Shape } from '@antv/g';\nimport { Module } from 'mana-syringe';\nimport { CanvasPickerPlugin, PointInPathPickerFactory } from './CanvasPickerPlugin';\nimport { isPointInPath as CirclePicker } from './Circle';\nimport { isPointInPath as EllipsePicker } from './Ellipse';\nimport { isPointInPath as LinePicker } from './Line';\nimport { isPointInPath as PolylinePicker } from './Polyline';\nimport { isPointInPath as PathPicker } from './Path';\nimport { isPointInPath as RectPicker } from './Rect';\nimport { isPointInPath as PolygonPicker } from './Polygon';\nvar containerModule = Module(function (register) {\n  register({\n    token: PointInPathPickerFactory,\n    useFactory: function useFactory(context) {\n      return function (tagName) {\n        if (tagName === Shape.CIRCLE) {\n          return CirclePicker;\n        } else if (tagName === Shape.ELLIPSE) {\n          return EllipsePicker;\n        } else if (tagName === Shape.RECT) {\n          return RectPicker;\n        } else if (tagName === Shape.LINE) {\n          return LinePicker;\n        } else if (tagName === Shape.POLYLINE) {\n          return PolylinePicker;\n        } else if (tagName === Shape.POLYGON) {\n          return PolygonPicker;\n        } else if (tagName === Shape.PATH) {\n          return PathPicker;\n        } else if (tagName === Shape.IMAGE || tagName === Shape.TEXT // tagName === Shape.GROUP\n        ) {\n          return function () {\n            return true;\n          };\n        }\n\n        return null;\n      };\n    }\n  });\n  register(CanvasPickerPlugin);\n});\n\nvar Plugin =\n/** @class */\nfunction () {\n  function Plugin() {}\n\n  Plugin.prototype.init = function (container) {\n    container.load(containerModule, true);\n  };\n\n  Plugin.prototype.destroy = function (container) {\n    container.unload(containerModule);\n  };\n\n  return Plugin;\n}();\n\nexport { Plugin };","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/@antv/g-plugin-canvas-picker/es/index.js"],"names":["Shape","Module","CanvasPickerPlugin","PointInPathPickerFactory","isPointInPath","CirclePicker","EllipsePicker","LinePicker","PolylinePicker","PathPicker","RectPicker","PolygonPicker","containerModule","register","token","useFactory","context","tagName","CIRCLE","ELLIPSE","RECT","LINE","POLYLINE","POLYGON","PATH","IMAGE","TEXT","Plugin","prototype","init","container","load","destroy","unload"],"mappings":"AAAA,SAASA,KAAT,QAAsB,SAAtB;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,kBAAT,EAA6BC,wBAA7B,QAA6D,sBAA7D;AACA,SAASC,aAAa,IAAIC,YAA1B,QAA8C,UAA9C;AACA,SAASD,aAAa,IAAIE,aAA1B,QAA+C,WAA/C;AACA,SAASF,aAAa,IAAIG,UAA1B,QAA4C,QAA5C;AACA,SAASH,aAAa,IAAII,cAA1B,QAAgD,YAAhD;AACA,SAASJ,aAAa,IAAIK,UAA1B,QAA4C,QAA5C;AACA,SAASL,aAAa,IAAIM,UAA1B,QAA4C,QAA5C;AACA,SAASN,aAAa,IAAIO,aAA1B,QAA+C,WAA/C;AACA,IAAIC,eAAe,GAAGX,MAAM,CAAC,UAAUY,QAAV,EAAoB;AAC/CA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,KAAK,EAAEX,wBADA;AAEPY,IAAAA,UAAU,EAAE,SAASA,UAAT,CAAoBC,OAApB,EAA6B;AACvC,aAAO,UAAUC,OAAV,EAAmB;AACxB,YAAIA,OAAO,KAAKjB,KAAK,CAACkB,MAAtB,EAA8B;AAC5B,iBAAOb,YAAP;AACD,SAFD,MAEO,IAAIY,OAAO,KAAKjB,KAAK,CAACmB,OAAtB,EAA+B;AACpC,iBAAOb,aAAP;AACD,SAFM,MAEA,IAAIW,OAAO,KAAKjB,KAAK,CAACoB,IAAtB,EAA4B;AACjC,iBAAOV,UAAP;AACD,SAFM,MAEA,IAAIO,OAAO,KAAKjB,KAAK,CAACqB,IAAtB,EAA4B;AACjC,iBAAOd,UAAP;AACD,SAFM,MAEA,IAAIU,OAAO,KAAKjB,KAAK,CAACsB,QAAtB,EAAgC;AACrC,iBAAOd,cAAP;AACD,SAFM,MAEA,IAAIS,OAAO,KAAKjB,KAAK,CAACuB,OAAtB,EAA+B;AACpC,iBAAOZ,aAAP;AACD,SAFM,MAEA,IAAIM,OAAO,KAAKjB,KAAK,CAACwB,IAAtB,EAA4B;AACjC,iBAAOf,UAAP;AACD,SAFM,MAEA,IAAIQ,OAAO,KAAKjB,KAAK,CAACyB,KAAlB,IAA2BR,OAAO,KAAKjB,KAAK,CAAC0B,IAAjD,CAAsD;AAAtD,UACL;AACA,iBAAO,YAAY;AACjB,mBAAO,IAAP;AACD,WAFD;AAGD;;AAED,eAAO,IAAP;AACD,OAvBD;AAwBD;AA3BM,GAAD,CAAR;AA6BAb,EAAAA,QAAQ,CAACX,kBAAD,CAAR;AACD,CA/B2B,CAA5B;;AAiCA,IAAIyB,MAAM;AACV;AACA,YAAY;AACV,WAASA,MAAT,GAAkB,CAAE;;AAEpBA,EAAAA,MAAM,CAACC,SAAP,CAAiBC,IAAjB,GAAwB,UAAUC,SAAV,EAAqB;AAC3CA,IAAAA,SAAS,CAACC,IAAV,CAAenB,eAAf,EAAgC,IAAhC;AACD,GAFD;;AAIAe,EAAAA,MAAM,CAACC,SAAP,CAAiBI,OAAjB,GAA2B,UAAUF,SAAV,EAAqB;AAC9CA,IAAAA,SAAS,CAACG,MAAV,CAAiBrB,eAAjB;AACD,GAFD;;AAIA,SAAOe,MAAP;AACD,CAZD,EAFA;;AAgBA,SAASA,MAAT","sourcesContent":["import { Shape } from '@antv/g';\nimport { Module } from 'mana-syringe';\nimport { CanvasPickerPlugin, PointInPathPickerFactory } from './CanvasPickerPlugin';\nimport { isPointInPath as CirclePicker } from './Circle';\nimport { isPointInPath as EllipsePicker } from './Ellipse';\nimport { isPointInPath as LinePicker } from './Line';\nimport { isPointInPath as PolylinePicker } from './Polyline';\nimport { isPointInPath as PathPicker } from './Path';\nimport { isPointInPath as RectPicker } from './Rect';\nimport { isPointInPath as PolygonPicker } from './Polygon';\nvar containerModule = Module(function (register) {\n  register({\n    token: PointInPathPickerFactory,\n    useFactory: function useFactory(context) {\n      return function (tagName) {\n        if (tagName === Shape.CIRCLE) {\n          return CirclePicker;\n        } else if (tagName === Shape.ELLIPSE) {\n          return EllipsePicker;\n        } else if (tagName === Shape.RECT) {\n          return RectPicker;\n        } else if (tagName === Shape.LINE) {\n          return LinePicker;\n        } else if (tagName === Shape.POLYLINE) {\n          return PolylinePicker;\n        } else if (tagName === Shape.POLYGON) {\n          return PolygonPicker;\n        } else if (tagName === Shape.PATH) {\n          return PathPicker;\n        } else if (tagName === Shape.IMAGE || tagName === Shape.TEXT // tagName === Shape.GROUP\n        ) {\n          return function () {\n            return true;\n          };\n        }\n\n        return null;\n      };\n    }\n  });\n  register(CanvasPickerPlugin);\n});\n\nvar Plugin =\n/** @class */\nfunction () {\n  function Plugin() {}\n\n  Plugin.prototype.init = function (container) {\n    container.load(containerModule, true);\n  };\n\n  Plugin.prototype.destroy = function (container) {\n    container.unload(containerModule);\n  };\n\n  return Plugin;\n}();\n\nexport { Plugin };"]},"metadata":{},"sourceType":"module"}