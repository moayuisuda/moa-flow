{"ast":null,"code":"import { Line as LineUtil, Polyline as PolylineUtil } from '@antv/g-math';\nimport { isString } from 'lodash-es';\nexport function parsePoints(points) {\n  if (isString(points)) {\n    return null;\n  }\n\n  var segments = [];\n  var tempLength = 0;\n  var segmentT;\n  var segmentL;\n  var totalLength = PolylineUtil.length(points);\n  points.forEach(function (p, i) {\n    if (points[i + 1]) {\n      segmentT = [0, 0];\n      segmentT[0] = tempLength / totalLength;\n      segmentL = LineUtil.length(p[0], p[1], points[i + 1][0], points[i + 1][1]);\n      tempLength += segmentL;\n      segmentT[1] = tempLength / totalLength;\n      segments.push(segmentT);\n    }\n  });\n  return {\n    points: points,\n    totalLength: totalLength,\n    segments: segments\n  };\n}","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/@antv/g/es/css/parser/points.js"],"names":["Line","LineUtil","Polyline","PolylineUtil","isString","parsePoints","points","segments","tempLength","segmentT","segmentL","totalLength","length","forEach","p","i","push"],"mappings":"AAAA,SAASA,IAAI,IAAIC,QAAjB,EAA2BC,QAAQ,IAAIC,YAAvC,QAA2D,cAA3D;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,OAAO,SAASC,WAAT,CAAqBC,MAArB,EAA6B;AAClC,MAAIF,QAAQ,CAACE,MAAD,CAAZ,EAAsB;AACpB,WAAO,IAAP;AACD;;AAED,MAAIC,QAAQ,GAAG,EAAf;AACA,MAAIC,UAAU,GAAG,CAAjB;AACA,MAAIC,QAAJ;AACA,MAAIC,QAAJ;AACA,MAAIC,WAAW,GAAGR,YAAY,CAACS,MAAb,CAAoBN,MAApB,CAAlB;AACAA,EAAAA,MAAM,CAACO,OAAP,CAAe,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAC7B,QAAIT,MAAM,CAACS,CAAC,GAAG,CAAL,CAAV,EAAmB;AACjBN,MAAAA,QAAQ,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAX;AACAA,MAAAA,QAAQ,CAAC,CAAD,CAAR,GAAcD,UAAU,GAAGG,WAA3B;AACAD,MAAAA,QAAQ,GAAGT,QAAQ,CAACW,MAAT,CAAgBE,CAAC,CAAC,CAAD,CAAjB,EAAsBA,CAAC,CAAC,CAAD,CAAvB,EAA4BR,MAAM,CAACS,CAAC,GAAG,CAAL,CAAN,CAAc,CAAd,CAA5B,EAA8CT,MAAM,CAACS,CAAC,GAAG,CAAL,CAAN,CAAc,CAAd,CAA9C,CAAX;AACAP,MAAAA,UAAU,IAAIE,QAAd;AACAD,MAAAA,QAAQ,CAAC,CAAD,CAAR,GAAcD,UAAU,GAAGG,WAA3B;AACAJ,MAAAA,QAAQ,CAACS,IAAT,CAAcP,QAAd;AACD;AACF,GATD;AAUA,SAAO;AACLH,IAAAA,MAAM,EAAEA,MADH;AAELK,IAAAA,WAAW,EAAEA,WAFR;AAGLJ,IAAAA,QAAQ,EAAEA;AAHL,GAAP;AAKD","sourcesContent":["import { Line as LineUtil, Polyline as PolylineUtil } from '@antv/g-math';\nimport { isString } from 'lodash-es';\nexport function parsePoints(points) {\n  if (isString(points)) {\n    return null;\n  }\n\n  var segments = [];\n  var tempLength = 0;\n  var segmentT;\n  var segmentL;\n  var totalLength = PolylineUtil.length(points);\n  points.forEach(function (p, i) {\n    if (points[i + 1]) {\n      segmentT = [0, 0];\n      segmentT[0] = tempLength / totalLength;\n      segmentL = LineUtil.length(p[0], p[1], points[i + 1][0], points[i + 1][1]);\n      tempLength += segmentL;\n      segmentT[1] = tempLength / totalLength;\n      segments.push(segmentT);\n    }\n  });\n  return {\n    points: points,\n    totalLength: totalLength,\n    segments: segments\n  };\n}"]},"metadata":{},"sourceType":"module"}