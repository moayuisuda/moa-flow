{"ast":null,"code":"import * as React from 'react';\nimport DownOutlined from \"@ant-design/icons/es/icons/DownOutlined\";\nimport LoadingOutlined from \"@ant-design/icons/es/icons/LoadingOutlined\";\nimport CheckOutlined from \"@ant-design/icons/es/icons/CheckOutlined\";\nimport CloseOutlined from \"@ant-design/icons/es/icons/CloseOutlined\";\nimport CloseCircleFilled from \"@ant-design/icons/es/icons/CloseCircleFilled\";\nimport SearchOutlined from \"@ant-design/icons/es/icons/SearchOutlined\";\nimport { getFeedbackIcon } from '../../_util/statusUtils';\nexport default function getIcons(_ref) {\n  var suffixIcon = _ref.suffixIcon,\n      clearIcon = _ref.clearIcon,\n      menuItemSelectedIcon = _ref.menuItemSelectedIcon,\n      removeIcon = _ref.removeIcon,\n      loading = _ref.loading,\n      multiple = _ref.multiple,\n      hasFeedback = _ref.hasFeedback,\n      status = _ref.status,\n      prefixCls = _ref.prefixCls,\n      showArrow = _ref.showArrow; // Clear Icon\n\n  var mergedClearIcon = clearIcon;\n\n  if (!clearIcon) {\n    mergedClearIcon = /*#__PURE__*/React.createElement(CloseCircleFilled, null);\n  } // Validation Feedback Icon\n\n\n  var getSuffixIconNode = function getSuffixIconNode(arrowIcon) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, showArrow !== false && arrowIcon, hasFeedback && getFeedbackIcon(prefixCls, status));\n  }; // Arrow item icon\n\n\n  var mergedSuffixIcon = null;\n\n  if (suffixIcon !== undefined) {\n    mergedSuffixIcon = getSuffixIconNode(suffixIcon);\n  } else if (loading) {\n    mergedSuffixIcon = getSuffixIconNode( /*#__PURE__*/React.createElement(LoadingOutlined, {\n      spin: true\n    }));\n  } else {\n    var iconCls = \"\".concat(prefixCls, \"-suffix\");\n\n    mergedSuffixIcon = function mergedSuffixIcon(_ref2) {\n      var open = _ref2.open,\n          showSearch = _ref2.showSearch;\n\n      if (open && showSearch) {\n        return getSuffixIconNode( /*#__PURE__*/React.createElement(SearchOutlined, {\n          className: iconCls\n        }));\n      }\n\n      return getSuffixIconNode( /*#__PURE__*/React.createElement(DownOutlined, {\n        className: iconCls\n      }));\n    };\n  } // Checked item icon\n\n\n  var mergedItemIcon = null;\n\n  if (menuItemSelectedIcon !== undefined) {\n    mergedItemIcon = menuItemSelectedIcon;\n  } else if (multiple) {\n    mergedItemIcon = /*#__PURE__*/React.createElement(CheckOutlined, null);\n  } else {\n    mergedItemIcon = null;\n  }\n\n  var mergedRemoveIcon = null;\n\n  if (removeIcon !== undefined) {\n    mergedRemoveIcon = removeIcon;\n  } else {\n    mergedRemoveIcon = /*#__PURE__*/React.createElement(CloseOutlined, null);\n  }\n\n  return {\n    clearIcon: mergedClearIcon,\n    suffixIcon: mergedSuffixIcon,\n    itemIcon: mergedItemIcon,\n    removeIcon: mergedRemoveIcon\n  };\n}","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/antd/es/select/utils/iconUtil.js"],"names":["React","DownOutlined","LoadingOutlined","CheckOutlined","CloseOutlined","CloseCircleFilled","SearchOutlined","getFeedbackIcon","getIcons","_ref","suffixIcon","clearIcon","menuItemSelectedIcon","removeIcon","loading","multiple","hasFeedback","status","prefixCls","showArrow","mergedClearIcon","createElement","getSuffixIconNode","arrowIcon","Fragment","mergedSuffixIcon","undefined","spin","iconCls","concat","_ref2","open","showSearch","className","mergedItemIcon","mergedRemoveIcon","itemIcon"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport DownOutlined from \"@ant-design/icons/es/icons/DownOutlined\";\nimport LoadingOutlined from \"@ant-design/icons/es/icons/LoadingOutlined\";\nimport CheckOutlined from \"@ant-design/icons/es/icons/CheckOutlined\";\nimport CloseOutlined from \"@ant-design/icons/es/icons/CloseOutlined\";\nimport CloseCircleFilled from \"@ant-design/icons/es/icons/CloseCircleFilled\";\nimport SearchOutlined from \"@ant-design/icons/es/icons/SearchOutlined\";\nimport { getFeedbackIcon } from '../../_util/statusUtils';\nexport default function getIcons(_ref) {\n  var suffixIcon = _ref.suffixIcon,\n      clearIcon = _ref.clearIcon,\n      menuItemSelectedIcon = _ref.menuItemSelectedIcon,\n      removeIcon = _ref.removeIcon,\n      loading = _ref.loading,\n      multiple = _ref.multiple,\n      hasFeedback = _ref.hasFeedback,\n      status = _ref.status,\n      prefixCls = _ref.prefixCls,\n      showArrow = _ref.showArrow;\n  // Clear Icon\n  var mergedClearIcon = clearIcon;\n\n  if (!clearIcon) {\n    mergedClearIcon = /*#__PURE__*/React.createElement(CloseCircleFilled, null);\n  } // Validation Feedback Icon\n\n\n  var getSuffixIconNode = function getSuffixIconNode(arrowIcon) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, showArrow !== false && arrowIcon, hasFeedback && getFeedbackIcon(prefixCls, status));\n  }; // Arrow item icon\n\n\n  var mergedSuffixIcon = null;\n\n  if (suffixIcon !== undefined) {\n    mergedSuffixIcon = getSuffixIconNode(suffixIcon);\n  } else if (loading) {\n    mergedSuffixIcon = getSuffixIconNode( /*#__PURE__*/React.createElement(LoadingOutlined, {\n      spin: true\n    }));\n  } else {\n    var iconCls = \"\".concat(prefixCls, \"-suffix\");\n\n    mergedSuffixIcon = function mergedSuffixIcon(_ref2) {\n      var open = _ref2.open,\n          showSearch = _ref2.showSearch;\n\n      if (open && showSearch) {\n        return getSuffixIconNode( /*#__PURE__*/React.createElement(SearchOutlined, {\n          className: iconCls\n        }));\n      }\n\n      return getSuffixIconNode( /*#__PURE__*/React.createElement(DownOutlined, {\n        className: iconCls\n      }));\n    };\n  } // Checked item icon\n\n\n  var mergedItemIcon = null;\n\n  if (menuItemSelectedIcon !== undefined) {\n    mergedItemIcon = menuItemSelectedIcon;\n  } else if (multiple) {\n    mergedItemIcon = /*#__PURE__*/React.createElement(CheckOutlined, null);\n  } else {\n    mergedItemIcon = null;\n  }\n\n  var mergedRemoveIcon = null;\n\n  if (removeIcon !== undefined) {\n    mergedRemoveIcon = removeIcon;\n  } else {\n    mergedRemoveIcon = /*#__PURE__*/React.createElement(CloseOutlined, null);\n  }\n\n  return {\n    clearIcon: mergedClearIcon,\n    suffixIcon: mergedSuffixIcon,\n    itemIcon: mergedItemIcon,\n    removeIcon: mergedRemoveIcon\n  };\n}"]},"metadata":{},"sourceType":"module"}