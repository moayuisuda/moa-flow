{"ast":null,"code":"import { __read, __spreadArray } from \"tslib\";\nimport line from './line';\nimport { distance, isNumberEqual, getBBoxByArray, piMod } from './util';\nimport { nearestPoint as _nearestPoint } from './bezier'; // 差值公式\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * onet * p0 + 2 * t * onet * p1 + t * t * p2;\n} // 求极值\n\n\nfunction extrema(p0, p1, p2) {\n  var a = p0 + p2 - 2 * p1;\n\n  if (isNumberEqual(a, 0)) {\n    return [0.5];\n  }\n\n  var rst = (p0 - p1) / a;\n\n  if (rst <= 1 && rst >= 0) {\n    return [rst];\n  }\n\n  return [];\n}\n\nfunction derivativeAt(p0, p1, p2, t) {\n  return 2 * (1 - t) * (p1 - p0) + 2 * t * (p2 - p1);\n} // 分割贝塞尔曲线\n\n\nfunction divideQuadratic(x1, y1, x2, y2, x3, y3, t) {\n  // 划分点\n  var xt = quadraticAt(x1, x2, x3, t);\n  var yt = quadraticAt(y1, y2, y3, t); // 分割的第一条曲线的控制点\n\n  var controlPoint1 = line.pointAt(x1, y1, x2, y2, t); // 分割的第二条曲线的控制点\n\n  var controlPoint2 = line.pointAt(x2, y2, x3, y3, t);\n  return [[x1, y1, controlPoint1.x, controlPoint1.y, xt, yt], [xt, yt, controlPoint2.x, controlPoint2.y, x3, y3]];\n} // 使用迭代法取贝塞尔曲线的长度\n\n\nfunction quadraticLength(x1, y1, x2, y2, x3, y3, iterationCount) {\n  if (iterationCount === 0) {\n    return (distance(x1, y1, x2, y2) + distance(x2, y2, x3, y3) + distance(x1, y1, x3, y3)) / 2;\n  }\n\n  var quadratics = divideQuadratic(x1, y1, x2, y2, x3, y3, 0.5);\n  var left = quadratics[0];\n  var right = quadratics[1];\n  left.push(iterationCount - 1);\n  right.push(iterationCount - 1);\n  return quadraticLength.apply(void 0, __spreadArray([], __read(left), false)) + quadraticLength.apply(void 0, __spreadArray([], __read(right), false));\n}\n\nexport default {\n  box: function box(x1, y1, x2, y2, x3, y3) {\n    var xExtrema = extrema(x1, x2, x3)[0];\n    var yExtrema = extrema(y1, y2, y3)[0]; // 控制点不加入 box 的计算\n\n    var xArr = [x1, x3];\n    var yArr = [y1, y3];\n\n    if (xExtrema !== undefined) {\n      xArr.push(quadraticAt(x1, x2, x3, xExtrema));\n    }\n\n    if (yExtrema !== undefined) {\n      yArr.push(quadraticAt(y1, y2, y3, yExtrema));\n    }\n\n    return getBBoxByArray(xArr, yArr);\n  },\n  length: function length(x1, y1, x2, y2, x3, y3) {\n    return quadraticLength(x1, y1, x2, y2, x3, y3, 3);\n  },\n  nearestPoint: function nearestPoint(x1, y1, x2, y2, x3, y3, x0, y0) {\n    return _nearestPoint([x1, x2, x3], [y1, y2, y3], x0, y0, quadraticAt);\n  },\n  pointDistance: function pointDistance(x1, y1, x2, y2, x3, y3, x0, y0) {\n    var point = this.nearestPoint(x1, y1, x2, y2, x3, y3, x0, y0);\n    return distance(point.x, point.y, x0, y0);\n  },\n  interpolationAt: quadraticAt,\n  pointAt: function pointAt(x1, y1, x2, y2, x3, y3, t) {\n    return {\n      x: quadraticAt(x1, x2, x3, t),\n      y: quadraticAt(y1, y2, y3, t)\n    };\n  },\n  divide: function divide(x1, y1, x2, y2, x3, y3, t) {\n    return divideQuadratic(x1, y1, x2, y2, x3, y3, t);\n  },\n  tangentAngle: function tangentAngle(x1, y1, x2, y2, x3, y3, t) {\n    var dx = derivativeAt(x1, x2, x3, t);\n    var dy = derivativeAt(y1, y2, y3, t);\n    var angle = Math.atan2(dy, dx);\n    return piMod(angle);\n  }\n};","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/@antv/g-math/es/quadratic.js"],"names":["__read","__spreadArray","line","distance","isNumberEqual","getBBoxByArray","piMod","nearestPoint","_nearestPoint","quadraticAt","p0","p1","p2","t","onet","extrema","a","rst","derivativeAt","divideQuadratic","x1","y1","x2","y2","x3","y3","xt","yt","controlPoint1","pointAt","controlPoint2","x","y","quadraticLength","iterationCount","quadratics","left","right","push","apply","box","xExtrema","yExtrema","xArr","yArr","undefined","length","x0","y0","pointDistance","point","interpolationAt","divide","tangentAngle","dx","dy","angle","Math","atan2"],"mappings":"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","sourcesContent":["import { __read, __spreadArray } from \"tslib\";\nimport line from './line';\nimport { distance, isNumberEqual, getBBoxByArray, piMod } from './util';\nimport { nearestPoint as _nearestPoint } from './bezier'; // 差值公式\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * onet * p0 + 2 * t * onet * p1 + t * t * p2;\n} // 求极值\n\n\nfunction extrema(p0, p1, p2) {\n  var a = p0 + p2 - 2 * p1;\n\n  if (isNumberEqual(a, 0)) {\n    return [0.5];\n  }\n\n  var rst = (p0 - p1) / a;\n\n  if (rst <= 1 && rst >= 0) {\n    return [rst];\n  }\n\n  return [];\n}\n\nfunction derivativeAt(p0, p1, p2, t) {\n  return 2 * (1 - t) * (p1 - p0) + 2 * t * (p2 - p1);\n} // 分割贝塞尔曲线\n\n\nfunction divideQuadratic(x1, y1, x2, y2, x3, y3, t) {\n  // 划分点\n  var xt = quadraticAt(x1, x2, x3, t);\n  var yt = quadraticAt(y1, y2, y3, t); // 分割的第一条曲线的控制点\n\n  var controlPoint1 = line.pointAt(x1, y1, x2, y2, t); // 分割的第二条曲线的控制点\n\n  var controlPoint2 = line.pointAt(x2, y2, x3, y3, t);\n  return [[x1, y1, controlPoint1.x, controlPoint1.y, xt, yt], [xt, yt, controlPoint2.x, controlPoint2.y, x3, y3]];\n} // 使用迭代法取贝塞尔曲线的长度\n\n\nfunction quadraticLength(x1, y1, x2, y2, x3, y3, iterationCount) {\n  if (iterationCount === 0) {\n    return (distance(x1, y1, x2, y2) + distance(x2, y2, x3, y3) + distance(x1, y1, x3, y3)) / 2;\n  }\n\n  var quadratics = divideQuadratic(x1, y1, x2, y2, x3, y3, 0.5);\n  var left = quadratics[0];\n  var right = quadratics[1];\n  left.push(iterationCount - 1);\n  right.push(iterationCount - 1);\n  return quadraticLength.apply(void 0, __spreadArray([], __read(left), false)) + quadraticLength.apply(void 0, __spreadArray([], __read(right), false));\n}\n\nexport default {\n  box: function box(x1, y1, x2, y2, x3, y3) {\n    var xExtrema = extrema(x1, x2, x3)[0];\n    var yExtrema = extrema(y1, y2, y3)[0]; // 控制点不加入 box 的计算\n\n    var xArr = [x1, x3];\n    var yArr = [y1, y3];\n\n    if (xExtrema !== undefined) {\n      xArr.push(quadraticAt(x1, x2, x3, xExtrema));\n    }\n\n    if (yExtrema !== undefined) {\n      yArr.push(quadraticAt(y1, y2, y3, yExtrema));\n    }\n\n    return getBBoxByArray(xArr, yArr);\n  },\n  length: function length(x1, y1, x2, y2, x3, y3) {\n    return quadraticLength(x1, y1, x2, y2, x3, y3, 3);\n  },\n  nearestPoint: function nearestPoint(x1, y1, x2, y2, x3, y3, x0, y0) {\n    return _nearestPoint([x1, x2, x3], [y1, y2, y3], x0, y0, quadraticAt);\n  },\n  pointDistance: function pointDistance(x1, y1, x2, y2, x3, y3, x0, y0) {\n    var point = this.nearestPoint(x1, y1, x2, y2, x3, y3, x0, y0);\n    return distance(point.x, point.y, x0, y0);\n  },\n  interpolationAt: quadraticAt,\n  pointAt: function pointAt(x1, y1, x2, y2, x3, y3, t) {\n    return {\n      x: quadraticAt(x1, x2, x3, t),\n      y: quadraticAt(y1, y2, y3, t)\n    };\n  },\n  divide: function divide(x1, y1, x2, y2, x3, y3, t) {\n    return divideQuadratic(x1, y1, x2, y2, x3, y3, t);\n  },\n  tangentAngle: function tangentAngle(x1, y1, x2, y2, x3, y3, t) {\n    var dx = derivativeAt(x1, x2, x3, t);\n    var dy = derivativeAt(y1, y2, y3, t);\n    var angle = Math.atan2(dy, dx);\n    return piMod(angle);\n  }\n};"]},"metadata":{},"sourceType":"module"}