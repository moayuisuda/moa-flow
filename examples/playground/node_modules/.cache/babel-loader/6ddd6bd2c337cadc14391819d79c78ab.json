{"ast":null,"code":"import { __extends } from '../node_modules/tslib/tslib.es6.js';\nimport React from 'react';\nimport { Group } from '@antv/react-g';\nimport { FlowContext } from '../Context.js';\nimport '../node_modules/lodash/lodash.js';\nimport { observer } from 'mobx-react';\nimport { titleCase } from '../utils/string.js';\nimport { l as lodash } from '../_virtual/lodash.js'; // D: data, S: state, P: props\n\nvar Cell =\n/** @class */\nfunction (_super) {\n  __extends(Cell, _super);\n\n  function Cell(props, context) {\n    var _this = _super.call(this, props) || this;\n\n    context.cellsMap.set(props.data.id, _this);\n    _this.wrapperRef = React.createRef();\n    return _this;\n  }\n\n  Cell.prototype.onMount = function () {};\n\n  Cell.regist = function (name, model) {\n    model.componentsMap.set(name, this);\n  };\n\n  Cell.getMetaData = function () {\n    var re = {};\n    var curr = this; // 合并父类metaData\n\n    while (curr !== React.Component) {\n      Object.assign(re, curr.metaData);\n      curr = curr.__proto__;\n    }\n\n    return lodash.exports.cloneDeep(re);\n  };\n\n  Cell.prototype.setData = function (data) {\n    this.context;\n    this.context.setCellData(this.props.data.id, data);\n  };\n\n  Cell.prototype.componentDidMount = function () {\n    var _this = this;\n\n    [\"mouseenter\", \"mouseleave\", \"mousedown\", \"mouseup\", \"dblclick\", \"click\"].forEach(function (eventName) {\n      _this.wrapperRef.current.on(eventName, function (e) {\n        var instanceEventFn = _this[\"on\".concat(titleCase(eventName))];\n\n        instanceEventFn && instanceEventFn.call(_this, e);\n\n        _this.context.sendEvent({\n          type: \"cell:\".concat(eventName),\n          data: {\n            e: e,\n            cellData: _this.props.data,\n            cell: _this\n          }\n        });\n      });\n    });\n    this.onMount && this.onMount();\n  };\n\n  Cell.prototype.getData = function () {\n    return this.props.data;\n  };\n\n  Cell.prototype.isSelect = function () {\n    return this.props.data.$state.isSelect;\n  };\n\n  Cell.prototype.render = function () {\n    var _this = this;\n\n    return React.createElement(Group, {\n      ref: function (ref) {\n        _this.wrapperRef.current = ref;\n      }\n    }, this.content());\n  };\n\n  Cell.contextType = FlowContext;\n  Cell.metaData = {\n    id: \"\"\n  };\n  return Cell;\n}(React.Component);\n\nvar Cell$1 = observer(Cell);\nexport { Cell$1 as default };","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/packages/flow/lib/cells/Cell.js"],"names":["__extends","React","Group","FlowContext","observer","titleCase","l","lodash","Cell","_super","props","context","_this","call","cellsMap","set","data","id","wrapperRef","createRef","prototype","onMount","regist","name","model","componentsMap","getMetaData","re","curr","Component","Object","assign","metaData","__proto__","exports","cloneDeep","setData","setCellData","componentDidMount","forEach","eventName","current","on","e","instanceEventFn","concat","sendEvent","type","cellData","cell","getData","isSelect","$state","render","createElement","ref","content","contextType","Cell$1","default"],"mappings":"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","sourcesContent":["import { __extends } from '../node_modules/tslib/tslib.es6.js';\nimport React from 'react';\nimport { Group } from '@antv/react-g';\nimport { FlowContext } from '../Context.js';\nimport '../node_modules/lodash/lodash.js';\nimport { observer } from 'mobx-react';\nimport { titleCase } from '../utils/string.js';\nimport { l as lodash } from '../_virtual/lodash.js';\n\n// D: data, S: state, P: props\nvar Cell = /** @class */ (function (_super) {\n    __extends(Cell, _super);\n    function Cell(props, context) {\n        var _this = _super.call(this, props) || this;\n        context.cellsMap.set(props.data.id, _this);\n        _this.wrapperRef = React.createRef();\n        return _this;\n    }\n    Cell.prototype.onMount = function () { };\n    Cell.regist = function (name, model) {\n        model.componentsMap.set(name, this);\n    };\n    Cell.getMetaData = function () {\n        var re = {};\n        var curr = this;\n        // 合并父类metaData\n        while (curr !== React.Component) {\n            Object.assign(re, curr.metaData);\n            curr = curr.__proto__;\n        }\n        return lodash.exports.cloneDeep(re);\n    };\n    Cell.prototype.setData = function (data) {\n        this.context;\n        this.context.setCellData(this.props.data.id, data);\n    };\n    Cell.prototype.componentDidMount = function () {\n        var _this = this;\n        [\n            \"mouseenter\",\n            \"mouseleave\",\n            \"mousedown\",\n            \"mouseup\",\n            \"dblclick\",\n            \"click\",\n        ].forEach(function (eventName) {\n            _this.wrapperRef.current.on(eventName, function (e) {\n                var instanceEventFn = _this[\"on\".concat(titleCase(eventName))];\n                instanceEventFn && instanceEventFn.call(_this, e);\n                _this.context.sendEvent({\n                    type: \"cell:\".concat(eventName),\n                    data: {\n                        e: e,\n                        cellData: _this.props.data,\n                        cell: _this,\n                    },\n                });\n            });\n        });\n        this.onMount && this.onMount();\n    };\n    Cell.prototype.getData = function () {\n        return this.props.data;\n    };\n    Cell.prototype.isSelect = function () {\n        return this.props.data.$state.isSelect;\n    };\n    Cell.prototype.render = function () {\n        var _this = this;\n        return (React.createElement(Group, { ref: function (ref) {\n                _this.wrapperRef.current = ref;\n            } }, this.content()));\n    };\n    Cell.contextType = FlowContext;\n    Cell.metaData = { id: \"\" };\n    return Cell;\n}(React.Component));\nvar Cell$1 = observer(Cell);\n\nexport { Cell$1 as default };\n"]},"metadata":{},"sourceType":"module"}