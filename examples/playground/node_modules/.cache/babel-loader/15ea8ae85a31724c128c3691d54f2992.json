{"ast":null,"code":"import baseClamp from './_baseClamp.js';\nimport baseToString from './_baseToString.js';\nimport toInteger from './toInteger.js';\nimport toString from './toString.js';\n/**\n * Checks if `string` ends with the given target string.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {string} [target] The string to search for.\n * @param {number} [position=string.length] The position to search up to.\n * @returns {boolean} Returns `true` if `string` ends with `target`,\n *  else `false`.\n * @example\n *\n * _.endsWith('abc', 'c');\n * // => true\n *\n * _.endsWith('abc', 'b');\n * // => false\n *\n * _.endsWith('abc', 'b', 2);\n * // => true\n */\n\nfunction endsWith(string, target, position) {\n  string = toString(string);\n  target = baseToString(target);\n  var length = string.length;\n  position = position === undefined ? length : baseClamp(toInteger(position), 0, length);\n  var end = position;\n  position -= target.length;\n  return position >= 0 && string.slice(position, end) == target;\n}\n\nexport default endsWith;","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/lodash-es/endsWith.js"],"names":["baseClamp","baseToString","toInteger","toString","endsWith","string","target","position","length","undefined","end","slice"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,iBAAtB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAOC,QAAP,MAAqB,eAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,QAAT,CAAkBC,MAAlB,EAA0BC,MAA1B,EAAkCC,QAAlC,EAA4C;AAC1CF,EAAAA,MAAM,GAAGF,QAAQ,CAACE,MAAD,CAAjB;AACAC,EAAAA,MAAM,GAAGL,YAAY,CAACK,MAAD,CAArB;AAEA,MAAIE,MAAM,GAAGH,MAAM,CAACG,MAApB;AACAD,EAAAA,QAAQ,GAAGA,QAAQ,KAAKE,SAAb,GACPD,MADO,GAEPR,SAAS,CAACE,SAAS,CAACK,QAAD,CAAV,EAAsB,CAAtB,EAAyBC,MAAzB,CAFb;AAIA,MAAIE,GAAG,GAAGH,QAAV;AACAA,EAAAA,QAAQ,IAAID,MAAM,CAACE,MAAnB;AACA,SAAOD,QAAQ,IAAI,CAAZ,IAAiBF,MAAM,CAACM,KAAP,CAAaJ,QAAb,EAAuBG,GAAvB,KAA+BJ,MAAvD;AACD;;AAED,eAAeF,QAAf","sourcesContent":["import baseClamp from './_baseClamp.js';\nimport baseToString from './_baseToString.js';\nimport toInteger from './toInteger.js';\nimport toString from './toString.js';\n\n/**\n * Checks if `string` ends with the given target string.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {string} [target] The string to search for.\n * @param {number} [position=string.length] The position to search up to.\n * @returns {boolean} Returns `true` if `string` ends with `target`,\n *  else `false`.\n * @example\n *\n * _.endsWith('abc', 'c');\n * // => true\n *\n * _.endsWith('abc', 'b');\n * // => false\n *\n * _.endsWith('abc', 'b', 2);\n * // => true\n */\nfunction endsWith(string, target, position) {\n  string = toString(string);\n  target = baseToString(target);\n\n  var length = string.length;\n  position = position === undefined\n    ? length\n    : baseClamp(toInteger(position), 0, length);\n\n  var end = position;\n  position -= target.length;\n  return position >= 0 && string.slice(position, end) == target;\n}\n\nexport default endsWith;\n"]},"metadata":{},"sourceType":"module"}