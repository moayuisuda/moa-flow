{"ast":null,"code":"import { Shape } from '@antv/g';\nimport { Module, GlobalContainer } from 'mana-syringe';\nimport RBush from 'rbush';\nimport { DefaultRenderer, StyleRenderer, StyleRendererFactory } from './shapes/styles';\nimport { ImageRenderer } from './shapes/styles/Image';\nimport { GradientPool } from './shapes/GradientPool';\nimport { ImagePool } from './shapes/ImagePool';\nimport { PathGeneratorFactory, PathGenerator, CirclePath, EllipsePath, RectPath, LinePath, PolylinePath, PolygonPath, PathPath } from './shapes/paths';\nimport { TextRenderer } from './shapes/styles/Text';\nimport { CanvasRendererPlugin, RBushRoot } from './CanvasRendererPlugin';\nimport { LoadImagePlugin } from './LoadImagePlugin';\nimport { RBushNode } from './components/RBushNode';\nexport { PathGeneratorFactory, PathGenerator, StyleRenderer, RBushNode, RBushRoot, RBush };\n/**\n * register shape renderers\n */\n\nGlobalContainer.register({\n  token: {\n    token: PathGenerator,\n    named: Shape.CIRCLE\n  },\n  useValue: CirclePath\n});\nGlobalContainer.register({\n  token: {\n    token: PathGenerator,\n    named: Shape.ELLIPSE\n  },\n  useValue: EllipsePath\n});\nGlobalContainer.register({\n  token: {\n    token: PathGenerator,\n    named: Shape.RECT\n  },\n  useValue: RectPath\n});\nGlobalContainer.register({\n  token: {\n    token: PathGenerator,\n    named: Shape.LINE\n  },\n  useValue: LinePath\n});\nGlobalContainer.register({\n  token: {\n    token: PathGenerator,\n    named: Shape.POLYLINE\n  },\n  useValue: PolylinePath\n});\nGlobalContainer.register({\n  token: {\n    token: PathGenerator,\n    named: Shape.POLYGON\n  },\n  useValue: PolygonPath\n});\nGlobalContainer.register({\n  token: {\n    token: PathGenerator,\n    named: Shape.PATH\n  },\n  useValue: PathPath\n});\nGlobalContainer.register({\n  token: PathGeneratorFactory,\n  useFactory: function useFactory(ctx) {\n    var cache = {};\n    return function (tagName) {\n      if (!cache[tagName]) {\n        if (ctx.container.isBoundNamed(PathGenerator, tagName)) {\n          cache[tagName] = ctx.container.getNamed(PathGenerator, tagName);\n        }\n      }\n\n      return cache[tagName];\n    };\n  }\n});\nvar containerModule = Module(function (register) {\n  register(ImagePool);\n  register({\n    token: RBushRoot,\n    useValue: new RBush()\n  });\n  register(DefaultRenderer);\n  register(ImageRenderer);\n  register(TextRenderer);\n  register({\n    token: StyleRendererFactory,\n    useFactory: function useFactory(ctx) {\n      var cache = {};\n      return function (tagName) {\n        if (!cache[tagName]) {\n          if (ctx.container.isBoundNamed(StyleRenderer, tagName)) {\n            cache[tagName] = ctx.container.getNamed(StyleRenderer, tagName);\n          }\n        }\n\n        return cache[tagName];\n      };\n    }\n  });\n  register(GradientPool);\n  register(CanvasRendererPlugin);\n  register(LoadImagePlugin);\n});\n\nvar Plugin =\n/** @class */\nfunction () {\n  function Plugin() {}\n\n  Plugin.prototype.init = function (container) {\n    container.load(containerModule, true);\n  };\n\n  Plugin.prototype.destroy = function (container) {\n    container.unload(containerModule);\n  };\n\n  return Plugin;\n}();\n\nexport { Plugin };","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/@antv/g-plugin-canvas-renderer/es/index.js"],"names":["Shape","Module","GlobalContainer","RBush","DefaultRenderer","StyleRenderer","StyleRendererFactory","ImageRenderer","GradientPool","ImagePool","PathGeneratorFactory","PathGenerator","CirclePath","EllipsePath","RectPath","LinePath","PolylinePath","PolygonPath","PathPath","TextRenderer","CanvasRendererPlugin","RBushRoot","LoadImagePlugin","RBushNode","register","token","named","CIRCLE","useValue","ELLIPSE","RECT","LINE","POLYLINE","POLYGON","PATH","useFactory","ctx","cache","tagName","container","isBoundNamed","getNamed","containerModule","Plugin","prototype","init","load","destroy","unload"],"mappings":"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","sourcesContent":["import { Shape } from '@antv/g';\nimport { Module, GlobalContainer } from 'mana-syringe';\nimport RBush from 'rbush';\nimport { DefaultRenderer, StyleRenderer, StyleRendererFactory } from './shapes/styles';\nimport { ImageRenderer } from './shapes/styles/Image';\nimport { GradientPool } from './shapes/GradientPool';\nimport { ImagePool } from './shapes/ImagePool';\nimport { PathGeneratorFactory, PathGenerator, CirclePath, EllipsePath, RectPath, LinePath, PolylinePath, PolygonPath, PathPath } from './shapes/paths';\nimport { TextRenderer } from './shapes/styles/Text';\nimport { CanvasRendererPlugin, RBushRoot } from './CanvasRendererPlugin';\nimport { LoadImagePlugin } from './LoadImagePlugin';\nimport { RBushNode } from './components/RBushNode';\nexport { PathGeneratorFactory, PathGenerator, StyleRenderer, RBushNode, RBushRoot, RBush };\n/**\n * register shape renderers\n */\n\nGlobalContainer.register({\n  token: {\n    token: PathGenerator,\n    named: Shape.CIRCLE\n  },\n  useValue: CirclePath\n});\nGlobalContainer.register({\n  token: {\n    token: PathGenerator,\n    named: Shape.ELLIPSE\n  },\n  useValue: EllipsePath\n});\nGlobalContainer.register({\n  token: {\n    token: PathGenerator,\n    named: Shape.RECT\n  },\n  useValue: RectPath\n});\nGlobalContainer.register({\n  token: {\n    token: PathGenerator,\n    named: Shape.LINE\n  },\n  useValue: LinePath\n});\nGlobalContainer.register({\n  token: {\n    token: PathGenerator,\n    named: Shape.POLYLINE\n  },\n  useValue: PolylinePath\n});\nGlobalContainer.register({\n  token: {\n    token: PathGenerator,\n    named: Shape.POLYGON\n  },\n  useValue: PolygonPath\n});\nGlobalContainer.register({\n  token: {\n    token: PathGenerator,\n    named: Shape.PATH\n  },\n  useValue: PathPath\n});\nGlobalContainer.register({\n  token: PathGeneratorFactory,\n  useFactory: function useFactory(ctx) {\n    var cache = {};\n    return function (tagName) {\n      if (!cache[tagName]) {\n        if (ctx.container.isBoundNamed(PathGenerator, tagName)) {\n          cache[tagName] = ctx.container.getNamed(PathGenerator, tagName);\n        }\n      }\n\n      return cache[tagName];\n    };\n  }\n});\nvar containerModule = Module(function (register) {\n  register(ImagePool);\n  register({\n    token: RBushRoot,\n    useValue: new RBush()\n  });\n  register(DefaultRenderer);\n  register(ImageRenderer);\n  register(TextRenderer);\n  register({\n    token: StyleRendererFactory,\n    useFactory: function useFactory(ctx) {\n      var cache = {};\n      return function (tagName) {\n        if (!cache[tagName]) {\n          if (ctx.container.isBoundNamed(StyleRenderer, tagName)) {\n            cache[tagName] = ctx.container.getNamed(StyleRenderer, tagName);\n          }\n        }\n\n        return cache[tagName];\n      };\n    }\n  });\n  register(GradientPool);\n  register(CanvasRendererPlugin);\n  register(LoadImagePlugin);\n});\n\nvar Plugin =\n/** @class */\nfunction () {\n  function Plugin() {}\n\n  Plugin.prototype.init = function (container) {\n    container.load(containerModule, true);\n  };\n\n  Plugin.prototype.destroy = function (container) {\n    container.unload(containerModule);\n  };\n\n  return Plugin;\n}();\n\nexport { Plugin };"]},"metadata":{},"sourceType":"module"}