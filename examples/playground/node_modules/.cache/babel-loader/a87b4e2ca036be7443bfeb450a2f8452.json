{"ast":null,"code":"import { __decorate, __metadata } from \"tslib\";\nimport { CanvasConfig, isBrowser } from '@antv/g';\nimport { inject, singleton } from 'mana-syringe';\n\nvar ImagePool =\n/** @class */\nfunction () {\n  function ImagePool() {\n    this.imageCache = {};\n    this.patternCache = {};\n  }\n\n  ImagePool.prototype.getImageSync = function (src) {\n    return this.imageCache[src];\n  };\n\n  ImagePool.prototype.getOrCreateImage = function (src) {\n    var _this = this;\n\n    if (this.imageCache[src]) {\n      return Promise.resolve(this.imageCache[src]);\n    } // @see https://github.com/antvis/g/issues/938\n\n\n    var createImage = this.canvasConfig.createImage;\n    return new Promise(function (resolve, reject) {\n      var image;\n\n      if (createImage) {\n        image = createImage();\n      } else if (isBrowser) {\n        image = new window.Image();\n      }\n\n      if (image) {\n        image.onload = function () {\n          resolve(image);\n        };\n\n        image.onerror = function (ev) {\n          reject(ev);\n        };\n\n        image.crossOrigin = 'Anonymous';\n        image.src = src;\n        _this.imageCache[src] = image;\n      }\n    });\n  };\n\n  ImagePool.prototype.getPatternSync = function (pattern) {\n    var patternKey = this.generatePatternKey(pattern);\n\n    if (this.patternCache[patternKey]) {\n      return this.patternCache[patternKey];\n    }\n  };\n\n  ImagePool.prototype.createPattern = function (patternParams, context) {\n    var _this = this;\n\n    return this.getOrCreateImage(patternParams.src).then(function (image) {\n      var patternKey = _this.generatePatternKey(patternParams); // @see https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/createPattern\n\n\n      var pattern = context.createPattern(image, patternParams.repetition);\n\n      if (pattern) {\n        _this.patternCache[patternKey] = pattern;\n      }\n\n      return _this.patternCache[patternKey];\n    });\n  };\n\n  ImagePool.prototype.generatePatternKey = function (pattern) {\n    var src = pattern.src,\n        repetition = pattern.repetition;\n    return \"pattern-\".concat(src, \"-\").concat(repetition);\n  };\n\n  __decorate([inject(CanvasConfig), __metadata(\"design:type\", Object)], ImagePool.prototype, \"canvasConfig\", void 0);\n\n  ImagePool = __decorate([singleton()], ImagePool);\n  return ImagePool;\n}();\n\nexport { ImagePool };","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/@antv/g-plugin-canvas-renderer/es/shapes/ImagePool.js"],"names":["__decorate","__metadata","CanvasConfig","isBrowser","inject","singleton","ImagePool","imageCache","patternCache","prototype","getImageSync","src","getOrCreateImage","_this","Promise","resolve","createImage","canvasConfig","reject","image","window","Image","onload","onerror","ev","crossOrigin","getPatternSync","pattern","patternKey","generatePatternKey","createPattern","patternParams","context","then","repetition","concat","Object"],"mappings":"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","sourcesContent":["import { __decorate, __metadata } from \"tslib\";\nimport { CanvasConfig, isBrowser } from '@antv/g';\nimport { inject, singleton } from 'mana-syringe';\n\nvar ImagePool =\n/** @class */\nfunction () {\n  function ImagePool() {\n    this.imageCache = {};\n    this.patternCache = {};\n  }\n\n  ImagePool.prototype.getImageSync = function (src) {\n    return this.imageCache[src];\n  };\n\n  ImagePool.prototype.getOrCreateImage = function (src) {\n    var _this = this;\n\n    if (this.imageCache[src]) {\n      return Promise.resolve(this.imageCache[src]);\n    } // @see https://github.com/antvis/g/issues/938\n\n\n    var createImage = this.canvasConfig.createImage;\n    return new Promise(function (resolve, reject) {\n      var image;\n\n      if (createImage) {\n        image = createImage();\n      } else if (isBrowser) {\n        image = new window.Image();\n      }\n\n      if (image) {\n        image.onload = function () {\n          resolve(image);\n        };\n\n        image.onerror = function (ev) {\n          reject(ev);\n        };\n\n        image.crossOrigin = 'Anonymous';\n        image.src = src;\n        _this.imageCache[src] = image;\n      }\n    });\n  };\n\n  ImagePool.prototype.getPatternSync = function (pattern) {\n    var patternKey = this.generatePatternKey(pattern);\n\n    if (this.patternCache[patternKey]) {\n      return this.patternCache[patternKey];\n    }\n  };\n\n  ImagePool.prototype.createPattern = function (patternParams, context) {\n    var _this = this;\n\n    return this.getOrCreateImage(patternParams.src).then(function (image) {\n      var patternKey = _this.generatePatternKey(patternParams); // @see https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/createPattern\n\n\n      var pattern = context.createPattern(image, patternParams.repetition);\n\n      if (pattern) {\n        _this.patternCache[patternKey] = pattern;\n      }\n\n      return _this.patternCache[patternKey];\n    });\n  };\n\n  ImagePool.prototype.generatePatternKey = function (pattern) {\n    var src = pattern.src,\n        repetition = pattern.repetition;\n    return \"pattern-\".concat(src, \"-\").concat(repetition);\n  };\n\n  __decorate([inject(CanvasConfig), __metadata(\"design:type\", Object)], ImagePool.prototype, \"canvasConfig\", void 0);\n\n  ImagePool = __decorate([singleton()], ImagePool);\n  return ImagePool;\n}();\n\nexport { ImagePool };"]},"metadata":{},"sourceType":"module"}