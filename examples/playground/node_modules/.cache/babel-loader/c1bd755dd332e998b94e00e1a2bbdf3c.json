{"ast":null,"code":"var zIndexWarningShowed = false;\nvar Z_INDEX_WARNING = \"ReactG: You are using \\\"zIndex\\\" attribute for an element.\\nreact-g may get confused with ordering. Just define correct order of elements in your render function of a component.\\n\";\n\nvar isEvent = function isEvent(key) {\n  return key.slice(0, 2) === 'on';\n};\n\nvar getEventName = function getEventName(key) {\n  return key.substr(2).toLowerCase();\n};\n\nexport var bindShapeEvent = function bindShapeEvent(newProps, instance) {\n  Object.keys(newProps).forEach(function (propKey) {\n    if (isEvent(propKey)) {\n      instance.addEventListener(getEventName(propKey), newProps[propKey]);\n    }\n  });\n};\nexport var updateProps = function updateProps(instance, newProps, oldProps) {\n  if (oldProps === void 0) {\n    oldProps = {};\n  } // don't use zIndex\n\n\n  if (!zIndexWarningShowed && 'zIndex' in newProps) {\n    console.warn(Z_INDEX_WARNING);\n    zIndexWarningShowed = true;\n  }\n\n  Object.keys(oldProps).forEach(function (key) {\n    var propChanged = oldProps[key] !== newProps[key];\n\n    if (propChanged) {\n      if (isEvent(key)) {\n        instance.removeEventListener(getEventName(key));\n      } else {\n        instance.removeAttribute(key);\n      }\n    }\n  });\n  Object.keys(newProps).forEach(function (key) {\n    var propChanged = oldProps[key] !== newProps[key];\n\n    if (propChanged) {\n      if (isEvent(key)) {\n        if (typeof newProps[key] === 'function') {\n          instance.addEventListener(getEventName(key), newProps[key]);\n        }\n      } else {\n        instance.setAttribute(key, newProps[key]);\n      }\n    }\n  });\n};","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/@antv/react-g/es/processProps.js"],"names":["zIndexWarningShowed","Z_INDEX_WARNING","isEvent","key","slice","getEventName","substr","toLowerCase","bindShapeEvent","newProps","instance","Object","keys","forEach","propKey","addEventListener","updateProps","oldProps","console","warn","propChanged","removeEventListener","removeAttribute","setAttribute"],"mappings":"AAAA,IAAIA,mBAAmB,GAAG,KAA1B;AACA,IAAIC,eAAe,GAAG,qLAAtB;;AAEA,IAAIC,OAAO,GAAG,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAClC,SAAOA,GAAG,CAACC,KAAJ,CAAU,CAAV,EAAa,CAAb,MAAoB,IAA3B;AACD,CAFD;;AAIA,IAAIC,YAAY,GAAG,SAASA,YAAT,CAAsBF,GAAtB,EAA2B;AAC5C,SAAOA,GAAG,CAACG,MAAJ,CAAW,CAAX,EAAcC,WAAd,EAAP;AACD,CAFD;;AAIA,OAAO,IAAIC,cAAc,GAAG,SAASA,cAAT,CAAwBC,QAAxB,EAAkCC,QAAlC,EAA4C;AACtEC,EAAAA,MAAM,CAACC,IAAP,CAAYH,QAAZ,EAAsBI,OAAtB,CAA8B,UAAUC,OAAV,EAAmB;AAC/C,QAAIZ,OAAO,CAACY,OAAD,CAAX,EAAsB;AACpBJ,MAAAA,QAAQ,CAACK,gBAAT,CAA0BV,YAAY,CAACS,OAAD,CAAtC,EAAiDL,QAAQ,CAACK,OAAD,CAAzD;AACD;AACF,GAJD;AAKD,CANM;AAOP,OAAO,IAAIE,WAAW,GAAG,SAASA,WAAT,CAAqBN,QAArB,EAA+BD,QAA/B,EAAyCQ,QAAzC,EAAmD;AAC1E,MAAIA,QAAQ,KAAK,KAAK,CAAtB,EAAyB;AACvBA,IAAAA,QAAQ,GAAG,EAAX;AACD,GAHyE,CAGxE;;;AAGF,MAAI,CAACjB,mBAAD,IAAwB,YAAYS,QAAxC,EAAkD;AAChDS,IAAAA,OAAO,CAACC,IAAR,CAAalB,eAAb;AACAD,IAAAA,mBAAmB,GAAG,IAAtB;AACD;;AAEDW,EAAAA,MAAM,CAACC,IAAP,CAAYK,QAAZ,EAAsBJ,OAAtB,CAA8B,UAAUV,GAAV,EAAe;AAC3C,QAAIiB,WAAW,GAAGH,QAAQ,CAACd,GAAD,CAAR,KAAkBM,QAAQ,CAACN,GAAD,CAA5C;;AAEA,QAAIiB,WAAJ,EAAiB;AACf,UAAIlB,OAAO,CAACC,GAAD,CAAX,EAAkB;AAChBO,QAAAA,QAAQ,CAACW,mBAAT,CAA6BhB,YAAY,CAACF,GAAD,CAAzC;AACD,OAFD,MAEO;AACLO,QAAAA,QAAQ,CAACY,eAAT,CAAyBnB,GAAzB;AACD;AACF;AACF,GAVD;AAWAQ,EAAAA,MAAM,CAACC,IAAP,CAAYH,QAAZ,EAAsBI,OAAtB,CAA8B,UAAUV,GAAV,EAAe;AAC3C,QAAIiB,WAAW,GAAGH,QAAQ,CAACd,GAAD,CAAR,KAAkBM,QAAQ,CAACN,GAAD,CAA5C;;AAEA,QAAIiB,WAAJ,EAAiB;AACf,UAAIlB,OAAO,CAACC,GAAD,CAAX,EAAkB;AAChB,YAAI,OAAOM,QAAQ,CAACN,GAAD,CAAf,KAAyB,UAA7B,EAAyC;AACvCO,UAAAA,QAAQ,CAACK,gBAAT,CAA0BV,YAAY,CAACF,GAAD,CAAtC,EAA6CM,QAAQ,CAACN,GAAD,CAArD;AACD;AACF,OAJD,MAIO;AACLO,QAAAA,QAAQ,CAACa,YAAT,CAAsBpB,GAAtB,EAA2BM,QAAQ,CAACN,GAAD,CAAnC;AACD;AACF;AACF,GAZD;AAaD,CAnCM","sourcesContent":["var zIndexWarningShowed = false;\nvar Z_INDEX_WARNING = \"ReactG: You are using \\\"zIndex\\\" attribute for an element.\\nreact-g may get confused with ordering. Just define correct order of elements in your render function of a component.\\n\";\n\nvar isEvent = function isEvent(key) {\n  return key.slice(0, 2) === 'on';\n};\n\nvar getEventName = function getEventName(key) {\n  return key.substr(2).toLowerCase();\n};\n\nexport var bindShapeEvent = function bindShapeEvent(newProps, instance) {\n  Object.keys(newProps).forEach(function (propKey) {\n    if (isEvent(propKey)) {\n      instance.addEventListener(getEventName(propKey), newProps[propKey]);\n    }\n  });\n};\nexport var updateProps = function updateProps(instance, newProps, oldProps) {\n  if (oldProps === void 0) {\n    oldProps = {};\n  } // don't use zIndex\n\n\n  if (!zIndexWarningShowed && 'zIndex' in newProps) {\n    console.warn(Z_INDEX_WARNING);\n    zIndexWarningShowed = true;\n  }\n\n  Object.keys(oldProps).forEach(function (key) {\n    var propChanged = oldProps[key] !== newProps[key];\n\n    if (propChanged) {\n      if (isEvent(key)) {\n        instance.removeEventListener(getEventName(key));\n      } else {\n        instance.removeAttribute(key);\n      }\n    }\n  });\n  Object.keys(newProps).forEach(function (key) {\n    var propChanged = oldProps[key] !== newProps[key];\n\n    if (propChanged) {\n      if (isEvent(key)) {\n        if (typeof newProps[key] === 'function') {\n          instance.addEventListener(getEventName(key), newProps[key]);\n        }\n      } else {\n        instance.setAttribute(key, newProps[key]);\n      }\n    }\n  });\n};"]},"metadata":{},"sourceType":"module"}