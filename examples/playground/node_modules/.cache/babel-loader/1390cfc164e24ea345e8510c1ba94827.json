{"ast":null,"code":"import baseUnset from './_baseUnset.js';\nimport isIndex from './_isIndex.js';\n/** Used for built-in method references. */\n\nvar arrayProto = Array.prototype;\n/** Built-in value references. */\n\nvar splice = arrayProto.splice;\n/**\n * The base implementation of `_.pullAt` without support for individual\n * indexes or capturing the removed elements.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {number[]} indexes The indexes of elements to remove.\n * @returns {Array} Returns `array`.\n */\n\nfunction basePullAt(array, indexes) {\n  var length = array ? indexes.length : 0,\n      lastIndex = length - 1;\n\n  while (length--) {\n    var index = indexes[length];\n\n    if (length == lastIndex || index !== previous) {\n      var previous = index;\n\n      if (isIndex(index)) {\n        splice.call(array, index, 1);\n      } else {\n        baseUnset(array, index);\n      }\n    }\n  }\n\n  return array;\n}\n\nexport default basePullAt;","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/lodash-es/_basePullAt.js"],"names":["baseUnset","isIndex","arrayProto","Array","prototype","splice","basePullAt","array","indexes","length","lastIndex","index","previous","call"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,iBAAtB;AACA,OAAOC,OAAP,MAAoB,eAApB;AAEA;;AACA,IAAIC,UAAU,GAAGC,KAAK,CAACC,SAAvB;AAEA;;AACA,IAAIC,MAAM,GAAGH,UAAU,CAACG,MAAxB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,UAAT,CAAoBC,KAApB,EAA2BC,OAA3B,EAAoC;AAClC,MAAIC,MAAM,GAAGF,KAAK,GAAGC,OAAO,CAACC,MAAX,GAAoB,CAAtC;AAAA,MACIC,SAAS,GAAGD,MAAM,GAAG,CADzB;;AAGA,SAAOA,MAAM,EAAb,EAAiB;AACf,QAAIE,KAAK,GAAGH,OAAO,CAACC,MAAD,CAAnB;;AACA,QAAIA,MAAM,IAAIC,SAAV,IAAuBC,KAAK,KAAKC,QAArC,EAA+C;AAC7C,UAAIA,QAAQ,GAAGD,KAAf;;AACA,UAAIV,OAAO,CAACU,KAAD,CAAX,EAAoB;AAClBN,QAAAA,MAAM,CAACQ,IAAP,CAAYN,KAAZ,EAAmBI,KAAnB,EAA0B,CAA1B;AACD,OAFD,MAEO;AACLX,QAAAA,SAAS,CAACO,KAAD,EAAQI,KAAR,CAAT;AACD;AACF;AACF;;AACD,SAAOJ,KAAP;AACD;;AAED,eAAeD,UAAf","sourcesContent":["import baseUnset from './_baseUnset.js';\nimport isIndex from './_isIndex.js';\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * The base implementation of `_.pullAt` without support for individual\n * indexes or capturing the removed elements.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {number[]} indexes The indexes of elements to remove.\n * @returns {Array} Returns `array`.\n */\nfunction basePullAt(array, indexes) {\n  var length = array ? indexes.length : 0,\n      lastIndex = length - 1;\n\n  while (length--) {\n    var index = indexes[length];\n    if (length == lastIndex || index !== previous) {\n      var previous = index;\n      if (isIndex(index)) {\n        splice.call(array, index, 1);\n      } else {\n        baseUnset(array, index);\n      }\n    }\n  }\n  return array;\n}\n\nexport default basePullAt;\n"]},"metadata":{},"sourceType":"module"}