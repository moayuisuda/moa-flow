{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nimport { Utils } from '../core';\nimport { contributionInjectOption } from '../contribution/contribution-register';\nimport { ContainerModule } from 'inversify';\nimport { Register } from '../register';\nexport var SyringeModule = /*#__PURE__*/function () {\n  /**\n   * @readonly\n   * module unique id\n   */\n  function SyringeModule(registry) {\n    var _this = this;\n\n    _classCallCheck(this, SyringeModule);\n\n    this.id = void 0;\n    this.inversifyModule = void 0;\n    this.baseRegistry = void 0;\n    this.optionCollection = void 0;\n\n    this.inversifyRegister = function (bind, unbind, isBound, rebind) {\n      var inversifyRegister = {\n        bind: bind,\n        unbind: unbind,\n        isBound: isBound,\n        rebind: rebind\n      };\n\n      var register = function register(token) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n        if (Utils.isInjectOption(token)) {\n          Register.resolveOption(inversifyRegister, token);\n        } else {\n          Register.resolveTarget(inversifyRegister, token, options);\n        }\n      };\n\n      if (_this.baseRegistry) {\n        _this.baseRegistry(register);\n      }\n\n      if (_this.optionCollection) {\n        _this.optionCollection.forEach(function (option) {\n          return register(option);\n        });\n      }\n    };\n\n    this.baseRegistry = registry;\n    this.inversifyModule = new ContainerModule(this.inversifyRegister);\n    this.id = this.inversifyModule.id;\n  }\n\n  _createClass(SyringeModule, [{\n    key: \"options\",\n    get: function get() {\n      if (!this.optionCollection) {\n        this.optionCollection = [];\n      }\n\n      return this.optionCollection;\n    }\n  }, {\n    key: \"register\",\n    value: function register() {\n      var _this2 = this;\n\n      for (var _len = arguments.length, options = new Array(_len), _key = 0; _key < _len; _key++) {\n        options[_key] = arguments[_key];\n      }\n\n      options.forEach(function (option) {\n        return _this2.options.push(option);\n      });\n      return this;\n    }\n  }, {\n    key: \"contribution\",\n    value: function contribution() {\n      var _this3 = this;\n\n      for (var _len2 = arguments.length, tokens = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        tokens[_key2] = arguments[_key2];\n      }\n\n      tokens.forEach(function (token) {\n        return _this3.options.push(contributionInjectOption(token));\n      });\n      return this;\n    }\n  }]);\n\n  return SyringeModule;\n}();\nexport function isSyringeModule(data) {\n  return data && 'inversifyModule' in data;\n}","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/mana-syringe/es/module/syringe-module.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","Utils","contributionInjectOption","ContainerModule","Register","SyringeModule","registry","_this","id","inversifyModule","baseRegistry","optionCollection","inversifyRegister","bind","unbind","isBound","rebind","register","token","options","arguments","undefined","isInjectOption","resolveOption","resolveTarget","forEach","option","get","value","_this2","_len","Array","_key","push","contribution","_this3","_len2","tokens","_key2","isSyringeModule","data"],"mappings":"AAAA,SAASA,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;AAAE,MAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;AAAE,UAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;AAA2D;AAAE;;AAEzJ,SAASC,iBAAT,CAA2BC,MAA3B,EAAmCC,KAAnC,EAA0C;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AAAE,QAAIE,UAAU,GAAGH,KAAK,CAACC,CAAD,CAAtB;AAA2BE,IAAAA,UAAU,CAACC,UAAX,GAAwBD,UAAU,CAACC,UAAX,IAAyB,KAAjD;AAAwDD,IAAAA,UAAU,CAACE,YAAX,GAA0B,IAA1B;AAAgC,QAAI,WAAWF,UAAf,EAA2BA,UAAU,CAACG,QAAX,GAAsB,IAAtB;AAA4BC,IAAAA,MAAM,CAACC,cAAP,CAAsBT,MAAtB,EAA8BI,UAAU,CAACM,GAAzC,EAA8CN,UAA9C;AAA4D;AAAE;;AAE7T,SAASO,YAAT,CAAsBd,WAAtB,EAAmCe,UAAnC,EAA+CC,WAA/C,EAA4D;AAAE,MAAID,UAAJ,EAAgBb,iBAAiB,CAACF,WAAW,CAACiB,SAAb,EAAwBF,UAAxB,CAAjB;AAAsD,MAAIC,WAAJ,EAAiBd,iBAAiB,CAACF,WAAD,EAAcgB,WAAd,CAAjB;AAA6CL,EAAAA,MAAM,CAACC,cAAP,CAAsBZ,WAAtB,EAAmC,WAAnC,EAAgD;AAAEU,IAAAA,QAAQ,EAAE;AAAZ,GAAhD;AAAsE,SAAOV,WAAP;AAAqB;;AAE7R,SAASkB,KAAT,QAAsB,SAAtB;AACA,SAASC,wBAAT,QAAyC,uCAAzC;AACA,SAASC,eAAT,QAAgC,WAAhC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAO,IAAIC,aAAa,GAAG,aAAa,YAAY;AAClD;AACF;AACA;AACA;AACE,WAASA,aAAT,CAAuBC,QAAvB,EAAiC;AAC/B,QAAIC,KAAK,GAAG,IAAZ;;AAEA1B,IAAAA,eAAe,CAAC,IAAD,EAAOwB,aAAP,CAAf;;AAEA,SAAKG,EAAL,GAAU,KAAK,CAAf;AACA,SAAKC,eAAL,GAAuB,KAAK,CAA5B;AACA,SAAKC,YAAL,GAAoB,KAAK,CAAzB;AACA,SAAKC,gBAAL,GAAwB,KAAK,CAA7B;;AAEA,SAAKC,iBAAL,GAAyB,UAAUC,IAAV,EAAgBC,MAAhB,EAAwBC,OAAxB,EAAiCC,MAAjC,EAAyC;AAChE,UAAIJ,iBAAiB,GAAG;AACtBC,QAAAA,IAAI,EAAEA,IADgB;AAEtBC,QAAAA,MAAM,EAAEA,MAFc;AAGtBC,QAAAA,OAAO,EAAEA,OAHa;AAItBC,QAAAA,MAAM,EAAEA;AAJc,OAAxB;;AAOA,UAAIC,QAAQ,GAAG,SAASA,QAAT,CAAkBC,KAAlB,EAAyB;AACtC,YAAIC,OAAO,GAAGC,SAAS,CAAC/B,MAAV,GAAmB,CAAnB,IAAwB+B,SAAS,CAAC,CAAD,CAAT,KAAiBC,SAAzC,GAAqDD,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;;AAEA,YAAInB,KAAK,CAACqB,cAAN,CAAqBJ,KAArB,CAAJ,EAAiC;AAC/Bd,UAAAA,QAAQ,CAACmB,aAAT,CAAuBX,iBAAvB,EAA0CM,KAA1C;AACD,SAFD,MAEO;AACLd,UAAAA,QAAQ,CAACoB,aAAT,CAAuBZ,iBAAvB,EAA0CM,KAA1C,EAAiDC,OAAjD;AACD;AACF,OARD;;AAUA,UAAIZ,KAAK,CAACG,YAAV,EAAwB;AACtBH,QAAAA,KAAK,CAACG,YAAN,CAAmBO,QAAnB;AACD;;AAED,UAAIV,KAAK,CAACI,gBAAV,EAA4B;AAC1BJ,QAAAA,KAAK,CAACI,gBAAN,CAAuBc,OAAvB,CAA+B,UAAUC,MAAV,EAAkB;AAC/C,iBAAOT,QAAQ,CAACS,MAAD,CAAf;AACD,SAFD;AAGD;AACF,KA3BD;;AA6BA,SAAKhB,YAAL,GAAoBJ,QAApB;AACA,SAAKG,eAAL,GAAuB,IAAIN,eAAJ,CAAoB,KAAKS,iBAAzB,CAAvB;AACA,SAAKJ,EAAL,GAAU,KAAKC,eAAL,CAAqBD,EAA/B;AACD;;AAEDX,EAAAA,YAAY,CAACQ,aAAD,EAAgB,CAAC;AAC3BT,IAAAA,GAAG,EAAE,SADsB;AAE3B+B,IAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAClB,UAAI,CAAC,KAAKhB,gBAAV,EAA4B;AAC1B,aAAKA,gBAAL,GAAwB,EAAxB;AACD;;AAED,aAAO,KAAKA,gBAAZ;AACD;AAR0B,GAAD,EASzB;AACDf,IAAAA,GAAG,EAAE,UADJ;AAEDgC,IAAAA,KAAK,EAAE,SAASX,QAAT,GAAoB;AACzB,UAAIY,MAAM,GAAG,IAAb;;AAEA,WAAK,IAAIC,IAAI,GAAGV,SAAS,CAAC/B,MAArB,EAA6B8B,OAAO,GAAG,IAAIY,KAAJ,CAAUD,IAAV,CAAvC,EAAwDE,IAAI,GAAG,CAApE,EAAuEA,IAAI,GAAGF,IAA9E,EAAoFE,IAAI,EAAxF,EAA4F;AAC1Fb,QAAAA,OAAO,CAACa,IAAD,CAAP,GAAgBZ,SAAS,CAACY,IAAD,CAAzB;AACD;;AAEDb,MAAAA,OAAO,CAACM,OAAR,CAAgB,UAAUC,MAAV,EAAkB;AAChC,eAAOG,MAAM,CAACV,OAAP,CAAec,IAAf,CAAoBP,MAApB,CAAP;AACD,OAFD;AAGA,aAAO,IAAP;AACD;AAbA,GATyB,EAuBzB;AACD9B,IAAAA,GAAG,EAAE,cADJ;AAEDgC,IAAAA,KAAK,EAAE,SAASM,YAAT,GAAwB;AAC7B,UAAIC,MAAM,GAAG,IAAb;;AAEA,WAAK,IAAIC,KAAK,GAAGhB,SAAS,CAAC/B,MAAtB,EAA8BgD,MAAM,GAAG,IAAIN,KAAJ,CAAUK,KAAV,CAAvC,EAAyDE,KAAK,GAAG,CAAtE,EAAyEA,KAAK,GAAGF,KAAjF,EAAwFE,KAAK,EAA7F,EAAiG;AAC/FD,QAAAA,MAAM,CAACC,KAAD,CAAN,GAAgBlB,SAAS,CAACkB,KAAD,CAAzB;AACD;;AAEDD,MAAAA,MAAM,CAACZ,OAAP,CAAe,UAAUP,KAAV,EAAiB;AAC9B,eAAOiB,MAAM,CAAChB,OAAP,CAAec,IAAf,CAAoB/B,wBAAwB,CAACgB,KAAD,CAA5C,CAAP;AACD,OAFD;AAGA,aAAO,IAAP;AACD;AAbA,GAvByB,CAAhB,CAAZ;;AAuCA,SAAOb,aAAP;AACD,CAzFuC,EAAjC;AA0FP,OAAO,SAASkC,eAAT,CAAyBC,IAAzB,EAA+B;AACpC,SAAOA,IAAI,IAAI,qBAAqBA,IAApC;AACD","sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nimport { Utils } from '../core';\nimport { contributionInjectOption } from '../contribution/contribution-register';\nimport { ContainerModule } from 'inversify';\nimport { Register } from '../register';\nexport var SyringeModule = /*#__PURE__*/function () {\n  /**\n   * @readonly\n   * module unique id\n   */\n  function SyringeModule(registry) {\n    var _this = this;\n\n    _classCallCheck(this, SyringeModule);\n\n    this.id = void 0;\n    this.inversifyModule = void 0;\n    this.baseRegistry = void 0;\n    this.optionCollection = void 0;\n\n    this.inversifyRegister = function (bind, unbind, isBound, rebind) {\n      var inversifyRegister = {\n        bind: bind,\n        unbind: unbind,\n        isBound: isBound,\n        rebind: rebind\n      };\n\n      var register = function register(token) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n        if (Utils.isInjectOption(token)) {\n          Register.resolveOption(inversifyRegister, token);\n        } else {\n          Register.resolveTarget(inversifyRegister, token, options);\n        }\n      };\n\n      if (_this.baseRegistry) {\n        _this.baseRegistry(register);\n      }\n\n      if (_this.optionCollection) {\n        _this.optionCollection.forEach(function (option) {\n          return register(option);\n        });\n      }\n    };\n\n    this.baseRegistry = registry;\n    this.inversifyModule = new ContainerModule(this.inversifyRegister);\n    this.id = this.inversifyModule.id;\n  }\n\n  _createClass(SyringeModule, [{\n    key: \"options\",\n    get: function get() {\n      if (!this.optionCollection) {\n        this.optionCollection = [];\n      }\n\n      return this.optionCollection;\n    }\n  }, {\n    key: \"register\",\n    value: function register() {\n      var _this2 = this;\n\n      for (var _len = arguments.length, options = new Array(_len), _key = 0; _key < _len; _key++) {\n        options[_key] = arguments[_key];\n      }\n\n      options.forEach(function (option) {\n        return _this2.options.push(option);\n      });\n      return this;\n    }\n  }, {\n    key: \"contribution\",\n    value: function contribution() {\n      var _this3 = this;\n\n      for (var _len2 = arguments.length, tokens = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        tokens[_key2] = arguments[_key2];\n      }\n\n      tokens.forEach(function (token) {\n        return _this3.options.push(contributionInjectOption(token));\n      });\n      return this;\n    }\n  }]);\n\n  return SyringeModule;\n}();\nexport function isSyringeModule(data) {\n  return data && 'inversifyModule' in data;\n}"]},"metadata":{},"sourceType":"module"}