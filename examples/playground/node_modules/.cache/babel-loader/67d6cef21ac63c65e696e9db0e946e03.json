{"ast":null,"code":"import { __read } from \"tslib\";\n/**\n * ported from https://github.com/okikio/native/blob/master/packages/animate/src/custom-easing.ts\n */\n\nimport { bezier } from './bezier-easing';\nexport var convertToDash = function convertToDash(str) {\n  str = str.replace(/([A-Z])/g, function (letter) {\n    return \"-\".concat(letter.toLowerCase());\n  }); // Remove first dash\n\n  return str.charAt(0) === '-' ? str.substr(1) : str;\n};\nexport var limit = function limit(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n};\n/**\n  Easing Functions from anime.js, they are tried and true, so, its better to use them instead of other alternatives\n*/\n\nexport var Quad = function Quad(t) {\n  return Math.pow(t, 2);\n};\nexport var Cubic = function Cubic(t) {\n  return Math.pow(t, 3);\n};\nexport var Quart = function Quart(t) {\n  return Math.pow(t, 4);\n};\nexport var Quint = function Quint(t) {\n  return Math.pow(t, 5);\n};\nexport var Expo = function Expo(t) {\n  return Math.pow(t, 6);\n};\nexport var Sine = function Sine(t) {\n  return 1 - Math.cos(t * Math.PI / 2);\n};\nexport var Circ = function Circ(t) {\n  return 1 - Math.sqrt(1 - t * t);\n};\nexport var Back = function Back(t) {\n  return t * t * (3 * t - 2);\n};\nexport var Bounce = function Bounce(t) {\n  var pow2,\n      b = 4;\n\n  while (t < ((pow2 = Math.pow(2, --b)) - 1) / 11) {}\n\n  return 1 / Math.pow(4, 3 - b) - 7.5625 * Math.pow((pow2 * 3 - 2) / 22 - t, 2);\n};\nexport var Elastic = function Elastic(t, params) {\n  if (params === void 0) {\n    params = [];\n  }\n\n  var _a = __read(params, 2),\n      _b = _a[0],\n      amplitude = _b === void 0 ? 1 : _b,\n      _c = _a[1],\n      period = _c === void 0 ? 0.5 : _c;\n\n  var a = limit(Number(amplitude), 1, 10);\n  var p = limit(Number(period), 0.1, 2);\n  if (t === 0 || t === 1) return t;\n  return -a * Math.pow(2, 10 * (t - 1)) * Math.sin((t - 1 - p / (Math.PI * 2) * Math.asin(1 / a)) * (Math.PI * 2) / p);\n};\nexport var Spring = function Spring(t, params, duration) {\n  if (params === void 0) {\n    params = [];\n  }\n\n  var _a = __read(params, 4),\n      _b = _a[0],\n      mass = _b === void 0 ? 1 : _b,\n      _c = _a[1],\n      stiffness = _c === void 0 ? 100 : _c,\n      _d = _a[2],\n      damping = _d === void 0 ? 10 : _d,\n      _e = _a[3],\n      velocity = _e === void 0 ? 0 : _e;\n\n  mass = limit(mass, 0.1, 1000);\n  stiffness = limit(stiffness, 0.1, 1000);\n  damping = limit(damping, 0.1, 1000);\n  velocity = limit(velocity, 0.1, 1000);\n  var w0 = Math.sqrt(stiffness / mass);\n  var zeta = damping / (2 * Math.sqrt(stiffness * mass));\n  var wd = zeta < 1 ? w0 * Math.sqrt(1 - zeta * zeta) : 0;\n  var a = 1;\n  var b = zeta < 1 ? (zeta * w0 + -velocity) / wd : -velocity + w0;\n  var progress = duration ? duration * t / 1000 : t;\n\n  if (zeta < 1) {\n    progress = Math.exp(-progress * zeta * w0) * (a * Math.cos(wd * progress) + b * Math.sin(wd * progress));\n  } else {\n    progress = (a + b * progress) * Math.exp(-progress * w0);\n  }\n\n  if (t === 0 || t === 1) return t;\n  return 1 - progress;\n};\n/**\n * Cache the durations at set easing parameters\n */\n\nexport var EasingDurationCache = new Map();\n/**\n * The threshold for an infinite loop\n */\n\nexport var INTINITE_LOOP_LIMIT = 10000;\n/** Convert easing parameters to Array of numbers, e.g. \"spring(2, 500)\" to [2, 500] */\n\nexport var parseEasingParameters = function parseEasingParameters(str) {\n  var match = /(\\(|\\s)([^)]+)\\)?/.exec(str);\n  return match ? match[2].split(',').map(function (value) {\n    var num = parseFloat(value);\n    return !Number.isNaN(num) ? num : value.trim();\n  }) : [];\n};\n/**\n * The spring easing function will only look smooth at certain durations, with certain parameters.\n * This functions returns the optimal duration to create a smooth springy animation based on physics\n *\n * Note: it can also be used to determine the optimal duration of other types of easing function, but be careful of 'in-'\n * easing functions, because of the nature of the function it can sometimes create an infinite loop, I suggest only using\n * `getEasingDuration` for `spring`, specifically 'out-spring' and 'spring'\n */\n// export const getEasingDuration = (easing: string | TypeEasingFunction = 'spring') => {\n//   if (EasingDurationCache.has(easing)) return EasingDurationCache.get(easing);\n//   // eslint-disable-next-line @typescript-eslint/no-use-before-define\n//   const easingFunction = typeof easing == 'function' ? easing : getEasingFunction(easing as string);\n//   const params = typeof easing == 'function' ? [] : parseEasingParameters(easing);\n//   const frame = 1 / 6;\n//   let elapsed = 0;\n//   let rest = 0;\n//   let count = 0;\n//   while (++count < INTINITE_LOOP_LIMIT) {\n//     elapsed += frame;\n//     if (easingFunction(elapsed, params, undefined) === 1) {\n//       rest++;\n//       if (rest >= 16) break;\n//     } else {\n//       rest = 0;\n//     }\n//   }\n//   const duration = elapsed * frame * 1000;\n//   EasingDurationCache.set(easing, duration);\n//   return duration;\n// };\n\n/**\n  These Easing Functions are based off of the Sozi Project's easing functions\n  https://github.com/sozi-projects/Sozi/blob/d72e44ebd580dc7579d1e177406ad41e632f961d/src/js/player/Timing.js\n*/\n\nexport var Steps = function Steps(t, params) {\n  if (params === void 0) {\n    params = [];\n  }\n\n  var _a = __read(params, 2),\n      _b = _a[0],\n      steps = _b === void 0 ? 10 : _b,\n      type = _a[1];\n\n  var trunc = type == 'start' ? Math.ceil : Math.floor;\n  return trunc(limit(t, 0, 1) * steps) / steps;\n}; // @ts-ignore\n\nexport var Bezier = function Bezier(t, params) {\n  if (params === void 0) {\n    params = [];\n  }\n\n  var _a = __read(params, 4),\n      mX1 = _a[0],\n      mY1 = _a[1],\n      mX2 = _a[2],\n      mY2 = _a[3];\n\n  return bezier(mX1, mY1, mX2, mY2)(t);\n};\n/** The default `ease-in` easing function */\n\nexport var easein = bezier(0.42, 0.0, 1.0, 1.0);\n/** Converts easing functions to their `out`counter parts */\n\nexport var EaseOut = function EaseOut(ease) {\n  return function (t, params, duration) {\n    if (params === void 0) {\n      params = [];\n    }\n\n    return 1 - ease(1 - t, params, duration);\n  };\n};\n/** Converts easing functions to their `in-out` counter parts */\n\nexport var EaseInOut = function EaseInOut(ease) {\n  return function (t, params, duration) {\n    if (params === void 0) {\n      params = [];\n    }\n\n    return t < 0.5 ? ease(t * 2, params, duration) / 2 : 1 - ease(t * -2 + 2, params, duration) / 2;\n  };\n};\n/** Converts easing functions to their `out-in` counter parts */\n\nexport var EaseOutIn = function EaseOutIn(ease) {\n  return function (t, params, duration) {\n    if (params === void 0) {\n      params = [];\n    }\n\n    return t < 0.5 ? (1 - ease(1 - t * 2, params, duration)) / 2 : (ease(t * 2 - 1, params, duration) + 1) / 2;\n  };\n};\n/**\n * The default list of easing functions, do note this is different from {@link EASING}\n */\n\nexport var EasingFunctions = {\n  steps: Steps,\n  'step-start': function stepStart(t) {\n    return Steps(t, [1, 'start']);\n  },\n  'step-end': function stepEnd(t) {\n    return Steps(t, [1, 'end']);\n  },\n  linear: function linear(t) {\n    return t;\n  },\n  'cubic-bezier': Bezier,\n  ease: function ease(t) {\n    return Bezier(t, [0.25, 0.1, 0.25, 1.0]);\n  },\n  in: easein,\n  out: EaseOut(easein),\n  'in-out': EaseInOut(easein),\n  'out-in': EaseOutIn(easein),\n  'in-quad': Quad,\n  'out-quad': EaseOut(Quad),\n  'in-out-quad': EaseInOut(Quad),\n  'out-in-quad': EaseOutIn(Quad),\n  'in-cubic': Cubic,\n  'out-cubic': EaseOut(Cubic),\n  'in-out-cubic': EaseInOut(Cubic),\n  'out-in-cubic': EaseOutIn(Cubic),\n  'in-quart': Quart,\n  'out-quart': EaseOut(Quart),\n  'in-out-quart': EaseInOut(Quart),\n  'out-in-quart': EaseOutIn(Quart),\n  'in-quint': Quint,\n  'out-quint': EaseOut(Quint),\n  'in-out-quint': EaseInOut(Quint),\n  'out-in-quint': EaseOutIn(Quint),\n  'in-expo': Expo,\n  'out-expo': EaseOut(Expo),\n  'in-out-expo': EaseInOut(Expo),\n  'out-in-expo': EaseOutIn(Expo),\n  'in-sine': Sine,\n  'out-sine': EaseOut(Sine),\n  'in-out-sine': EaseInOut(Sine),\n  'out-in-sine': EaseOutIn(Sine),\n  'in-circ': Circ,\n  'out-circ': EaseOut(Circ),\n  'in-out-circ': EaseInOut(Circ),\n  'out-in-circ': EaseOutIn(Circ),\n  'in-back': Back,\n  'out-back': EaseOut(Back),\n  'in-out-back': EaseInOut(Back),\n  'out-in-back': EaseOutIn(Back),\n  'in-bounce': Bounce,\n  'out-bounce': EaseOut(Bounce),\n  'in-out-bounce': EaseInOut(Bounce),\n  'out-in-bounce': EaseOutIn(Bounce),\n  'in-elastic': Elastic,\n  'out-elastic': EaseOut(Elastic),\n  'in-out-elastic': EaseInOut(Elastic),\n  'out-in-elastic': EaseOutIn(Elastic),\n  spring: Spring,\n  'spring-in': Spring,\n  'spring-out': EaseOut(Spring),\n  'spring-in-out': EaseInOut(Spring),\n  'spring-out-in': EaseOutIn(Spring)\n};\n/**\n * Convert string easing to their proper form\n */\n\nexport var complexEasingSyntax = function complexEasingSyntax(ease) {\n  return convertToDash(ease).replace(/^ease-/, '') // Remove the \"ease-\" keyword\n  .replace(/(\\(|\\s).+/, '') // Remove the function brackets and parameters\n  .toLowerCase().trim();\n};\n/** Re-maps a number from one range to another. Numbers outside the range are not clamped to 0 and 1, because out-of-range values are often intentional and useful. */\n\nexport var getEasingFunction = function getEasingFunction(ease) {\n  return EasingFunctions[complexEasingSyntax(ease)] || EasingFunctions.linear;\n}; // /**\n//  * Allows you to register new easing functions\n//  */\n// export const registerEasingFunction = (key: string, fn: TypeEasingFunction) => {\n//   Object.assign(EasingFunctions, {\n//     [key]: fn,\n//   });\n// };\n// /**\n//  * Allows you to register multiple new easing functions\n//  */\n// export const registerEasingFunctions = (...obj: typeof EasingFunctions[]) => {\n//   Object.assign(EasingFunctions, ...obj);\n// };","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/@antv/g/es/utils/custom-easing.js"],"names":["__read","bezier","convertToDash","str","replace","letter","concat","toLowerCase","charAt","substr","limit","value","min","max","Math","Quad","t","pow","Cubic","Quart","Quint","Expo","Sine","cos","PI","Circ","sqrt","Back","Bounce","pow2","b","Elastic","params","_a","_b","amplitude","_c","period","a","Number","p","sin","asin","Spring","duration","mass","stiffness","_d","damping","_e","velocity","w0","zeta","wd","progress","exp","EasingDurationCache","Map","INTINITE_LOOP_LIMIT","parseEasingParameters","match","exec","split","map","num","parseFloat","isNaN","trim","Steps","steps","type","trunc","ceil","floor","Bezier","mX1","mY1","mX2","mY2","easein","EaseOut","ease","EaseInOut","EaseOutIn","EasingFunctions","stepStart","stepEnd","linear","in","out","spring","complexEasingSyntax","getEasingFunction"],"mappings":"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","sourcesContent":["import { __read } from \"tslib\";\n/**\n * ported from https://github.com/okikio/native/blob/master/packages/animate/src/custom-easing.ts\n */\n\nimport { bezier } from './bezier-easing';\nexport var convertToDash = function convertToDash(str) {\n  str = str.replace(/([A-Z])/g, function (letter) {\n    return \"-\".concat(letter.toLowerCase());\n  }); // Remove first dash\n\n  return str.charAt(0) === '-' ? str.substr(1) : str;\n};\nexport var limit = function limit(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n};\n/**\n  Easing Functions from anime.js, they are tried and true, so, its better to use them instead of other alternatives\n*/\n\nexport var Quad = function Quad(t) {\n  return Math.pow(t, 2);\n};\nexport var Cubic = function Cubic(t) {\n  return Math.pow(t, 3);\n};\nexport var Quart = function Quart(t) {\n  return Math.pow(t, 4);\n};\nexport var Quint = function Quint(t) {\n  return Math.pow(t, 5);\n};\nexport var Expo = function Expo(t) {\n  return Math.pow(t, 6);\n};\nexport var Sine = function Sine(t) {\n  return 1 - Math.cos(t * Math.PI / 2);\n};\nexport var Circ = function Circ(t) {\n  return 1 - Math.sqrt(1 - t * t);\n};\nexport var Back = function Back(t) {\n  return t * t * (3 * t - 2);\n};\nexport var Bounce = function Bounce(t) {\n  var pow2,\n      b = 4;\n\n  while (t < ((pow2 = Math.pow(2, --b)) - 1) / 11) {}\n\n  return 1 / Math.pow(4, 3 - b) - 7.5625 * Math.pow((pow2 * 3 - 2) / 22 - t, 2);\n};\nexport var Elastic = function Elastic(t, params) {\n  if (params === void 0) {\n    params = [];\n  }\n\n  var _a = __read(params, 2),\n      _b = _a[0],\n      amplitude = _b === void 0 ? 1 : _b,\n      _c = _a[1],\n      period = _c === void 0 ? 0.5 : _c;\n\n  var a = limit(Number(amplitude), 1, 10);\n  var p = limit(Number(period), 0.1, 2);\n  if (t === 0 || t === 1) return t;\n  return -a * Math.pow(2, 10 * (t - 1)) * Math.sin((t - 1 - p / (Math.PI * 2) * Math.asin(1 / a)) * (Math.PI * 2) / p);\n};\nexport var Spring = function Spring(t, params, duration) {\n  if (params === void 0) {\n    params = [];\n  }\n\n  var _a = __read(params, 4),\n      _b = _a[0],\n      mass = _b === void 0 ? 1 : _b,\n      _c = _a[1],\n      stiffness = _c === void 0 ? 100 : _c,\n      _d = _a[2],\n      damping = _d === void 0 ? 10 : _d,\n      _e = _a[3],\n      velocity = _e === void 0 ? 0 : _e;\n\n  mass = limit(mass, 0.1, 1000);\n  stiffness = limit(stiffness, 0.1, 1000);\n  damping = limit(damping, 0.1, 1000);\n  velocity = limit(velocity, 0.1, 1000);\n  var w0 = Math.sqrt(stiffness / mass);\n  var zeta = damping / (2 * Math.sqrt(stiffness * mass));\n  var wd = zeta < 1 ? w0 * Math.sqrt(1 - zeta * zeta) : 0;\n  var a = 1;\n  var b = zeta < 1 ? (zeta * w0 + -velocity) / wd : -velocity + w0;\n  var progress = duration ? duration * t / 1000 : t;\n\n  if (zeta < 1) {\n    progress = Math.exp(-progress * zeta * w0) * (a * Math.cos(wd * progress) + b * Math.sin(wd * progress));\n  } else {\n    progress = (a + b * progress) * Math.exp(-progress * w0);\n  }\n\n  if (t === 0 || t === 1) return t;\n  return 1 - progress;\n};\n/**\n * Cache the durations at set easing parameters\n */\n\nexport var EasingDurationCache = new Map();\n/**\n * The threshold for an infinite loop\n */\n\nexport var INTINITE_LOOP_LIMIT = 10000;\n/** Convert easing parameters to Array of numbers, e.g. \"spring(2, 500)\" to [2, 500] */\n\nexport var parseEasingParameters = function parseEasingParameters(str) {\n  var match = /(\\(|\\s)([^)]+)\\)?/.exec(str);\n  return match ? match[2].split(',').map(function (value) {\n    var num = parseFloat(value);\n    return !Number.isNaN(num) ? num : value.trim();\n  }) : [];\n};\n/**\n * The spring easing function will only look smooth at certain durations, with certain parameters.\n * This functions returns the optimal duration to create a smooth springy animation based on physics\n *\n * Note: it can also be used to determine the optimal duration of other types of easing function, but be careful of 'in-'\n * easing functions, because of the nature of the function it can sometimes create an infinite loop, I suggest only using\n * `getEasingDuration` for `spring`, specifically 'out-spring' and 'spring'\n */\n// export const getEasingDuration = (easing: string | TypeEasingFunction = 'spring') => {\n//   if (EasingDurationCache.has(easing)) return EasingDurationCache.get(easing);\n//   // eslint-disable-next-line @typescript-eslint/no-use-before-define\n//   const easingFunction = typeof easing == 'function' ? easing : getEasingFunction(easing as string);\n//   const params = typeof easing == 'function' ? [] : parseEasingParameters(easing);\n//   const frame = 1 / 6;\n//   let elapsed = 0;\n//   let rest = 0;\n//   let count = 0;\n//   while (++count < INTINITE_LOOP_LIMIT) {\n//     elapsed += frame;\n//     if (easingFunction(elapsed, params, undefined) === 1) {\n//       rest++;\n//       if (rest >= 16) break;\n//     } else {\n//       rest = 0;\n//     }\n//   }\n//   const duration = elapsed * frame * 1000;\n//   EasingDurationCache.set(easing, duration);\n//   return duration;\n// };\n\n/**\n  These Easing Functions are based off of the Sozi Project's easing functions\n  https://github.com/sozi-projects/Sozi/blob/d72e44ebd580dc7579d1e177406ad41e632f961d/src/js/player/Timing.js\n*/\n\nexport var Steps = function Steps(t, params) {\n  if (params === void 0) {\n    params = [];\n  }\n\n  var _a = __read(params, 2),\n      _b = _a[0],\n      steps = _b === void 0 ? 10 : _b,\n      type = _a[1];\n\n  var trunc = type == 'start' ? Math.ceil : Math.floor;\n  return trunc(limit(t, 0, 1) * steps) / steps;\n}; // @ts-ignore\n\nexport var Bezier = function Bezier(t, params) {\n  if (params === void 0) {\n    params = [];\n  }\n\n  var _a = __read(params, 4),\n      mX1 = _a[0],\n      mY1 = _a[1],\n      mX2 = _a[2],\n      mY2 = _a[3];\n\n  return bezier(mX1, mY1, mX2, mY2)(t);\n};\n/** The default `ease-in` easing function */\n\nexport var easein = bezier(0.42, 0.0, 1.0, 1.0);\n/** Converts easing functions to their `out`counter parts */\n\nexport var EaseOut = function EaseOut(ease) {\n  return function (t, params, duration) {\n    if (params === void 0) {\n      params = [];\n    }\n\n    return 1 - ease(1 - t, params, duration);\n  };\n};\n/** Converts easing functions to their `in-out` counter parts */\n\nexport var EaseInOut = function EaseInOut(ease) {\n  return function (t, params, duration) {\n    if (params === void 0) {\n      params = [];\n    }\n\n    return t < 0.5 ? ease(t * 2, params, duration) / 2 : 1 - ease(t * -2 + 2, params, duration) / 2;\n  };\n};\n/** Converts easing functions to their `out-in` counter parts */\n\nexport var EaseOutIn = function EaseOutIn(ease) {\n  return function (t, params, duration) {\n    if (params === void 0) {\n      params = [];\n    }\n\n    return t < 0.5 ? (1 - ease(1 - t * 2, params, duration)) / 2 : (ease(t * 2 - 1, params, duration) + 1) / 2;\n  };\n};\n/**\n * The default list of easing functions, do note this is different from {@link EASING}\n */\n\nexport var EasingFunctions = {\n  steps: Steps,\n  'step-start': function stepStart(t) {\n    return Steps(t, [1, 'start']);\n  },\n  'step-end': function stepEnd(t) {\n    return Steps(t, [1, 'end']);\n  },\n  linear: function linear(t) {\n    return t;\n  },\n  'cubic-bezier': Bezier,\n  ease: function ease(t) {\n    return Bezier(t, [0.25, 0.1, 0.25, 1.0]);\n  },\n  in: easein,\n  out: EaseOut(easein),\n  'in-out': EaseInOut(easein),\n  'out-in': EaseOutIn(easein),\n  'in-quad': Quad,\n  'out-quad': EaseOut(Quad),\n  'in-out-quad': EaseInOut(Quad),\n  'out-in-quad': EaseOutIn(Quad),\n  'in-cubic': Cubic,\n  'out-cubic': EaseOut(Cubic),\n  'in-out-cubic': EaseInOut(Cubic),\n  'out-in-cubic': EaseOutIn(Cubic),\n  'in-quart': Quart,\n  'out-quart': EaseOut(Quart),\n  'in-out-quart': EaseInOut(Quart),\n  'out-in-quart': EaseOutIn(Quart),\n  'in-quint': Quint,\n  'out-quint': EaseOut(Quint),\n  'in-out-quint': EaseInOut(Quint),\n  'out-in-quint': EaseOutIn(Quint),\n  'in-expo': Expo,\n  'out-expo': EaseOut(Expo),\n  'in-out-expo': EaseInOut(Expo),\n  'out-in-expo': EaseOutIn(Expo),\n  'in-sine': Sine,\n  'out-sine': EaseOut(Sine),\n  'in-out-sine': EaseInOut(Sine),\n  'out-in-sine': EaseOutIn(Sine),\n  'in-circ': Circ,\n  'out-circ': EaseOut(Circ),\n  'in-out-circ': EaseInOut(Circ),\n  'out-in-circ': EaseOutIn(Circ),\n  'in-back': Back,\n  'out-back': EaseOut(Back),\n  'in-out-back': EaseInOut(Back),\n  'out-in-back': EaseOutIn(Back),\n  'in-bounce': Bounce,\n  'out-bounce': EaseOut(Bounce),\n  'in-out-bounce': EaseInOut(Bounce),\n  'out-in-bounce': EaseOutIn(Bounce),\n  'in-elastic': Elastic,\n  'out-elastic': EaseOut(Elastic),\n  'in-out-elastic': EaseInOut(Elastic),\n  'out-in-elastic': EaseOutIn(Elastic),\n  spring: Spring,\n  'spring-in': Spring,\n  'spring-out': EaseOut(Spring),\n  'spring-in-out': EaseInOut(Spring),\n  'spring-out-in': EaseOutIn(Spring)\n};\n/**\n * Convert string easing to their proper form\n */\n\nexport var complexEasingSyntax = function complexEasingSyntax(ease) {\n  return convertToDash(ease).replace(/^ease-/, '') // Remove the \"ease-\" keyword\n  .replace(/(\\(|\\s).+/, '') // Remove the function brackets and parameters\n  .toLowerCase().trim();\n};\n/** Re-maps a number from one range to another. Numbers outside the range are not clamped to 0 and 1, because out-of-range values are often intentional and useful. */\n\nexport var getEasingFunction = function getEasingFunction(ease) {\n  return EasingFunctions[complexEasingSyntax(ease)] || EasingFunctions.linear;\n}; // /**\n//  * Allows you to register new easing functions\n//  */\n// export const registerEasingFunction = (key: string, fn: TypeEasingFunction) => {\n//   Object.assign(EasingFunctions, {\n//     [key]: fn,\n//   });\n// };\n// /**\n//  * Allows you to register multiple new easing functions\n//  */\n// export const registerEasingFunctions = (...obj: typeof EasingFunctions[]) => {\n//   Object.assign(EasingFunctions, ...obj);\n// };"]},"metadata":{},"sourceType":"module"}