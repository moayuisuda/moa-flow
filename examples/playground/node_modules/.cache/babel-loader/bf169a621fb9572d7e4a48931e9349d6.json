{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { singleton } from 'mana-syringe';\nimport { isString } from 'lodash-es';\nimport { GeometryAABBUpdater } from './interfaces';\nimport { Shape } from '../../types';\nimport { CSSUnitValue, UnitType } from '../../css';\n\nvar RectUpdater =\n/** @class */\nfunction () {\n  function RectUpdater() {}\n\n  RectUpdater.prototype.update = function (parsedStyle, object) {\n    var img = parsedStyle.img,\n        x = parsedStyle.x,\n        y = parsedStyle.y,\n        width = parsedStyle.width,\n        height = parsedStyle.height;\n    var contentWidth = 0;\n    var contentHeight = 0;\n\n    if (width instanceof CSSUnitValue) {\n      if (width.unit === UnitType.kPixels) {\n        contentWidth = width.value;\n      }\n    }\n\n    if (height instanceof CSSUnitValue) {\n      if (height.unit === UnitType.kPixels) {\n        contentHeight = height.value;\n      }\n    } // resize with HTMLImageElement's size\n\n\n    if (img && !isString(img)) {\n      if (!contentWidth) {\n        contentWidth = img.width;\n      }\n\n      if (!contentHeight) {\n        contentHeight = img.height;\n      }\n    }\n\n    if (width instanceof CSSUnitValue) {\n      width.value = contentWidth;\n    }\n\n    if (height instanceof CSSUnitValue) {\n      height.value = contentHeight;\n    }\n\n    return {\n      width: contentWidth,\n      height: contentHeight,\n      x: x.value || 0,\n      y: y.value || 0\n    };\n  };\n\n  RectUpdater = __decorate([singleton({\n    token: [{\n      token: GeometryAABBUpdater,\n      named: Shape.RECT\n    }, {\n      token: GeometryAABBUpdater,\n      named: Shape.IMAGE\n    }, {\n      token: GeometryAABBUpdater,\n      named: Shape.GROUP\n    }]\n  })], RectUpdater);\n  return RectUpdater;\n}();\n\nexport { RectUpdater };","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/@antv/g/es/services/aabb/RectUpdater.js"],"names":["__decorate","singleton","isString","GeometryAABBUpdater","Shape","CSSUnitValue","UnitType","RectUpdater","prototype","update","parsedStyle","object","img","x","y","width","height","contentWidth","contentHeight","unit","kPixels","value","token","named","RECT","IMAGE","GROUP"],"mappings":"AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,SAASC,mBAAT,QAAoC,cAApC;AACA,SAASC,KAAT,QAAsB,aAAtB;AACA,SAASC,YAAT,EAAuBC,QAAvB,QAAuC,WAAvC;;AAEA,IAAIC,WAAW;AACf;AACA,YAAY;AACV,WAASA,WAAT,GAAuB,CAAE;;AAEzBA,EAAAA,WAAW,CAACC,SAAZ,CAAsBC,MAAtB,GAA+B,UAAUC,WAAV,EAAuBC,MAAvB,EAA+B;AAC5D,QAAIC,GAAG,GAAGF,WAAW,CAACE,GAAtB;AAAA,QACIC,CAAC,GAAGH,WAAW,CAACG,CADpB;AAAA,QAEIC,CAAC,GAAGJ,WAAW,CAACI,CAFpB;AAAA,QAGIC,KAAK,GAAGL,WAAW,CAACK,KAHxB;AAAA,QAIIC,MAAM,GAAGN,WAAW,CAACM,MAJzB;AAKA,QAAIC,YAAY,GAAG,CAAnB;AACA,QAAIC,aAAa,GAAG,CAApB;;AAEA,QAAIH,KAAK,YAAYV,YAArB,EAAmC;AACjC,UAAIU,KAAK,CAACI,IAAN,KAAeb,QAAQ,CAACc,OAA5B,EAAqC;AACnCH,QAAAA,YAAY,GAAGF,KAAK,CAACM,KAArB;AACD;AACF;;AAED,QAAIL,MAAM,YAAYX,YAAtB,EAAoC;AAClC,UAAIW,MAAM,CAACG,IAAP,KAAgBb,QAAQ,CAACc,OAA7B,EAAsC;AACpCF,QAAAA,aAAa,GAAGF,MAAM,CAACK,KAAvB;AACD;AACF,KAnB2D,CAmB1D;;;AAGF,QAAIT,GAAG,IAAI,CAACV,QAAQ,CAACU,GAAD,CAApB,EAA2B;AACzB,UAAI,CAACK,YAAL,EAAmB;AACjBA,QAAAA,YAAY,GAAGL,GAAG,CAACG,KAAnB;AACD;;AAED,UAAI,CAACG,aAAL,EAAoB;AAClBA,QAAAA,aAAa,GAAGN,GAAG,CAACI,MAApB;AACD;AACF;;AAED,QAAID,KAAK,YAAYV,YAArB,EAAmC;AACjCU,MAAAA,KAAK,CAACM,KAAN,GAAcJ,YAAd;AACD;;AAED,QAAID,MAAM,YAAYX,YAAtB,EAAoC;AAClCW,MAAAA,MAAM,CAACK,KAAP,GAAeH,aAAf;AACD;;AAED,WAAO;AACLH,MAAAA,KAAK,EAAEE,YADF;AAELD,MAAAA,MAAM,EAAEE,aAFH;AAGLL,MAAAA,CAAC,EAAEA,CAAC,CAACQ,KAAF,IAAW,CAHT;AAILP,MAAAA,CAAC,EAAEA,CAAC,CAACO,KAAF,IAAW;AAJT,KAAP;AAMD,GA9CD;;AAgDAd,EAAAA,WAAW,GAAGP,UAAU,CAAC,CAACC,SAAS,CAAC;AAClCqB,IAAAA,KAAK,EAAE,CAAC;AACNA,MAAAA,KAAK,EAAEnB,mBADD;AAENoB,MAAAA,KAAK,EAAEnB,KAAK,CAACoB;AAFP,KAAD,EAGJ;AACDF,MAAAA,KAAK,EAAEnB,mBADN;AAEDoB,MAAAA,KAAK,EAAEnB,KAAK,CAACqB;AAFZ,KAHI,EAMJ;AACDH,MAAAA,KAAK,EAAEnB,mBADN;AAEDoB,MAAAA,KAAK,EAAEnB,KAAK,CAACsB;AAFZ,KANI;AAD2B,GAAD,CAAV,CAAD,EAWnBnB,WAXmB,CAAxB;AAYA,SAAOA,WAAP;AACD,CAhED,EAFA;;AAoEA,SAASA,WAAT","sourcesContent":["import { __decorate } from \"tslib\";\nimport { singleton } from 'mana-syringe';\nimport { isString } from 'lodash-es';\nimport { GeometryAABBUpdater } from './interfaces';\nimport { Shape } from '../../types';\nimport { CSSUnitValue, UnitType } from '../../css';\n\nvar RectUpdater =\n/** @class */\nfunction () {\n  function RectUpdater() {}\n\n  RectUpdater.prototype.update = function (parsedStyle, object) {\n    var img = parsedStyle.img,\n        x = parsedStyle.x,\n        y = parsedStyle.y,\n        width = parsedStyle.width,\n        height = parsedStyle.height;\n    var contentWidth = 0;\n    var contentHeight = 0;\n\n    if (width instanceof CSSUnitValue) {\n      if (width.unit === UnitType.kPixels) {\n        contentWidth = width.value;\n      }\n    }\n\n    if (height instanceof CSSUnitValue) {\n      if (height.unit === UnitType.kPixels) {\n        contentHeight = height.value;\n      }\n    } // resize with HTMLImageElement's size\n\n\n    if (img && !isString(img)) {\n      if (!contentWidth) {\n        contentWidth = img.width;\n      }\n\n      if (!contentHeight) {\n        contentHeight = img.height;\n      }\n    }\n\n    if (width instanceof CSSUnitValue) {\n      width.value = contentWidth;\n    }\n\n    if (height instanceof CSSUnitValue) {\n      height.value = contentHeight;\n    }\n\n    return {\n      width: contentWidth,\n      height: contentHeight,\n      x: x.value || 0,\n      y: y.value || 0\n    };\n  };\n\n  RectUpdater = __decorate([singleton({\n    token: [{\n      token: GeometryAABBUpdater,\n      named: Shape.RECT\n    }, {\n      token: GeometryAABBUpdater,\n      named: Shape.IMAGE\n    }, {\n      token: GeometryAABBUpdater,\n      named: Shape.GROUP\n    }]\n  })], RectUpdater);\n  return RectUpdater;\n}();\n\nexport { RectUpdater };"]},"metadata":{},"sourceType":"module"}