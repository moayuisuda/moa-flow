{"ast":null,"code":"import toString from './toString.js';\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\n\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n    reHasRegExpChar = RegExp(reRegExpChar.source);\n/**\n * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escapeRegExp('[lodash](https://lodash.com/)');\n * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n */\n\nfunction escapeRegExp(string) {\n  string = toString(string);\n  return string && reHasRegExpChar.test(string) ? string.replace(reRegExpChar, '\\\\$&') : string;\n}\n\nexport default escapeRegExp;","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/lodash-es/escapeRegExp.js"],"names":["toString","reRegExpChar","reHasRegExpChar","RegExp","source","escapeRegExp","string","test","replace"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,eAArB;AAEA;AACA;AACA;AACA;;AACA,IAAIC,YAAY,GAAG,qBAAnB;AAAA,IACIC,eAAe,GAAGC,MAAM,CAACF,YAAY,CAACG,MAAd,CAD5B;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,YAAT,CAAsBC,MAAtB,EAA8B;AAC5BA,EAAAA,MAAM,GAAGN,QAAQ,CAACM,MAAD,CAAjB;AACA,SAAQA,MAAM,IAAIJ,eAAe,CAACK,IAAhB,CAAqBD,MAArB,CAAX,GACHA,MAAM,CAACE,OAAP,CAAeP,YAAf,EAA6B,MAA7B,CADG,GAEHK,MAFJ;AAGD;;AAED,eAAeD,YAAf","sourcesContent":["import toString from './toString.js';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n    reHasRegExpChar = RegExp(reRegExpChar.source);\n\n/**\n * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escapeRegExp('[lodash](https://lodash.com/)');\n * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n */\nfunction escapeRegExp(string) {\n  string = toString(string);\n  return (string && reHasRegExpChar.test(string))\n    ? string.replace(reRegExpChar, '\\\\$&')\n    : string;\n}\n\nexport default escapeRegExp;\n"]},"metadata":{},"sourceType":"module"}