{"ast":null,"code":"import baseToNumber from './_baseToNumber.js';\nimport baseToString from './_baseToString.js';\n/**\n * Creates a function that performs a mathematical operation on two values.\n *\n * @private\n * @param {Function} operator The function to perform the operation.\n * @param {number} [defaultValue] The value used for `undefined` arguments.\n * @returns {Function} Returns the new mathematical operation function.\n */\n\nfunction createMathOperation(operator, defaultValue) {\n  return function (value, other) {\n    var result;\n\n    if (value === undefined && other === undefined) {\n      return defaultValue;\n    }\n\n    if (value !== undefined) {\n      result = value;\n    }\n\n    if (other !== undefined) {\n      if (result === undefined) {\n        return other;\n      }\n\n      if (typeof value == 'string' || typeof other == 'string') {\n        value = baseToString(value);\n        other = baseToString(other);\n      } else {\n        value = baseToNumber(value);\n        other = baseToNumber(other);\n      }\n\n      result = operator(value, other);\n    }\n\n    return result;\n  };\n}\n\nexport default createMathOperation;","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/lodash-es/_createMathOperation.js"],"names":["baseToNumber","baseToString","createMathOperation","operator","defaultValue","value","other","result","undefined"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,oBAAzB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,mBAAT,CAA6BC,QAA7B,EAAuCC,YAAvC,EAAqD;AACnD,SAAO,UAASC,KAAT,EAAgBC,KAAhB,EAAuB;AAC5B,QAAIC,MAAJ;;AACA,QAAIF,KAAK,KAAKG,SAAV,IAAuBF,KAAK,KAAKE,SAArC,EAAgD;AAC9C,aAAOJ,YAAP;AACD;;AACD,QAAIC,KAAK,KAAKG,SAAd,EAAyB;AACvBD,MAAAA,MAAM,GAAGF,KAAT;AACD;;AACD,QAAIC,KAAK,KAAKE,SAAd,EAAyB;AACvB,UAAID,MAAM,KAAKC,SAAf,EAA0B;AACxB,eAAOF,KAAP;AACD;;AACD,UAAI,OAAOD,KAAP,IAAgB,QAAhB,IAA4B,OAAOC,KAAP,IAAgB,QAAhD,EAA0D;AACxDD,QAAAA,KAAK,GAAGJ,YAAY,CAACI,KAAD,CAApB;AACAC,QAAAA,KAAK,GAAGL,YAAY,CAACK,KAAD,CAApB;AACD,OAHD,MAGO;AACLD,QAAAA,KAAK,GAAGL,YAAY,CAACK,KAAD,CAApB;AACAC,QAAAA,KAAK,GAAGN,YAAY,CAACM,KAAD,CAApB;AACD;;AACDC,MAAAA,MAAM,GAAGJ,QAAQ,CAACE,KAAD,EAAQC,KAAR,CAAjB;AACD;;AACD,WAAOC,MAAP;AACD,GAtBD;AAuBD;;AAED,eAAeL,mBAAf","sourcesContent":["import baseToNumber from './_baseToNumber.js';\nimport baseToString from './_baseToString.js';\n\n/**\n * Creates a function that performs a mathematical operation on two values.\n *\n * @private\n * @param {Function} operator The function to perform the operation.\n * @param {number} [defaultValue] The value used for `undefined` arguments.\n * @returns {Function} Returns the new mathematical operation function.\n */\nfunction createMathOperation(operator, defaultValue) {\n  return function(value, other) {\n    var result;\n    if (value === undefined && other === undefined) {\n      return defaultValue;\n    }\n    if (value !== undefined) {\n      result = value;\n    }\n    if (other !== undefined) {\n      if (result === undefined) {\n        return other;\n      }\n      if (typeof value == 'string' || typeof other == 'string') {\n        value = baseToString(value);\n        other = baseToString(other);\n      } else {\n        value = baseToNumber(value);\n        other = baseToNumber(other);\n      }\n      result = operator(value, other);\n    }\n    return result;\n  };\n}\n\nexport default createMathOperation;\n"]},"metadata":{},"sourceType":"module"}