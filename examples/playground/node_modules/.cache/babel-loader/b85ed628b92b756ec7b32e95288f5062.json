{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Shape, UnitType } from '@antv/g';\nimport { singleton } from 'mana-syringe';\nimport { isNil } from 'lodash-es';\nimport { StyleRenderer } from './interfaces';\n\nvar TextRenderer =\n/** @class */\nfunction () {\n  function TextRenderer() {}\n\n  TextRenderer.prototype.hash = function (parsedStyle) {\n    return '';\n  };\n\n  TextRenderer.prototype.render = function (context, parsedStyle, object) {\n    var _a = parsedStyle,\n        lineWidth = _a.lineWidth,\n        textAlign = _a.textAlign,\n        textBaseline = _a.textBaseline,\n        lineJoin = _a.lineJoin,\n        _b = _a.miterLimit,\n        miterLimit = _b === void 0 ? 0 : _b,\n        _c = _a.letterSpacing,\n        letterSpacing = _c === void 0 ? 0 : _c,\n        stroke = _a.stroke,\n        fill = _a.fill,\n        fillOpacity = _a.fillOpacity,\n        strokeOpacity = _a.strokeOpacity,\n        opacity = _a.opacity,\n        metrics = _a.metrics,\n        dx = _a.dx,\n        dy = _a.dy;\n    var font = metrics.font,\n        lines = metrics.lines,\n        height = metrics.height,\n        lineHeight = metrics.lineHeight,\n        lineMetrics = metrics.lineMetrics;\n    context.font = font;\n    context.lineWidth = lineWidth.value;\n    context.textAlign = textAlign.value;\n    context.textBaseline = textBaseline.value;\n    context.lineJoin = lineJoin.value;\n    context.miterLimit = miterLimit;\n    var linePositionY = 0; // handle vertical text baseline\n\n    if (textBaseline.value === 'middle') {\n      linePositionY = -height / 2 - lineHeight / 2;\n    } else if (textBaseline.value === 'bottom' || textBaseline.value === 'alphabetic' || textBaseline.value === 'ideographic') {\n      linePositionY = -height;\n    } else if (textBaseline.value === 'top' || textBaseline.value === 'hanging') {\n      linePositionY = -lineHeight;\n    } // account for dx & dy\n\n\n    var offsetX = 0;\n\n    if (dx && dx.unit === UnitType.kPixels) {\n      offsetX += dx.value;\n    }\n\n    if (dy && dy.unit === UnitType.kPixels) {\n      linePositionY += dy.value;\n    } // draw lines line by line\n\n\n    for (var i = 0; i < lines.length; i++) {\n      var linePositionX = lineWidth.value / 2 + offsetX;\n      linePositionY += lineHeight; // no need to re-position X, cause we already set text align\n      // @see https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/textAlign\n\n      if (!isNil(stroke) && lineWidth && lineWidth.value) {\n        this.drawLetterSpacing(context, lines[i], lineMetrics[i], textAlign.value, linePositionX, linePositionY, letterSpacing, fillOpacity.value, strokeOpacity.value, opacity.value, true);\n      }\n\n      if (!isNil(fill)) {\n        this.drawLetterSpacing(context, lines[i], lineMetrics[i], textAlign.value, linePositionX, linePositionY, letterSpacing, fillOpacity.value, strokeOpacity.value, opacity.value);\n      }\n    }\n  };\n\n  TextRenderer.prototype.drawLetterSpacing = function (context, text, lineMetrics, textAlign, x, y, letterSpacing, fillOpacity, strokeOpacity, opacity, isStroke) {\n    if (isStroke === void 0) {\n      isStroke = false;\n    } // letterSpacing of 0 means normal, render all texts directly\n\n\n    if (letterSpacing === 0) {\n      if (isStroke) {\n        this.strokeText(context, text, x, y, strokeOpacity);\n      } else {\n        this.fillText(context, text, x, y, fillOpacity, opacity);\n      }\n\n      return;\n    } // draw text using left align\n\n\n    var currentTextAlign = context.textAlign;\n    context.textAlign = 'left';\n    var currentPosition = x;\n\n    if (textAlign === 'center') {\n      currentPosition = x - lineMetrics.width / 2;\n    } else if (textAlign === 'right' || textAlign === 'end') {\n      currentPosition = x - lineMetrics.width;\n    }\n\n    var stringArray = Array.from(text);\n    var previousWidth = context.measureText(text).width;\n    var currentWidth = 0;\n\n    for (var i = 0; i < stringArray.length; ++i) {\n      var currentChar = stringArray[i];\n\n      if (isStroke) {\n        this.strokeText(context, currentChar, currentPosition, y, strokeOpacity);\n      } else {\n        this.fillText(context, currentChar, currentPosition, y, fillOpacity, opacity);\n      }\n\n      currentWidth = context.measureText(text.substring(i + 1)).width;\n      currentPosition += previousWidth - currentWidth + letterSpacing;\n      previousWidth = currentWidth;\n    }\n\n    context.textAlign = currentTextAlign;\n  };\n\n  TextRenderer.prototype.fillText = function (context, text, x, y, fillOpacity, opacity) {\n    var currentGlobalAlpha;\n    var applyOpacity = !isNil(fillOpacity) && fillOpacity !== 1;\n\n    if (applyOpacity) {\n      currentGlobalAlpha = context.globalAlpha;\n      context.globalAlpha = fillOpacity * opacity;\n    }\n\n    context.fillText(text, x, y);\n\n    if (applyOpacity) {\n      context.globalAlpha = currentGlobalAlpha;\n    }\n  };\n\n  TextRenderer.prototype.strokeText = function (context, text, x, y, strokeOpacity) {\n    var currentGlobalAlpha;\n    var applyOpacity = !isNil(strokeOpacity) && strokeOpacity !== 1;\n\n    if (applyOpacity) {\n      currentGlobalAlpha = context.globalAlpha;\n      context.globalAlpha = strokeOpacity;\n    }\n\n    context.strokeText(text, x, y);\n\n    if (applyOpacity) {\n      context.globalAlpha = currentGlobalAlpha;\n    }\n  };\n\n  TextRenderer = __decorate([singleton({\n    token: {\n      token: StyleRenderer,\n      named: Shape.TEXT\n    }\n  })], TextRenderer);\n  return TextRenderer;\n}();\n\nexport { TextRenderer };","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/@antv/g-plugin-canvas-renderer/es/shapes/styles/Text.js"],"names":["__decorate","Shape","UnitType","singleton","isNil","StyleRenderer","TextRenderer","prototype","hash","parsedStyle","render","context","object","_a","lineWidth","textAlign","textBaseline","lineJoin","_b","miterLimit","_c","letterSpacing","stroke","fill","fillOpacity","strokeOpacity","opacity","metrics","dx","dy","font","lines","height","lineHeight","lineMetrics","value","linePositionY","offsetX","unit","kPixels","i","length","linePositionX","drawLetterSpacing","text","x","y","isStroke","strokeText","fillText","currentTextAlign","currentPosition","width","stringArray","Array","from","previousWidth","measureText","currentWidth","currentChar","substring","currentGlobalAlpha","applyOpacity","globalAlpha","token","named","TEXT"],"mappings":"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","sourcesContent":["import { __decorate } from \"tslib\";\nimport { Shape, UnitType } from '@antv/g';\nimport { singleton } from 'mana-syringe';\nimport { isNil } from 'lodash-es';\nimport { StyleRenderer } from './interfaces';\n\nvar TextRenderer =\n/** @class */\nfunction () {\n  function TextRenderer() {}\n\n  TextRenderer.prototype.hash = function (parsedStyle) {\n    return '';\n  };\n\n  TextRenderer.prototype.render = function (context, parsedStyle, object) {\n    var _a = parsedStyle,\n        lineWidth = _a.lineWidth,\n        textAlign = _a.textAlign,\n        textBaseline = _a.textBaseline,\n        lineJoin = _a.lineJoin,\n        _b = _a.miterLimit,\n        miterLimit = _b === void 0 ? 0 : _b,\n        _c = _a.letterSpacing,\n        letterSpacing = _c === void 0 ? 0 : _c,\n        stroke = _a.stroke,\n        fill = _a.fill,\n        fillOpacity = _a.fillOpacity,\n        strokeOpacity = _a.strokeOpacity,\n        opacity = _a.opacity,\n        metrics = _a.metrics,\n        dx = _a.dx,\n        dy = _a.dy;\n    var font = metrics.font,\n        lines = metrics.lines,\n        height = metrics.height,\n        lineHeight = metrics.lineHeight,\n        lineMetrics = metrics.lineMetrics;\n    context.font = font;\n    context.lineWidth = lineWidth.value;\n    context.textAlign = textAlign.value;\n    context.textBaseline = textBaseline.value;\n    context.lineJoin = lineJoin.value;\n    context.miterLimit = miterLimit;\n    var linePositionY = 0; // handle vertical text baseline\n\n    if (textBaseline.value === 'middle') {\n      linePositionY = -height / 2 - lineHeight / 2;\n    } else if (textBaseline.value === 'bottom' || textBaseline.value === 'alphabetic' || textBaseline.value === 'ideographic') {\n      linePositionY = -height;\n    } else if (textBaseline.value === 'top' || textBaseline.value === 'hanging') {\n      linePositionY = -lineHeight;\n    } // account for dx & dy\n\n\n    var offsetX = 0;\n\n    if (dx && dx.unit === UnitType.kPixels) {\n      offsetX += dx.value;\n    }\n\n    if (dy && dy.unit === UnitType.kPixels) {\n      linePositionY += dy.value;\n    } // draw lines line by line\n\n\n    for (var i = 0; i < lines.length; i++) {\n      var linePositionX = lineWidth.value / 2 + offsetX;\n      linePositionY += lineHeight; // no need to re-position X, cause we already set text align\n      // @see https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/textAlign\n\n      if (!isNil(stroke) && lineWidth && lineWidth.value) {\n        this.drawLetterSpacing(context, lines[i], lineMetrics[i], textAlign.value, linePositionX, linePositionY, letterSpacing, fillOpacity.value, strokeOpacity.value, opacity.value, true);\n      }\n\n      if (!isNil(fill)) {\n        this.drawLetterSpacing(context, lines[i], lineMetrics[i], textAlign.value, linePositionX, linePositionY, letterSpacing, fillOpacity.value, strokeOpacity.value, opacity.value);\n      }\n    }\n  };\n\n  TextRenderer.prototype.drawLetterSpacing = function (context, text, lineMetrics, textAlign, x, y, letterSpacing, fillOpacity, strokeOpacity, opacity, isStroke) {\n    if (isStroke === void 0) {\n      isStroke = false;\n    } // letterSpacing of 0 means normal, render all texts directly\n\n\n    if (letterSpacing === 0) {\n      if (isStroke) {\n        this.strokeText(context, text, x, y, strokeOpacity);\n      } else {\n        this.fillText(context, text, x, y, fillOpacity, opacity);\n      }\n\n      return;\n    } // draw text using left align\n\n\n    var currentTextAlign = context.textAlign;\n    context.textAlign = 'left';\n    var currentPosition = x;\n\n    if (textAlign === 'center') {\n      currentPosition = x - lineMetrics.width / 2;\n    } else if (textAlign === 'right' || textAlign === 'end') {\n      currentPosition = x - lineMetrics.width;\n    }\n\n    var stringArray = Array.from(text);\n    var previousWidth = context.measureText(text).width;\n    var currentWidth = 0;\n\n    for (var i = 0; i < stringArray.length; ++i) {\n      var currentChar = stringArray[i];\n\n      if (isStroke) {\n        this.strokeText(context, currentChar, currentPosition, y, strokeOpacity);\n      } else {\n        this.fillText(context, currentChar, currentPosition, y, fillOpacity, opacity);\n      }\n\n      currentWidth = context.measureText(text.substring(i + 1)).width;\n      currentPosition += previousWidth - currentWidth + letterSpacing;\n      previousWidth = currentWidth;\n    }\n\n    context.textAlign = currentTextAlign;\n  };\n\n  TextRenderer.prototype.fillText = function (context, text, x, y, fillOpacity, opacity) {\n    var currentGlobalAlpha;\n    var applyOpacity = !isNil(fillOpacity) && fillOpacity !== 1;\n\n    if (applyOpacity) {\n      currentGlobalAlpha = context.globalAlpha;\n      context.globalAlpha = fillOpacity * opacity;\n    }\n\n    context.fillText(text, x, y);\n\n    if (applyOpacity) {\n      context.globalAlpha = currentGlobalAlpha;\n    }\n  };\n\n  TextRenderer.prototype.strokeText = function (context, text, x, y, strokeOpacity) {\n    var currentGlobalAlpha;\n    var applyOpacity = !isNil(strokeOpacity) && strokeOpacity !== 1;\n\n    if (applyOpacity) {\n      currentGlobalAlpha = context.globalAlpha;\n      context.globalAlpha = strokeOpacity;\n    }\n\n    context.strokeText(text, x, y);\n\n    if (applyOpacity) {\n      context.globalAlpha = currentGlobalAlpha;\n    }\n  };\n\n  TextRenderer = __decorate([singleton({\n    token: {\n      token: StyleRenderer,\n      named: Shape.TEXT\n    }\n  })], TextRenderer);\n  return TextRenderer;\n}();\n\nexport { TextRenderer };"]},"metadata":{},"sourceType":"module"}