{"ast":null,"code":"import { __decorate, __metadata } from \"tslib\";\nimport { inject, singleton } from 'mana-syringe';\nimport { Shape, RenderingPluginContribution, RenderingContext, ElementEvent } from '@antv/g';\nimport { ImagePool } from './shapes/ImagePool';\nimport { isString } from 'lodash-es';\n\nvar LoadImagePlugin =\n/** @class */\nfunction () {\n  function LoadImagePlugin() {}\n\n  LoadImagePlugin_1 = LoadImagePlugin;\n\n  LoadImagePlugin.prototype.apply = function (renderingService) {\n    var _this = this;\n\n    var handleMounted = function handleMounted(e) {\n      var object = e.target;\n      var nodeName = object.nodeName,\n          attributes = object.attributes;\n\n      if (nodeName === Shape.IMAGE) {\n        var img = attributes.img;\n\n        if (isString(img)) {\n          _this.imagePool.getOrCreateImage(img).then(function () {\n            // set dirty rectangle flag\n            object.renderable.dirty = true;\n            renderingService.dirtify();\n          });\n        }\n      }\n    };\n\n    var handleAttributeChanged = function handleAttributeChanged(e) {\n      var object = e.target;\n      var attrName = e.attrName,\n          newValue = e.newValue;\n\n      if (object.nodeName === Shape.IMAGE) {\n        if (attrName === 'img') {\n          if (isString(newValue)) {\n            _this.imagePool.getOrCreateImage(newValue).then(function () {\n              // set dirty rectangle flag\n              object.renderable.dirty = true;\n              renderingService.dirtify();\n            });\n          }\n        }\n      }\n    };\n\n    renderingService.hooks.init.tap(LoadImagePlugin_1.tag, function () {\n      _this.renderingContext.root.addEventListener(ElementEvent.MOUNTED, handleMounted);\n\n      _this.renderingContext.root.addEventListener(ElementEvent.ATTR_MODIFIED, handleAttributeChanged);\n    });\n    renderingService.hooks.destroy.tap(LoadImagePlugin_1.tag, function () {\n      _this.renderingContext.root.removeEventListener(ElementEvent.MOUNTED, handleMounted);\n\n      _this.renderingContext.root.removeEventListener(ElementEvent.ATTR_MODIFIED, handleAttributeChanged);\n    });\n  };\n\n  var LoadImagePlugin_1;\n  LoadImagePlugin.tag = 'LoadImagePlugin';\n\n  __decorate([inject(ImagePool), __metadata(\"design:type\", ImagePool)], LoadImagePlugin.prototype, \"imagePool\", void 0);\n\n  __decorate([inject(RenderingContext), __metadata(\"design:type\", Object)], LoadImagePlugin.prototype, \"renderingContext\", void 0);\n\n  LoadImagePlugin = LoadImagePlugin_1 = __decorate([singleton({\n    contrib: RenderingPluginContribution\n  })], LoadImagePlugin);\n  return LoadImagePlugin;\n}();\n\nexport { LoadImagePlugin };","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/@antv/g-plugin-canvas-renderer/es/LoadImagePlugin.js"],"names":["__decorate","__metadata","inject","singleton","Shape","RenderingPluginContribution","RenderingContext","ElementEvent","ImagePool","isString","LoadImagePlugin","LoadImagePlugin_1","prototype","apply","renderingService","_this","handleMounted","e","object","target","nodeName","attributes","IMAGE","img","imagePool","getOrCreateImage","then","renderable","dirty","dirtify","handleAttributeChanged","attrName","newValue","hooks","init","tap","tag","renderingContext","root","addEventListener","MOUNTED","ATTR_MODIFIED","destroy","removeEventListener","Object","contrib"],"mappings":"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","sourcesContent":["import { __decorate, __metadata } from \"tslib\";\nimport { inject, singleton } from 'mana-syringe';\nimport { Shape, RenderingPluginContribution, RenderingContext, ElementEvent } from '@antv/g';\nimport { ImagePool } from './shapes/ImagePool';\nimport { isString } from 'lodash-es';\n\nvar LoadImagePlugin =\n/** @class */\nfunction () {\n  function LoadImagePlugin() {}\n\n  LoadImagePlugin_1 = LoadImagePlugin;\n\n  LoadImagePlugin.prototype.apply = function (renderingService) {\n    var _this = this;\n\n    var handleMounted = function handleMounted(e) {\n      var object = e.target;\n      var nodeName = object.nodeName,\n          attributes = object.attributes;\n\n      if (nodeName === Shape.IMAGE) {\n        var img = attributes.img;\n\n        if (isString(img)) {\n          _this.imagePool.getOrCreateImage(img).then(function () {\n            // set dirty rectangle flag\n            object.renderable.dirty = true;\n            renderingService.dirtify();\n          });\n        }\n      }\n    };\n\n    var handleAttributeChanged = function handleAttributeChanged(e) {\n      var object = e.target;\n      var attrName = e.attrName,\n          newValue = e.newValue;\n\n      if (object.nodeName === Shape.IMAGE) {\n        if (attrName === 'img') {\n          if (isString(newValue)) {\n            _this.imagePool.getOrCreateImage(newValue).then(function () {\n              // set dirty rectangle flag\n              object.renderable.dirty = true;\n              renderingService.dirtify();\n            });\n          }\n        }\n      }\n    };\n\n    renderingService.hooks.init.tap(LoadImagePlugin_1.tag, function () {\n      _this.renderingContext.root.addEventListener(ElementEvent.MOUNTED, handleMounted);\n\n      _this.renderingContext.root.addEventListener(ElementEvent.ATTR_MODIFIED, handleAttributeChanged);\n    });\n    renderingService.hooks.destroy.tap(LoadImagePlugin_1.tag, function () {\n      _this.renderingContext.root.removeEventListener(ElementEvent.MOUNTED, handleMounted);\n\n      _this.renderingContext.root.removeEventListener(ElementEvent.ATTR_MODIFIED, handleAttributeChanged);\n    });\n  };\n\n  var LoadImagePlugin_1;\n  LoadImagePlugin.tag = 'LoadImagePlugin';\n\n  __decorate([inject(ImagePool), __metadata(\"design:type\", ImagePool)], LoadImagePlugin.prototype, \"imagePool\", void 0);\n\n  __decorate([inject(RenderingContext), __metadata(\"design:type\", Object)], LoadImagePlugin.prototype, \"renderingContext\", void 0);\n\n  LoadImagePlugin = LoadImagePlugin_1 = __decorate([singleton({\n    contrib: RenderingPluginContribution\n  })], LoadImagePlugin);\n  return LoadImagePlugin;\n}();\n\nexport { LoadImagePlugin };"]},"metadata":{},"sourceType":"module"}