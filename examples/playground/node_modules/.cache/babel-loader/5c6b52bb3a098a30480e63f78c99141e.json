{"ast":null,"code":"import { __assign, __decorate, __metadata, __read, __spreadArray } from \"tslib\";\nimport { AABB, Shape, DisplayObjectPool, CanvasConfig, ContextService, RenderingContext, RenderingPluginContribution, getEuler, fromRotationTranslationScale, Camera, DefaultCamera, CSSGradientValue, GradientPatternType, RenderReason, ElementEvent } from '@antv/g';\nimport { isArray, isNil } from 'lodash-es';\nimport { inject, singleton } from 'mana-syringe';\nimport { vec3, mat4, quat } from 'gl-matrix';\nimport RBush from 'rbush';\nimport { PathGeneratorFactory } from './shapes/paths';\nimport { StyleRendererFactory } from './shapes/styles';\nimport { GradientPool } from './shapes/GradientPool';\nimport { ImagePool } from './shapes/ImagePool';\nimport { RBushNode } from './components/RBushNode';\nexport var RBushRoot = 'RBushRoot';\n/**\n * support 2 modes in rendering:\n * * immediate\n * * delayed: render at the end of frame with dirty-rectangle\n */\n\nvar CanvasRendererPlugin =\n/** @class */\nfunction () {\n  function CanvasRendererPlugin() {\n    this.removedRBushNodeAABBs = [];\n    this.renderQueue = [];\n    this.restoreStack = [];\n    this.clearFullScreen = false;\n    this.enableBatch = false;\n    this.batchedStyleHash = '';\n    this.batchedDisplayObject = null;\n    /**\n     * sync to RBush later\n     */\n\n    this.toSync = new Set();\n  }\n\n  CanvasRendererPlugin_1 = CanvasRendererPlugin;\n\n  CanvasRendererPlugin.prototype.syncRTree = function () {\n    var _this = this; // bounds changed, need re-inserting its children\n\n\n    var bulk = [];\n    Array.from(this.toSync) // some objects may be removed since last frame\n    .filter(function (object) {\n      return object.isConnected;\n    }).forEach(function (node) {\n      // @ts-ignore\n      var rBushNode = node.rBushNode; // clear dirty node\n\n      if (rBushNode) {\n        _this.rBush.remove(rBushNode.aabb);\n      }\n\n      var renderBounds = node.getRenderBounds();\n\n      if (renderBounds) {\n        var _a = __read(renderBounds.getMin(), 2),\n            minX = _a[0],\n            minY = _a[1];\n\n        var _b = __read(renderBounds.getMax(), 2),\n            maxX = _b[0],\n            maxY = _b[1];\n\n        rBushNode.aabb = {\n          id: node.entity,\n          minX: minX,\n          minY: minY,\n          maxX: maxX,\n          maxY: maxY\n        };\n      }\n\n      if (rBushNode.aabb) {\n        bulk.push(rBushNode.aabb);\n      }\n    }); // use bulk inserting, which is ~2-3 times faster\n    // @see https://github.com/mourner/rbush#bulk-inserting-data\n\n    this.rBush.load(bulk);\n    this.toSync.clear();\n  };\n\n  CanvasRendererPlugin.prototype.pushToSync = function (list) {\n    var _this = this;\n\n    list.forEach(function (i) {\n      _this.toSync.add(i);\n    });\n  };\n\n  CanvasRendererPlugin.prototype.apply = function (renderingService) {\n    var _this = this;\n\n    var handleMounted = function handleMounted(e) {\n      var object = e.target; // @ts-ignore\n\n      object.rBushNode = new RBushNode();\n\n      _this.pushToSync(e.composedPath().slice(0, -2));\n    };\n\n    var handleUnmounted = function handleUnmounted(e) {\n      var object = e.target; // remove r-bush node\n      // @ts-ignore\n\n      var rBushNode = object.rBushNode;\n\n      if (rBushNode.aabb) {\n        _this.rBush.remove(rBushNode.aabb);\n\n        _this.toSync.delete(object); // save removed aabbs for dirty-rectangle rendering later\n\n\n        _this.removedRBushNodeAABBs.push(rBushNode.aabb);\n      }\n    };\n\n    var handleBoundsChanged = function handleBoundsChanged(e) {\n      var _a;\n\n      var object = e.target; // skip if this object mounted on another scenegraph root\n\n      if (((_a = object.ownerDocument) === null || _a === void 0 ? void 0 : _a.documentElement) !== _this.renderingContext.root) {\n        return;\n      }\n\n      var affectChildren = e.detail.affectChildren;\n\n      if (affectChildren) {\n        object.forEach(function (node) {\n          _this.pushToSync([node]);\n        });\n      }\n\n      _this.pushToSync(e.composedPath().slice(0, -2));\n    };\n\n    renderingService.hooks.init.tap(CanvasRendererPlugin_1.tag, function () {\n      _this.renderingContext.root.addEventListener(ElementEvent.MOUNTED, handleMounted);\n\n      _this.renderingContext.root.addEventListener(ElementEvent.UNMOUNTED, handleUnmounted);\n\n      _this.renderingContext.root.addEventListener(ElementEvent.BOUNDS_CHANGED, handleBoundsChanged);\n    });\n    renderingService.hooks.destroy.tap(CanvasRendererPlugin_1.tag, function () {\n      _this.renderingContext.root.removeEventListener(ElementEvent.MOUNTED, handleMounted);\n\n      _this.renderingContext.root.removeEventListener(ElementEvent.UNMOUNTED, handleUnmounted);\n\n      _this.renderingContext.root.removeEventListener(ElementEvent.BOUNDS_CHANGED, handleBoundsChanged);\n    });\n    renderingService.hooks.beginFrame.tap(CanvasRendererPlugin_1.tag, function () {\n      var context = _this.contextService.getContext();\n\n      var enableDirtyRectangleRendering = _this.canvasConfig.renderer.getConfig().enableDirtyRectangleRendering; // clear fullscreen when:\n      // 1. dirty rectangle rendering disabled\n      // 2. camera changed\n\n\n      _this.clearFullScreen = !enableDirtyRectangleRendering || _this.renderingContext.renderReasons.has(RenderReason.CAMERA_CHANGED);\n\n      if (context) {\n        context.save();\n\n        if (_this.clearFullScreen) {\n          context.clearRect(0, 0, _this.canvasConfig.width, _this.canvasConfig.height);\n        } // account for camera's world matrix\n\n\n        _this.applyTransform(context, _this.camera.getOrthoMatrix());\n      }\n    }); // render at the end of frame\n\n    renderingService.hooks.endFrame.tap(CanvasRendererPlugin_1.tag, function () {\n      _this.syncRTree();\n\n      var _a = _this.canvasConfig.renderer.getConfig(),\n          enableDirtyRectangleRendering = _a.enableDirtyRectangleRendering,\n          enableDirtyRectangleRenderingDebug = _a.enableDirtyRectangleRenderingDebug;\n\n      var context = _this.contextService.getContext();\n\n      var dirtyObjects = _this.renderQueue;\n\n      if (enableDirtyRectangleRendering) {\n        // eg. camera changed\n        if (!_this.clearFullScreen) {\n          // merge removed AABB\n          var dirtyRenderBounds = _this.safeMergeAABB.apply(_this, __spreadArray([_this.mergeDirtyAABBs( // should not ignore group since clipPath may affect its children\n          // this.renderQueue.filter((o) => o.nodeName !== Shape.GROUP)),\n          _this.renderQueue)], __read(_this.removedRBushNodeAABBs.map(function (_a) {\n            var minX = _a.minX,\n                minY = _a.minY,\n                maxX = _a.maxX,\n                maxY = _a.maxY;\n            var aabb = new AABB();\n            aabb.setMinMax(vec3.fromValues(minX, minY, 0), vec3.fromValues(maxX, maxY, 0));\n            return aabb;\n          })), false));\n\n          _this.removedRBushNodeAABBs = [];\n\n          if (AABB.isEmpty(dirtyRenderBounds)) {\n            _this.renderQueue = [];\n            return;\n          } // clear & clip dirty rectangle\n\n\n          var _b = _this.convertAABB2Rect(dirtyRenderBounds),\n              x = _b.x,\n              y = _b.y,\n              width = _b.width,\n              height = _b.height;\n\n          context.clearRect(x, y, width, height);\n          context.beginPath();\n          context.rect(x, y, width, height);\n          context.clip(); // draw dirty rectangle\n\n          if (enableDirtyRectangleRenderingDebug) {\n            context.lineWidth = 4;\n            context.strokeStyle = \"rgba(\".concat(Math.random() * 255, \", \").concat(Math.random() * 255, \", \").concat(Math.random() * 255, \", 1)\");\n            context.strokeRect(x, y, width, height);\n          } // search objects intersect with dirty rectangle\n\n\n          dirtyObjects = _this.searchDirtyObjects(dirtyRenderBounds);\n        } // do rendering\n\n\n        dirtyObjects // sort by z-index\n        .sort(function (a, b) {\n          return a.sortable.renderOrder - b.sortable.renderOrder;\n        }).forEach(function (object) {\n          // culled object should not be rendered\n          if (object && object.isVisible()) {\n            _this.renderDisplayObject(object, renderingService);\n          }\n        });\n\n        if (_this.enableBatch && _this.batchedStyleHash) {\n          _this.flush(context, renderingService);\n        } // save dirty AABBs in last frame\n\n\n        _this.renderQueue.forEach(function (object) {\n          _this.saveDirtyAABB(object);\n        }); // clear queue\n\n\n        _this.renderQueue = [];\n      } // pop restore stack, eg. root -> parent -> child\n\n\n      _this.restoreStack.forEach(function (s) {\n        context.restore();\n      }); // clear restore stack\n\n\n      _this.restoreStack = [];\n      _this.clearFullScreen = false;\n      context.restore();\n    });\n    renderingService.hooks.render.tap(CanvasRendererPlugin_1.tag, function (object) {\n      var enableDirtyRectangleRendering = _this.canvasConfig.renderer.getConfig().enableDirtyRectangleRendering;\n\n      if (!enableDirtyRectangleRendering) {\n        // render immediately\n        _this.renderDisplayObject(object, renderingService);\n      } else {\n        // render at the end of frame\n        _this.renderQueue.push(object);\n      }\n    });\n  };\n\n  CanvasRendererPlugin.prototype.flush = function (context, renderingService) {\n    if (this.batchedDisplayObject) {\n      var styleRenderer = this.styleRendererFactory(this.batchedDisplayObject.nodeName);\n\n      if (styleRenderer) {\n        // apply attributes to context\n        this.applyAttributesToContext(context, this.batchedDisplayObject, renderingService); // close path first\n\n        context.closePath();\n        styleRenderer.render(context, this.batchedDisplayObject.parsedStyle, this.batchedDisplayObject);\n        context.restore();\n      }\n\n      this.batchedStyleHash = '';\n      this.batchedDisplayObject = null;\n    }\n  };\n\n  CanvasRendererPlugin.prototype.renderDisplayObject = function (object, renderingService) {\n    var _this = this;\n\n    var context = this.contextService.getContext(); // restore to its parent\n\n    var parent = this.restoreStack[this.restoreStack.length - 1];\n\n    while (parent && object.parentNode !== parent) {\n      context.restore();\n      this.restoreStack.pop();\n      parent = this.restoreStack[this.restoreStack.length - 1];\n    }\n\n    var nodeName = object.nodeName;\n    var styleRenderer = this.styleRendererFactory(nodeName);\n    var startBatch = false;\n\n    if (this.enableBatch && styleRenderer) {\n      var hash = styleRenderer.hash(object.attributes);\n\n      if (this.batchedStyleHash && hash !== this.batchedStyleHash) {\n        this.flush(context, renderingService);\n      }\n\n      if (!this.batchedStyleHash) {\n        this.batchedStyleHash = hash;\n        this.batchedDisplayObject = object;\n        startBatch = true;\n      }\n    } // reset transformation\n\n\n    context.save(); // apply RTS transformation in world space\n\n    this.applyTransform(context, object.getLocalTransform()); // clip path\n\n    var clipPathShape = object.style.clipPath;\n\n    if (clipPathShape) {\n      context.save(); // apply clip shape's RTS\n\n      this.applyTransform(context, clipPathShape.getLocalTransform()); // generate path in local space\n\n      var generatePath_1 = this.pathGeneratorFactory(clipPathShape.nodeName);\n\n      if (generatePath_1) {\n        this.useAnchor(context, clipPathShape, function () {\n          context.beginPath();\n          generatePath_1(context, clipPathShape.parsedStyle);\n          context.closePath();\n        });\n      }\n\n      context.restore();\n      context.clip();\n    } // fill & stroke\n\n\n    if (!this.enableBatch) {\n      context.save(); // apply attributes to context\n\n      this.applyAttributesToContext(context, object, renderingService);\n    } // apply anchor in local space\n\n\n    this.useAnchor(context, object, function () {\n      // generate path in local space\n      var generatePath = _this.pathGeneratorFactory(object.nodeName);\n\n      if (generatePath) {\n        if (startBatch || !_this.enableBatch) {\n          context.beginPath();\n        }\n\n        generatePath(context, object.parsedStyle);\n\n        if (!_this.enableBatch && object.nodeName !== Shape.LINE && object.nodeName !== Shape.PATH && object.nodeName !== Shape.POLYLINE) {\n          context.closePath();\n        }\n      } // fill & stroke\n\n\n      if (styleRenderer && !_this.enableBatch) {\n        styleRenderer.render(context, object.parsedStyle, object);\n      }\n    }); // restore applied attributes, eg. shadowBlur shadowColor...\n\n    if (!this.enableBatch) {\n      context.restore();\n    } // finish rendering, clear dirty flag\n\n\n    object.renderable.dirty = false;\n    this.restoreStack.push(object);\n  };\n\n  CanvasRendererPlugin.prototype.convertAABB2Rect = function (aabb) {\n    var min = aabb.getMin();\n    var max = aabb.getMax(); // expand the rectangle a bit to avoid artifacts\n    // @see https://www.yuque.com/antv/ou292n/bi8nix#ExvCu\n\n    var minX = Math.floor(min[0]);\n    var minY = Math.floor(min[1]);\n    var maxX = Math.ceil(max[0]);\n    var maxY = Math.ceil(max[1]);\n    var width = maxX - minX;\n    var height = maxY - minY;\n    return {\n      x: minX,\n      y: minY,\n      width: width,\n      height: height\n    };\n  };\n  /**\n   * TODO: merge dirty rectangles with some strategies.\n   * For now, we just simply merge all the rectangles into one.\n   * @see https://idom.me/articles/841.html\n   */\n\n\n  CanvasRendererPlugin.prototype.mergeDirtyAABBs = function (dirtyObjects) {\n    // merge into a big AABB\n    var aabb = new AABB();\n    dirtyObjects.forEach(function (object) {\n      var renderBounds = object.getRenderBounds();\n      aabb.add(renderBounds);\n      var dirtyRenderBounds = object.renderable.dirtyRenderBounds;\n\n      if (dirtyRenderBounds) {\n        aabb.add(dirtyRenderBounds);\n      }\n    });\n    return aabb;\n  };\n\n  CanvasRendererPlugin.prototype.searchDirtyObjects = function (dirtyRectangle) {\n    var _this = this; // search in r-tree, get all affected nodes\n\n\n    var _a = __read(dirtyRectangle.getMin(), 2),\n        minX = _a[0],\n        minY = _a[1];\n\n    var _b = __read(dirtyRectangle.getMax(), 2),\n        maxX = _b[0],\n        maxY = _b[1];\n\n    var rBushNodes = this.rBush.search({\n      minX: minX,\n      minY: minY,\n      maxX: maxX,\n      maxY: maxY\n    });\n    return rBushNodes.map(function (_a) {\n      var id = _a.id;\n      return _this.displayObjectPool.getByEntity(id);\n    });\n  };\n\n  CanvasRendererPlugin.prototype.saveDirtyAABB = function (object) {\n    var renderable = object.renderable;\n\n    if (!renderable.dirtyRenderBounds) {\n      renderable.dirtyRenderBounds = new AABB();\n    }\n\n    var renderBounds = object.getRenderBounds();\n\n    if (renderBounds) {\n      // save last dirty aabb\n      renderable.dirtyRenderBounds.update(renderBounds.center, renderBounds.halfExtents);\n    }\n  };\n\n  CanvasRendererPlugin.prototype.applyTransform = function (context, transform) {\n    var _a = __read(mat4.getTranslation(vec3.create(), transform), 2),\n        tx = _a[0],\n        ty = _a[1];\n\n    var _b = __read(mat4.getScaling(vec3.create(), transform), 2),\n        sx = _b[0],\n        sy = _b[1];\n\n    var rotation = mat4.getRotation(quat.create(), transform); // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n    var _c = __read(getEuler(vec3.create(), rotation), 3),\n        eux = _c[0],\n        euy = _c[1],\n        euz = _c[2]; // gimbal lock at 90 degrees\n\n\n    var rts = fromRotationTranslationScale(eux || euz, tx, ty, sx, sy); // @see https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Transformations\n\n    context.transform(rts[0], rts[1], rts[3], rts[4], rts[6], rts[7]);\n  };\n\n  CanvasRendererPlugin.prototype.getColor = function (parsedColor, object, context, renderingService) {\n    var color;\n\n    if (parsedColor instanceof CSSGradientValue) {\n      if (parsedColor.type === GradientPatternType.LinearGradient || parsedColor.type === GradientPatternType.RadialGradient) {\n        var bounds = object.getGeometryBounds();\n        var width = bounds && bounds.halfExtents[0] * 2 || 0;\n        var height = bounds && bounds.halfExtents[1] * 2 || 0;\n        color = this.gradientPool.getOrCreateGradient(__assign(__assign({\n          type: parsedColor.type\n        }, parsedColor.value), {\n          width: width,\n          height: height\n        }), context);\n      } else if (parsedColor.type === GradientPatternType.Pattern) {\n        var pattern = this.imagePool.getPatternSync(parsedColor.value);\n\n        if (pattern) {\n          color = pattern;\n        } else {\n          this.imagePool.createPattern(parsedColor.value, context).then(function () {\n            // set dirty rectangle flag\n            object.renderable.dirty = true;\n            renderingService.dirtify();\n          });\n        }\n      }\n    } else {\n      // constant, eg. rgba(255,255,255,1)\n      color = parsedColor.toString();\n    }\n\n    return color;\n  };\n\n  CanvasRendererPlugin.prototype.applyAttributesToContext = function (context, object, renderingService) {\n    var _a = object.parsedStyle,\n        stroke = _a.stroke,\n        fill = _a.fill,\n        opacity = _a.opacity,\n        lineDash = _a.lineDash,\n        lineDashOffset = _a.lineDashOffset,\n        filter = _a.filter,\n        shadowColor = _a.shadowColor,\n        shadowBlur = _a.shadowBlur,\n        shadowOffsetX = _a.shadowOffsetX,\n        shadowOffsetY = _a.shadowOffsetY; // @see https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/setLineDash\n\n    if (lineDash && isArray(lineDash)) {\n      context.setLineDash(lineDash.map(function (segment) {\n        return segment.value;\n      }));\n    } // @see https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset\n\n\n    if (!isNil(lineDashOffset)) {\n      context.lineDashOffset = lineDashOffset.value;\n    }\n\n    if (!isNil(opacity)) {\n      context.globalAlpha *= opacity.value;\n    }\n\n    if (!isNil(stroke)) {\n      context.strokeStyle = this.getColor(stroke, object, context, renderingService);\n    }\n\n    if (!isNil(fill)) {\n      context.fillStyle = this.getColor(fill, object, context, renderingService);\n    }\n\n    if (!isNil(filter)) {\n      // use raw filter string\n      context.filter = object.style.filter;\n    }\n\n    if (!isNil(shadowColor)) {\n      context.shadowColor = shadowColor.toString();\n      context.shadowBlur = shadowBlur && shadowBlur.value || 0;\n      context.shadowOffsetX = shadowOffsetX && shadowOffsetX.value || 0;\n      context.shadowOffsetY = shadowOffsetY && shadowOffsetY.value || 0;\n    }\n  };\n\n  CanvasRendererPlugin.prototype.useAnchor = function (context, object, callback) {\n    var contentBounds = object.getGeometryBounds();\n\n    if (contentBounds) {\n      var halfExtents = contentBounds.halfExtents; // apply anchor, use true size, not include stroke,\n      // eg. bounds = true size + half lineWidth\n\n      var anchor = (object.parsedStyle || {}).anchor;\n      context.translate(-(anchor && anchor[0].value || 0) * halfExtents[0] * 2, -(anchor && anchor[1].value || 0) * halfExtents[1] * 2);\n      callback();\n    } else {\n      callback();\n    }\n  };\n\n  CanvasRendererPlugin.prototype.safeMergeAABB = function () {\n    var aabbs = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      aabbs[_i] = arguments[_i];\n    }\n\n    var merged = new AABB();\n    aabbs.forEach(function (aabb) {\n      merged.add(aabb);\n    });\n    return merged;\n  };\n\n  var CanvasRendererPlugin_1;\n  CanvasRendererPlugin.tag = 'CanvasRendererPlugin';\n\n  __decorate([inject(CanvasConfig), __metadata(\"design:type\", Object)], CanvasRendererPlugin.prototype, \"canvasConfig\", void 0);\n\n  __decorate([inject(DefaultCamera), __metadata(\"design:type\", Camera)], CanvasRendererPlugin.prototype, \"camera\", void 0);\n\n  __decorate([inject(ContextService), __metadata(\"design:type\", Object)], CanvasRendererPlugin.prototype, \"contextService\", void 0);\n\n  __decorate([inject(RenderingContext), __metadata(\"design:type\", Object)], CanvasRendererPlugin.prototype, \"renderingContext\", void 0);\n\n  __decorate([inject(ImagePool), __metadata(\"design:type\", ImagePool)], CanvasRendererPlugin.prototype, \"imagePool\", void 0);\n\n  __decorate([inject(GradientPool), __metadata(\"design:type\", GradientPool)], CanvasRendererPlugin.prototype, \"gradientPool\", void 0);\n\n  __decorate([inject(PathGeneratorFactory), __metadata(\"design:type\", Function)], CanvasRendererPlugin.prototype, \"pathGeneratorFactory\", void 0);\n\n  __decorate([inject(StyleRendererFactory), __metadata(\"design:type\", Function)], CanvasRendererPlugin.prototype, \"styleRendererFactory\", void 0);\n\n  __decorate([inject(DisplayObjectPool), __metadata(\"design:type\", DisplayObjectPool)], CanvasRendererPlugin.prototype, \"displayObjectPool\", void 0);\n\n  __decorate([inject(RBushRoot), __metadata(\"design:type\", RBush)], CanvasRendererPlugin.prototype, \"rBush\", void 0);\n\n  CanvasRendererPlugin = CanvasRendererPlugin_1 = __decorate([singleton({\n    contrib: RenderingPluginContribution\n  })], CanvasRendererPlugin);\n  return CanvasRendererPlugin;\n}();\n\nexport { CanvasRendererPlugin };","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/@antv/g-plugin-canvas-renderer/es/CanvasRendererPlugin.js"],"names":["__assign","__decorate","__metadata","__read","__spreadArray","AABB","Shape","DisplayObjectPool","CanvasConfig","ContextService","RenderingContext","RenderingPluginContribution","getEuler","fromRotationTranslationScale","Camera","DefaultCamera","CSSGradientValue","GradientPatternType","RenderReason","ElementEvent","isArray","isNil","inject","singleton","vec3","mat4","quat","RBush","PathGeneratorFactory","StyleRendererFactory","GradientPool","ImagePool","RBushNode","RBushRoot","CanvasRendererPlugin","removedRBushNodeAABBs","renderQueue","restoreStack","clearFullScreen","enableBatch","batchedStyleHash","batchedDisplayObject","toSync","Set","CanvasRendererPlugin_1","prototype","syncRTree","_this","bulk","Array","from","filter","object","isConnected","forEach","node","rBushNode","rBush","remove","aabb","renderBounds","getRenderBounds","_a","getMin","minX","minY","_b","getMax","maxX","maxY","id","entity","push","load","clear","pushToSync","list","i","add","apply","renderingService","handleMounted","e","target","composedPath","slice","handleUnmounted","delete","handleBoundsChanged","ownerDocument","documentElement","renderingContext","root","affectChildren","detail","hooks","init","tap","tag","addEventListener","MOUNTED","UNMOUNTED","BOUNDS_CHANGED","destroy","removeEventListener","beginFrame","context","contextService","getContext","enableDirtyRectangleRendering","canvasConfig","renderer","getConfig","renderReasons","has","CAMERA_CHANGED","save","clearRect","width","height","applyTransform","camera","getOrthoMatrix","endFrame","enableDirtyRectangleRenderingDebug","dirtyObjects","dirtyRenderBounds","safeMergeAABB","mergeDirtyAABBs","map","setMinMax","fromValues","isEmpty","convertAABB2Rect","x","y","beginPath","rect","clip","lineWidth","strokeStyle","concat","Math","random","strokeRect","searchDirtyObjects","sort","a","b","sortable","renderOrder","isVisible","renderDisplayObject","flush","saveDirtyAABB","s","restore","render","styleRenderer","styleRendererFactory","nodeName","applyAttributesToContext","closePath","parsedStyle","parent","length","parentNode","pop","startBatch","hash","attributes","getLocalTransform","clipPathShape","style","clipPath","generatePath_1","pathGeneratorFactory","useAnchor","generatePath","LINE","PATH","POLYLINE","renderable","dirty","min","max","floor","ceil","dirtyRectangle","rBushNodes","search","displayObjectPool","getByEntity","update","center","halfExtents","transform","getTranslation","create","tx","ty","getScaling","sx","sy","rotation","getRotation","_c","eux","euy","euz","rts","getColor","parsedColor","color","type","LinearGradient","RadialGradient","bounds","getGeometryBounds","gradientPool","getOrCreateGradient","value","Pattern","pattern","imagePool","getPatternSync","createPattern","then","dirtify","toString","stroke","fill","opacity","lineDash","lineDashOffset","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","setLineDash","segment","globalAlpha","fillStyle","callback","contentBounds","anchor","translate","aabbs","_i","arguments","merged","Object","Function","contrib"],"mappings":"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","sourcesContent":["import { __assign, __decorate, __metadata, __read, __spreadArray } from \"tslib\";\nimport { AABB, Shape, DisplayObjectPool, CanvasConfig, ContextService, RenderingContext, RenderingPluginContribution, getEuler, fromRotationTranslationScale, Camera, DefaultCamera, CSSGradientValue, GradientPatternType, RenderReason, ElementEvent } from '@antv/g';\nimport { isArray, isNil } from 'lodash-es';\nimport { inject, singleton } from 'mana-syringe';\nimport { vec3, mat4, quat } from 'gl-matrix';\nimport RBush from 'rbush';\nimport { PathGeneratorFactory } from './shapes/paths';\nimport { StyleRendererFactory } from './shapes/styles';\nimport { GradientPool } from './shapes/GradientPool';\nimport { ImagePool } from './shapes/ImagePool';\nimport { RBushNode } from './components/RBushNode';\nexport var RBushRoot = 'RBushRoot';\n/**\n * support 2 modes in rendering:\n * * immediate\n * * delayed: render at the end of frame with dirty-rectangle\n */\n\nvar CanvasRendererPlugin =\n/** @class */\nfunction () {\n  function CanvasRendererPlugin() {\n    this.removedRBushNodeAABBs = [];\n    this.renderQueue = [];\n    this.restoreStack = [];\n    this.clearFullScreen = false;\n    this.enableBatch = false;\n    this.batchedStyleHash = '';\n    this.batchedDisplayObject = null;\n    /**\n     * sync to RBush later\n     */\n\n    this.toSync = new Set();\n  }\n\n  CanvasRendererPlugin_1 = CanvasRendererPlugin;\n\n  CanvasRendererPlugin.prototype.syncRTree = function () {\n    var _this = this; // bounds changed, need re-inserting its children\n\n\n    var bulk = [];\n    Array.from(this.toSync) // some objects may be removed since last frame\n    .filter(function (object) {\n      return object.isConnected;\n    }).forEach(function (node) {\n      // @ts-ignore\n      var rBushNode = node.rBushNode; // clear dirty node\n\n      if (rBushNode) {\n        _this.rBush.remove(rBushNode.aabb);\n      }\n\n      var renderBounds = node.getRenderBounds();\n\n      if (renderBounds) {\n        var _a = __read(renderBounds.getMin(), 2),\n            minX = _a[0],\n            minY = _a[1];\n\n        var _b = __read(renderBounds.getMax(), 2),\n            maxX = _b[0],\n            maxY = _b[1];\n\n        rBushNode.aabb = {\n          id: node.entity,\n          minX: minX,\n          minY: minY,\n          maxX: maxX,\n          maxY: maxY\n        };\n      }\n\n      if (rBushNode.aabb) {\n        bulk.push(rBushNode.aabb);\n      }\n    }); // use bulk inserting, which is ~2-3 times faster\n    // @see https://github.com/mourner/rbush#bulk-inserting-data\n\n    this.rBush.load(bulk);\n    this.toSync.clear();\n  };\n\n  CanvasRendererPlugin.prototype.pushToSync = function (list) {\n    var _this = this;\n\n    list.forEach(function (i) {\n      _this.toSync.add(i);\n    });\n  };\n\n  CanvasRendererPlugin.prototype.apply = function (renderingService) {\n    var _this = this;\n\n    var handleMounted = function handleMounted(e) {\n      var object = e.target; // @ts-ignore\n\n      object.rBushNode = new RBushNode();\n\n      _this.pushToSync(e.composedPath().slice(0, -2));\n    };\n\n    var handleUnmounted = function handleUnmounted(e) {\n      var object = e.target; // remove r-bush node\n      // @ts-ignore\n\n      var rBushNode = object.rBushNode;\n\n      if (rBushNode.aabb) {\n        _this.rBush.remove(rBushNode.aabb);\n\n        _this.toSync.delete(object); // save removed aabbs for dirty-rectangle rendering later\n\n\n        _this.removedRBushNodeAABBs.push(rBushNode.aabb);\n      }\n    };\n\n    var handleBoundsChanged = function handleBoundsChanged(e) {\n      var _a;\n\n      var object = e.target; // skip if this object mounted on another scenegraph root\n\n      if (((_a = object.ownerDocument) === null || _a === void 0 ? void 0 : _a.documentElement) !== _this.renderingContext.root) {\n        return;\n      }\n\n      var affectChildren = e.detail.affectChildren;\n\n      if (affectChildren) {\n        object.forEach(function (node) {\n          _this.pushToSync([node]);\n        });\n      }\n\n      _this.pushToSync(e.composedPath().slice(0, -2));\n    };\n\n    renderingService.hooks.init.tap(CanvasRendererPlugin_1.tag, function () {\n      _this.renderingContext.root.addEventListener(ElementEvent.MOUNTED, handleMounted);\n\n      _this.renderingContext.root.addEventListener(ElementEvent.UNMOUNTED, handleUnmounted);\n\n      _this.renderingContext.root.addEventListener(ElementEvent.BOUNDS_CHANGED, handleBoundsChanged);\n    });\n    renderingService.hooks.destroy.tap(CanvasRendererPlugin_1.tag, function () {\n      _this.renderingContext.root.removeEventListener(ElementEvent.MOUNTED, handleMounted);\n\n      _this.renderingContext.root.removeEventListener(ElementEvent.UNMOUNTED, handleUnmounted);\n\n      _this.renderingContext.root.removeEventListener(ElementEvent.BOUNDS_CHANGED, handleBoundsChanged);\n    });\n    renderingService.hooks.beginFrame.tap(CanvasRendererPlugin_1.tag, function () {\n      var context = _this.contextService.getContext();\n\n      var enableDirtyRectangleRendering = _this.canvasConfig.renderer.getConfig().enableDirtyRectangleRendering; // clear fullscreen when:\n      // 1. dirty rectangle rendering disabled\n      // 2. camera changed\n\n\n      _this.clearFullScreen = !enableDirtyRectangleRendering || _this.renderingContext.renderReasons.has(RenderReason.CAMERA_CHANGED);\n\n      if (context) {\n        context.save();\n\n        if (_this.clearFullScreen) {\n          context.clearRect(0, 0, _this.canvasConfig.width, _this.canvasConfig.height);\n        } // account for camera's world matrix\n\n\n        _this.applyTransform(context, _this.camera.getOrthoMatrix());\n      }\n    }); // render at the end of frame\n\n    renderingService.hooks.endFrame.tap(CanvasRendererPlugin_1.tag, function () {\n      _this.syncRTree();\n\n      var _a = _this.canvasConfig.renderer.getConfig(),\n          enableDirtyRectangleRendering = _a.enableDirtyRectangleRendering,\n          enableDirtyRectangleRenderingDebug = _a.enableDirtyRectangleRenderingDebug;\n\n      var context = _this.contextService.getContext();\n\n      var dirtyObjects = _this.renderQueue;\n\n      if (enableDirtyRectangleRendering) {\n        // eg. camera changed\n        if (!_this.clearFullScreen) {\n          // merge removed AABB\n          var dirtyRenderBounds = _this.safeMergeAABB.apply(_this, __spreadArray([_this.mergeDirtyAABBs( // should not ignore group since clipPath may affect its children\n          // this.renderQueue.filter((o) => o.nodeName !== Shape.GROUP)),\n          _this.renderQueue)], __read(_this.removedRBushNodeAABBs.map(function (_a) {\n            var minX = _a.minX,\n                minY = _a.minY,\n                maxX = _a.maxX,\n                maxY = _a.maxY;\n            var aabb = new AABB();\n            aabb.setMinMax(vec3.fromValues(minX, minY, 0), vec3.fromValues(maxX, maxY, 0));\n            return aabb;\n          })), false));\n\n          _this.removedRBushNodeAABBs = [];\n\n          if (AABB.isEmpty(dirtyRenderBounds)) {\n            _this.renderQueue = [];\n            return;\n          } // clear & clip dirty rectangle\n\n\n          var _b = _this.convertAABB2Rect(dirtyRenderBounds),\n              x = _b.x,\n              y = _b.y,\n              width = _b.width,\n              height = _b.height;\n\n          context.clearRect(x, y, width, height);\n          context.beginPath();\n          context.rect(x, y, width, height);\n          context.clip(); // draw dirty rectangle\n\n          if (enableDirtyRectangleRenderingDebug) {\n            context.lineWidth = 4;\n            context.strokeStyle = \"rgba(\".concat(Math.random() * 255, \", \").concat(Math.random() * 255, \", \").concat(Math.random() * 255, \", 1)\");\n            context.strokeRect(x, y, width, height);\n          } // search objects intersect with dirty rectangle\n\n\n          dirtyObjects = _this.searchDirtyObjects(dirtyRenderBounds);\n        } // do rendering\n\n\n        dirtyObjects // sort by z-index\n        .sort(function (a, b) {\n          return a.sortable.renderOrder - b.sortable.renderOrder;\n        }).forEach(function (object) {\n          // culled object should not be rendered\n          if (object && object.isVisible()) {\n            _this.renderDisplayObject(object, renderingService);\n          }\n        });\n\n        if (_this.enableBatch && _this.batchedStyleHash) {\n          _this.flush(context, renderingService);\n        } // save dirty AABBs in last frame\n\n\n        _this.renderQueue.forEach(function (object) {\n          _this.saveDirtyAABB(object);\n        }); // clear queue\n\n\n        _this.renderQueue = [];\n      } // pop restore stack, eg. root -> parent -> child\n\n\n      _this.restoreStack.forEach(function (s) {\n        context.restore();\n      }); // clear restore stack\n\n\n      _this.restoreStack = [];\n      _this.clearFullScreen = false;\n      context.restore();\n    });\n    renderingService.hooks.render.tap(CanvasRendererPlugin_1.tag, function (object) {\n      var enableDirtyRectangleRendering = _this.canvasConfig.renderer.getConfig().enableDirtyRectangleRendering;\n\n      if (!enableDirtyRectangleRendering) {\n        // render immediately\n        _this.renderDisplayObject(object, renderingService);\n      } else {\n        // render at the end of frame\n        _this.renderQueue.push(object);\n      }\n    });\n  };\n\n  CanvasRendererPlugin.prototype.flush = function (context, renderingService) {\n    if (this.batchedDisplayObject) {\n      var styleRenderer = this.styleRendererFactory(this.batchedDisplayObject.nodeName);\n\n      if (styleRenderer) {\n        // apply attributes to context\n        this.applyAttributesToContext(context, this.batchedDisplayObject, renderingService); // close path first\n\n        context.closePath();\n        styleRenderer.render(context, this.batchedDisplayObject.parsedStyle, this.batchedDisplayObject);\n        context.restore();\n      }\n\n      this.batchedStyleHash = '';\n      this.batchedDisplayObject = null;\n    }\n  };\n\n  CanvasRendererPlugin.prototype.renderDisplayObject = function (object, renderingService) {\n    var _this = this;\n\n    var context = this.contextService.getContext(); // restore to its parent\n\n    var parent = this.restoreStack[this.restoreStack.length - 1];\n\n    while (parent && object.parentNode !== parent) {\n      context.restore();\n      this.restoreStack.pop();\n      parent = this.restoreStack[this.restoreStack.length - 1];\n    }\n\n    var nodeName = object.nodeName;\n    var styleRenderer = this.styleRendererFactory(nodeName);\n    var startBatch = false;\n\n    if (this.enableBatch && styleRenderer) {\n      var hash = styleRenderer.hash(object.attributes);\n\n      if (this.batchedStyleHash && hash !== this.batchedStyleHash) {\n        this.flush(context, renderingService);\n      }\n\n      if (!this.batchedStyleHash) {\n        this.batchedStyleHash = hash;\n        this.batchedDisplayObject = object;\n        startBatch = true;\n      }\n    } // reset transformation\n\n\n    context.save(); // apply RTS transformation in world space\n\n    this.applyTransform(context, object.getLocalTransform()); // clip path\n\n    var clipPathShape = object.style.clipPath;\n\n    if (clipPathShape) {\n      context.save(); // apply clip shape's RTS\n\n      this.applyTransform(context, clipPathShape.getLocalTransform()); // generate path in local space\n\n      var generatePath_1 = this.pathGeneratorFactory(clipPathShape.nodeName);\n\n      if (generatePath_1) {\n        this.useAnchor(context, clipPathShape, function () {\n          context.beginPath();\n          generatePath_1(context, clipPathShape.parsedStyle);\n          context.closePath();\n        });\n      }\n\n      context.restore();\n      context.clip();\n    } // fill & stroke\n\n\n    if (!this.enableBatch) {\n      context.save(); // apply attributes to context\n\n      this.applyAttributesToContext(context, object, renderingService);\n    } // apply anchor in local space\n\n\n    this.useAnchor(context, object, function () {\n      // generate path in local space\n      var generatePath = _this.pathGeneratorFactory(object.nodeName);\n\n      if (generatePath) {\n        if (startBatch || !_this.enableBatch) {\n          context.beginPath();\n        }\n\n        generatePath(context, object.parsedStyle);\n\n        if (!_this.enableBatch && object.nodeName !== Shape.LINE && object.nodeName !== Shape.PATH && object.nodeName !== Shape.POLYLINE) {\n          context.closePath();\n        }\n      } // fill & stroke\n\n\n      if (styleRenderer && !_this.enableBatch) {\n        styleRenderer.render(context, object.parsedStyle, object);\n      }\n    }); // restore applied attributes, eg. shadowBlur shadowColor...\n\n    if (!this.enableBatch) {\n      context.restore();\n    } // finish rendering, clear dirty flag\n\n\n    object.renderable.dirty = false;\n    this.restoreStack.push(object);\n  };\n\n  CanvasRendererPlugin.prototype.convertAABB2Rect = function (aabb) {\n    var min = aabb.getMin();\n    var max = aabb.getMax(); // expand the rectangle a bit to avoid artifacts\n    // @see https://www.yuque.com/antv/ou292n/bi8nix#ExvCu\n\n    var minX = Math.floor(min[0]);\n    var minY = Math.floor(min[1]);\n    var maxX = Math.ceil(max[0]);\n    var maxY = Math.ceil(max[1]);\n    var width = maxX - minX;\n    var height = maxY - minY;\n    return {\n      x: minX,\n      y: minY,\n      width: width,\n      height: height\n    };\n  };\n  /**\n   * TODO: merge dirty rectangles with some strategies.\n   * For now, we just simply merge all the rectangles into one.\n   * @see https://idom.me/articles/841.html\n   */\n\n\n  CanvasRendererPlugin.prototype.mergeDirtyAABBs = function (dirtyObjects) {\n    // merge into a big AABB\n    var aabb = new AABB();\n    dirtyObjects.forEach(function (object) {\n      var renderBounds = object.getRenderBounds();\n      aabb.add(renderBounds);\n      var dirtyRenderBounds = object.renderable.dirtyRenderBounds;\n\n      if (dirtyRenderBounds) {\n        aabb.add(dirtyRenderBounds);\n      }\n    });\n    return aabb;\n  };\n\n  CanvasRendererPlugin.prototype.searchDirtyObjects = function (dirtyRectangle) {\n    var _this = this; // search in r-tree, get all affected nodes\n\n\n    var _a = __read(dirtyRectangle.getMin(), 2),\n        minX = _a[0],\n        minY = _a[1];\n\n    var _b = __read(dirtyRectangle.getMax(), 2),\n        maxX = _b[0],\n        maxY = _b[1];\n\n    var rBushNodes = this.rBush.search({\n      minX: minX,\n      minY: minY,\n      maxX: maxX,\n      maxY: maxY\n    });\n    return rBushNodes.map(function (_a) {\n      var id = _a.id;\n      return _this.displayObjectPool.getByEntity(id);\n    });\n  };\n\n  CanvasRendererPlugin.prototype.saveDirtyAABB = function (object) {\n    var renderable = object.renderable;\n\n    if (!renderable.dirtyRenderBounds) {\n      renderable.dirtyRenderBounds = new AABB();\n    }\n\n    var renderBounds = object.getRenderBounds();\n\n    if (renderBounds) {\n      // save last dirty aabb\n      renderable.dirtyRenderBounds.update(renderBounds.center, renderBounds.halfExtents);\n    }\n  };\n\n  CanvasRendererPlugin.prototype.applyTransform = function (context, transform) {\n    var _a = __read(mat4.getTranslation(vec3.create(), transform), 2),\n        tx = _a[0],\n        ty = _a[1];\n\n    var _b = __read(mat4.getScaling(vec3.create(), transform), 2),\n        sx = _b[0],\n        sy = _b[1];\n\n    var rotation = mat4.getRotation(quat.create(), transform); // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n    var _c = __read(getEuler(vec3.create(), rotation), 3),\n        eux = _c[0],\n        euy = _c[1],\n        euz = _c[2]; // gimbal lock at 90 degrees\n\n\n    var rts = fromRotationTranslationScale(eux || euz, tx, ty, sx, sy); // @see https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Transformations\n\n    context.transform(rts[0], rts[1], rts[3], rts[4], rts[6], rts[7]);\n  };\n\n  CanvasRendererPlugin.prototype.getColor = function (parsedColor, object, context, renderingService) {\n    var color;\n\n    if (parsedColor instanceof CSSGradientValue) {\n      if (parsedColor.type === GradientPatternType.LinearGradient || parsedColor.type === GradientPatternType.RadialGradient) {\n        var bounds = object.getGeometryBounds();\n        var width = bounds && bounds.halfExtents[0] * 2 || 0;\n        var height = bounds && bounds.halfExtents[1] * 2 || 0;\n        color = this.gradientPool.getOrCreateGradient(__assign(__assign({\n          type: parsedColor.type\n        }, parsedColor.value), {\n          width: width,\n          height: height\n        }), context);\n      } else if (parsedColor.type === GradientPatternType.Pattern) {\n        var pattern = this.imagePool.getPatternSync(parsedColor.value);\n\n        if (pattern) {\n          color = pattern;\n        } else {\n          this.imagePool.createPattern(parsedColor.value, context).then(function () {\n            // set dirty rectangle flag\n            object.renderable.dirty = true;\n            renderingService.dirtify();\n          });\n        }\n      }\n    } else {\n      // constant, eg. rgba(255,255,255,1)\n      color = parsedColor.toString();\n    }\n\n    return color;\n  };\n\n  CanvasRendererPlugin.prototype.applyAttributesToContext = function (context, object, renderingService) {\n    var _a = object.parsedStyle,\n        stroke = _a.stroke,\n        fill = _a.fill,\n        opacity = _a.opacity,\n        lineDash = _a.lineDash,\n        lineDashOffset = _a.lineDashOffset,\n        filter = _a.filter,\n        shadowColor = _a.shadowColor,\n        shadowBlur = _a.shadowBlur,\n        shadowOffsetX = _a.shadowOffsetX,\n        shadowOffsetY = _a.shadowOffsetY; // @see https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/setLineDash\n\n    if (lineDash && isArray(lineDash)) {\n      context.setLineDash(lineDash.map(function (segment) {\n        return segment.value;\n      }));\n    } // @see https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/lineDashOffset\n\n\n    if (!isNil(lineDashOffset)) {\n      context.lineDashOffset = lineDashOffset.value;\n    }\n\n    if (!isNil(opacity)) {\n      context.globalAlpha *= opacity.value;\n    }\n\n    if (!isNil(stroke)) {\n      context.strokeStyle = this.getColor(stroke, object, context, renderingService);\n    }\n\n    if (!isNil(fill)) {\n      context.fillStyle = this.getColor(fill, object, context, renderingService);\n    }\n\n    if (!isNil(filter)) {\n      // use raw filter string\n      context.filter = object.style.filter;\n    }\n\n    if (!isNil(shadowColor)) {\n      context.shadowColor = shadowColor.toString();\n      context.shadowBlur = shadowBlur && shadowBlur.value || 0;\n      context.shadowOffsetX = shadowOffsetX && shadowOffsetX.value || 0;\n      context.shadowOffsetY = shadowOffsetY && shadowOffsetY.value || 0;\n    }\n  };\n\n  CanvasRendererPlugin.prototype.useAnchor = function (context, object, callback) {\n    var contentBounds = object.getGeometryBounds();\n\n    if (contentBounds) {\n      var halfExtents = contentBounds.halfExtents; // apply anchor, use true size, not include stroke,\n      // eg. bounds = true size + half lineWidth\n\n      var anchor = (object.parsedStyle || {}).anchor;\n      context.translate(-(anchor && anchor[0].value || 0) * halfExtents[0] * 2, -(anchor && anchor[1].value || 0) * halfExtents[1] * 2);\n      callback();\n    } else {\n      callback();\n    }\n  };\n\n  CanvasRendererPlugin.prototype.safeMergeAABB = function () {\n    var aabbs = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      aabbs[_i] = arguments[_i];\n    }\n\n    var merged = new AABB();\n    aabbs.forEach(function (aabb) {\n      merged.add(aabb);\n    });\n    return merged;\n  };\n\n  var CanvasRendererPlugin_1;\n  CanvasRendererPlugin.tag = 'CanvasRendererPlugin';\n\n  __decorate([inject(CanvasConfig), __metadata(\"design:type\", Object)], CanvasRendererPlugin.prototype, \"canvasConfig\", void 0);\n\n  __decorate([inject(DefaultCamera), __metadata(\"design:type\", Camera)], CanvasRendererPlugin.prototype, \"camera\", void 0);\n\n  __decorate([inject(ContextService), __metadata(\"design:type\", Object)], CanvasRendererPlugin.prototype, \"contextService\", void 0);\n\n  __decorate([inject(RenderingContext), __metadata(\"design:type\", Object)], CanvasRendererPlugin.prototype, \"renderingContext\", void 0);\n\n  __decorate([inject(ImagePool), __metadata(\"design:type\", ImagePool)], CanvasRendererPlugin.prototype, \"imagePool\", void 0);\n\n  __decorate([inject(GradientPool), __metadata(\"design:type\", GradientPool)], CanvasRendererPlugin.prototype, \"gradientPool\", void 0);\n\n  __decorate([inject(PathGeneratorFactory), __metadata(\"design:type\", Function)], CanvasRendererPlugin.prototype, \"pathGeneratorFactory\", void 0);\n\n  __decorate([inject(StyleRendererFactory), __metadata(\"design:type\", Function)], CanvasRendererPlugin.prototype, \"styleRendererFactory\", void 0);\n\n  __decorate([inject(DisplayObjectPool), __metadata(\"design:type\", DisplayObjectPool)], CanvasRendererPlugin.prototype, \"displayObjectPool\", void 0);\n\n  __decorate([inject(RBushRoot), __metadata(\"design:type\", RBush)], CanvasRendererPlugin.prototype, \"rBush\", void 0);\n\n  CanvasRendererPlugin = CanvasRendererPlugin_1 = __decorate([singleton({\n    contrib: RenderingPluginContribution\n  })], CanvasRendererPlugin);\n  return CanvasRendererPlugin;\n}();\n\nexport { CanvasRendererPlugin };"]},"metadata":{},"sourceType":"module"}