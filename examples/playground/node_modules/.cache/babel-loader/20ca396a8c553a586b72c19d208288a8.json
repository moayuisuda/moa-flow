{"ast":null,"code":"import arrayAggregator from './_arrayAggregator.js';\nimport baseAggregator from './_baseAggregator.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nexport default createAggregator;","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/lodash-es/_createAggregator.js"],"names":["arrayAggregator","baseAggregator","baseIteratee","isArray","createAggregator","setter","initializer","collection","iteratee","func","accumulator"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,uBAA5B;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,OAAP,MAAoB,cAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,gBAAT,CAA0BC,MAA1B,EAAkCC,WAAlC,EAA+C;AAC7C,SAAO,UAASC,UAAT,EAAqBC,QAArB,EAA+B;AACpC,QAAIC,IAAI,GAAGN,OAAO,CAACI,UAAD,CAAP,GAAsBP,eAAtB,GAAwCC,cAAnD;AAAA,QACIS,WAAW,GAAGJ,WAAW,GAAGA,WAAW,EAAd,GAAmB,EADhD;AAGA,WAAOG,IAAI,CAACF,UAAD,EAAaF,MAAb,EAAqBH,YAAY,CAACM,QAAD,EAAW,CAAX,CAAjC,EAAgDE,WAAhD,CAAX;AACD,GALD;AAMD;;AAED,eAAeN,gBAAf","sourcesContent":["import arrayAggregator from './_arrayAggregator.js';\nimport baseAggregator from './_baseAggregator.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nexport default createAggregator;\n"]},"metadata":{},"sourceType":"module"}