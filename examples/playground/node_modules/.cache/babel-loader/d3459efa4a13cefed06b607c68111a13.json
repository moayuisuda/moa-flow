{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { getDirectionStyle } from '../util';\nimport SliderContext from '../context';\nexport default function Dot(props) {\n  var prefixCls = props.prefixCls,\n      value = props.value,\n      style = props.style,\n      activeStyle = props.activeStyle;\n\n  var _React$useContext = React.useContext(SliderContext),\n      min = _React$useContext.min,\n      max = _React$useContext.max,\n      direction = _React$useContext.direction,\n      included = _React$useContext.included,\n      includedStart = _React$useContext.includedStart,\n      includedEnd = _React$useContext.includedEnd;\n\n  var dotClassName = \"\".concat(prefixCls, \"-dot\");\n  var active = included && includedStart <= value && value <= includedEnd; // ============================ Offset ============================\n\n  var mergedStyle = _objectSpread(_objectSpread({}, getDirectionStyle(direction, value, min, max)), style);\n\n  if (active) {\n    mergedStyle = _objectSpread(_objectSpread({}, mergedStyle), activeStyle);\n  }\n\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames(dotClassName, _defineProperty({}, \"\".concat(dotClassName, \"-active\"), active)),\n    style: mergedStyle\n  });\n}","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/rc-slider/es/Steps/Dot.js"],"names":["_defineProperty","_objectSpread","React","classNames","getDirectionStyle","SliderContext","Dot","props","prefixCls","value","style","activeStyle","_React$useContext","useContext","min","max","direction","included","includedStart","includedEnd","dotClassName","concat","active","mergedStyle","createElement","className"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,2CAA5B;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,iBAAT,QAAkC,SAAlC;AACA,OAAOC,aAAP,MAA0B,YAA1B;AACA,eAAe,SAASC,GAAT,CAAaC,KAAb,EAAoB;AACjC,MAAIC,SAAS,GAAGD,KAAK,CAACC,SAAtB;AAAA,MACIC,KAAK,GAAGF,KAAK,CAACE,KADlB;AAAA,MAEIC,KAAK,GAAGH,KAAK,CAACG,KAFlB;AAAA,MAGIC,WAAW,GAAGJ,KAAK,CAACI,WAHxB;;AAKA,MAAIC,iBAAiB,GAAGV,KAAK,CAACW,UAAN,CAAiBR,aAAjB,CAAxB;AAAA,MACIS,GAAG,GAAGF,iBAAiB,CAACE,GAD5B;AAAA,MAEIC,GAAG,GAAGH,iBAAiB,CAACG,GAF5B;AAAA,MAGIC,SAAS,GAAGJ,iBAAiB,CAACI,SAHlC;AAAA,MAIIC,QAAQ,GAAGL,iBAAiB,CAACK,QAJjC;AAAA,MAKIC,aAAa,GAAGN,iBAAiB,CAACM,aALtC;AAAA,MAMIC,WAAW,GAAGP,iBAAiB,CAACO,WANpC;;AAQA,MAAIC,YAAY,GAAG,GAAGC,MAAH,CAAUb,SAAV,EAAqB,MAArB,CAAnB;AACA,MAAIc,MAAM,GAAGL,QAAQ,IAAIC,aAAa,IAAIT,KAA7B,IAAsCA,KAAK,IAAIU,WAA5D,CAfiC,CAewC;;AAEzE,MAAII,WAAW,GAAGtB,aAAa,CAACA,aAAa,CAAC,EAAD,EAAKG,iBAAiB,CAACY,SAAD,EAAYP,KAAZ,EAAmBK,GAAnB,EAAwBC,GAAxB,CAAtB,CAAd,EAAmEL,KAAnE,CAA/B;;AAEA,MAAIY,MAAJ,EAAY;AACVC,IAAAA,WAAW,GAAGtB,aAAa,CAACA,aAAa,CAAC,EAAD,EAAKsB,WAAL,CAAd,EAAiCZ,WAAjC,CAA3B;AACD;;AAED,SAAO,aAAaT,KAAK,CAACsB,aAAN,CAAoB,MAApB,EAA4B;AAC9CC,IAAAA,SAAS,EAAEtB,UAAU,CAACiB,YAAD,EAAepB,eAAe,CAAC,EAAD,EAAK,GAAGqB,MAAH,CAAUD,YAAV,EAAwB,SAAxB,CAAL,EAAyCE,MAAzC,CAA9B,CADyB;AAE9CZ,IAAAA,KAAK,EAAEa;AAFuC,GAA5B,CAApB;AAID","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { getDirectionStyle } from '../util';\nimport SliderContext from '../context';\nexport default function Dot(props) {\n  var prefixCls = props.prefixCls,\n      value = props.value,\n      style = props.style,\n      activeStyle = props.activeStyle;\n\n  var _React$useContext = React.useContext(SliderContext),\n      min = _React$useContext.min,\n      max = _React$useContext.max,\n      direction = _React$useContext.direction,\n      included = _React$useContext.included,\n      includedStart = _React$useContext.includedStart,\n      includedEnd = _React$useContext.includedEnd;\n\n  var dotClassName = \"\".concat(prefixCls, \"-dot\");\n  var active = included && includedStart <= value && value <= includedEnd; // ============================ Offset ============================\n\n  var mergedStyle = _objectSpread(_objectSpread({}, getDirectionStyle(direction, value, min, max)), style);\n\n  if (active) {\n    mergedStyle = _objectSpread(_objectSpread({}, mergedStyle), activeStyle);\n  }\n\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames(dotClassName, _defineProperty({}, \"\".concat(dotClassName, \"-active\"), active)),\n    style: mergedStyle\n  });\n}"]},"metadata":{},"sourceType":"module"}