{"ast":null,"code":"/*! *****************************************************************************\nCopyright (C) Microsoft. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nvar Reflect;\n\n(function (Reflect) {\n  // Metadata Proposal\n  // https://rbuckton.github.io/reflect-metadata/\n  (function (factory) {\n    var root = typeof global === \"object\" ? global : typeof self === \"object\" ? self : typeof this === \"object\" ? this : Function(\"return this;\")();\n    var exporter = makeExporter(Reflect);\n\n    if (typeof root.Reflect === \"undefined\") {\n      root.Reflect = Reflect;\n    } else {\n      exporter = makeExporter(root.Reflect, exporter);\n    }\n\n    factory(exporter);\n\n    function makeExporter(target, previous) {\n      return function (key, value) {\n        if (typeof target[key] !== \"function\") {\n          Object.defineProperty(target, key, {\n            configurable: true,\n            writable: true,\n            value: value\n          });\n        }\n\n        if (previous) previous(key, value);\n      };\n    }\n  })(function (exporter) {\n    var hasOwn = Object.prototype.hasOwnProperty; // feature test for Symbol support\n\n    var supportsSymbol = typeof Symbol === \"function\";\n    var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\n    var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\n    var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\n\n    var supportsProto = {\n      __proto__: []\n    } instanceof Array; // feature test for __proto__ support\n\n    var downLevel = !supportsCreate && !supportsProto;\n    var HashMap = {\n      // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\n      create: supportsCreate ? function () {\n        return MakeDictionary(Object.create(null));\n      } : supportsProto ? function () {\n        return MakeDictionary({\n          __proto__: null\n        });\n      } : function () {\n        return MakeDictionary({});\n      },\n      has: downLevel ? function (map, key) {\n        return hasOwn.call(map, key);\n      } : function (map, key) {\n        return key in map;\n      },\n      get: downLevel ? function (map, key) {\n        return hasOwn.call(map, key) ? map[key] : undefined;\n      } : function (map, key) {\n        return map[key];\n      }\n    }; // Load global or shim versions of Map, Set, and WeakMap\n\n    var functionPrototype = Object.getPrototypeOf(Function);\n    var usePolyfill = typeof process === \"object\" && process.env && process.env[\"REFLECT_METADATA_USE_MAP_POLYFILL\"] === \"true\";\n\n    var _Map = !usePolyfill && typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\n\n    var _Set = !usePolyfill && typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\n\n    var _WeakMap = !usePolyfill && typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill(); // [[Metadata]] internal slot\n    // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\n\n\n    var Metadata = new _WeakMap();\n    /**\n     * Applies a set of decorators to a property of a target object.\n     * @param decorators An array of decorators.\n     * @param target The target object.\n     * @param propertyKey (Optional) The property key to decorate.\n     * @param attributes (Optional) The property descriptor for the target key.\n     * @remarks Decorators are applied in reverse order.\n     * @example\n     *\n     *     class Example {\n     *         // property declarations are not part of ES6, though they are valid in TypeScript:\n     *         // static staticProperty;\n     *         // property;\n     *\n     *         constructor(p) { }\n     *         static staticMethod(p) { }\n     *         method(p) { }\n     *     }\n     *\n     *     // constructor\n     *     Example = Reflect.decorate(decoratorsArray, Example);\n     *\n     *     // property (on constructor)\n     *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\n     *\n     *     // property (on prototype)\n     *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\n     *\n     *     // method (on constructor)\n     *     Object.defineProperty(Example, \"staticMethod\",\n     *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\n     *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\n     *\n     *     // method (on prototype)\n     *     Object.defineProperty(Example.prototype, \"method\",\n     *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\n     *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\n     *\n     */\n\n    function decorate(decorators, target, propertyKey, attributes) {\n      if (!IsUndefined(propertyKey)) {\n        if (!IsArray(decorators)) throw new TypeError();\n        if (!IsObject(target)) throw new TypeError();\n        if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes)) throw new TypeError();\n        if (IsNull(attributes)) attributes = undefined;\n        propertyKey = ToPropertyKey(propertyKey);\n        return DecorateProperty(decorators, target, propertyKey, attributes);\n      } else {\n        if (!IsArray(decorators)) throw new TypeError();\n        if (!IsConstructor(target)) throw new TypeError();\n        return DecorateConstructor(decorators, target);\n      }\n    }\n\n    exporter(\"decorate\", decorate); // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\n    // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\n\n    /**\n     * A default metadata decorator factory that can be used on a class, class member, or parameter.\n     * @param metadataKey The key for the metadata entry.\n     * @param metadataValue The value for the metadata entry.\n     * @returns A decorator function.\n     * @remarks\n     * If `metadataKey` is already defined for the target and target key, the\n     * metadataValue for that key will be overwritten.\n     * @example\n     *\n     *     // constructor\n     *     @Reflect.metadata(key, value)\n     *     class Example {\n     *     }\n     *\n     *     // property (on constructor, TypeScript only)\n     *     class Example {\n     *         @Reflect.metadata(key, value)\n     *         static staticProperty;\n     *     }\n     *\n     *     // property (on prototype, TypeScript only)\n     *     class Example {\n     *         @Reflect.metadata(key, value)\n     *         property;\n     *     }\n     *\n     *     // method (on constructor)\n     *     class Example {\n     *         @Reflect.metadata(key, value)\n     *         static staticMethod() { }\n     *     }\n     *\n     *     // method (on prototype)\n     *     class Example {\n     *         @Reflect.metadata(key, value)\n     *         method() { }\n     *     }\n     *\n     */\n\n    function metadata(metadataKey, metadataValue) {\n      function decorator(target, propertyKey) {\n        if (!IsObject(target)) throw new TypeError();\n        if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey)) throw new TypeError();\n        OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n      }\n\n      return decorator;\n    }\n\n    exporter(\"metadata\", metadata);\n    /**\n     * Define a unique metadata entry on the target.\n     * @param metadataKey A key used to store and retrieve metadata.\n     * @param metadataValue A value that contains attached metadata.\n     * @param target The target object on which to define metadata.\n     * @param propertyKey (Optional) The property key for the target.\n     * @example\n     *\n     *     class Example {\n     *         // property declarations are not part of ES6, though they are valid in TypeScript:\n     *         // static staticProperty;\n     *         // property;\n     *\n     *         constructor(p) { }\n     *         static staticMethod(p) { }\n     *         method(p) { }\n     *     }\n     *\n     *     // constructor\n     *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\n     *\n     *     // property (on constructor)\n     *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\n     *\n     *     // property (on prototype)\n     *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\n     *\n     *     // method (on constructor)\n     *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\n     *\n     *     // method (on prototype)\n     *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\n     *\n     *     // decorator factory as metadata-producing annotation.\n     *     function MyAnnotation(options): Decorator {\n     *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n     *     }\n     *\n     */\n\n    function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\n      if (!IsObject(target)) throw new TypeError();\n      if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\n      return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n    }\n\n    exporter(\"defineMetadata\", defineMetadata);\n    /**\n     * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n     * @param metadataKey A key used to store and retrieve metadata.\n     * @param target The target object on which the metadata is defined.\n     * @param propertyKey (Optional) The property key for the target.\n     * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n     * @example\n     *\n     *     class Example {\n     *         // property declarations are not part of ES6, though they are valid in TypeScript:\n     *         // static staticProperty;\n     *         // property;\n     *\n     *         constructor(p) { }\n     *         static staticMethod(p) { }\n     *         method(p) { }\n     *     }\n     *\n     *     // constructor\n     *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\n     *\n     *     // property (on constructor)\n     *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\n     *\n     *     // property (on prototype)\n     *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\n     *\n     *     // method (on constructor)\n     *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\n     *\n     *     // method (on prototype)\n     *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\n     *\n     */\n\n    function hasMetadata(metadataKey, target, propertyKey) {\n      if (!IsObject(target)) throw new TypeError();\n      if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\n      return OrdinaryHasMetadata(metadataKey, target, propertyKey);\n    }\n\n    exporter(\"hasMetadata\", hasMetadata);\n    /**\n     * Gets a value indicating whether the target object has the provided metadata key defined.\n     * @param metadataKey A key used to store and retrieve metadata.\n     * @param target The target object on which the metadata is defined.\n     * @param propertyKey (Optional) The property key for the target.\n     * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n     * @example\n     *\n     *     class Example {\n     *         // property declarations are not part of ES6, though they are valid in TypeScript:\n     *         // static staticProperty;\n     *         // property;\n     *\n     *         constructor(p) { }\n     *         static staticMethod(p) { }\n     *         method(p) { }\n     *     }\n     *\n     *     // constructor\n     *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\n     *\n     *     // property (on constructor)\n     *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n     *\n     *     // property (on prototype)\n     *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n     *\n     *     // method (on constructor)\n     *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n     *\n     *     // method (on prototype)\n     *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n     *\n     */\n\n    function hasOwnMetadata(metadataKey, target, propertyKey) {\n      if (!IsObject(target)) throw new TypeError();\n      if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\n      return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\n    }\n\n    exporter(\"hasOwnMetadata\", hasOwnMetadata);\n    /**\n     * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n     * @param metadataKey A key used to store and retrieve metadata.\n     * @param target The target object on which the metadata is defined.\n     * @param propertyKey (Optional) The property key for the target.\n     * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n     * @example\n     *\n     *     class Example {\n     *         // property declarations are not part of ES6, though they are valid in TypeScript:\n     *         // static staticProperty;\n     *         // property;\n     *\n     *         constructor(p) { }\n     *         static staticMethod(p) { }\n     *         method(p) { }\n     *     }\n     *\n     *     // constructor\n     *     result = Reflect.getMetadata(\"custom:annotation\", Example);\n     *\n     *     // property (on constructor)\n     *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\n     *\n     *     // property (on prototype)\n     *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\n     *\n     *     // method (on constructor)\n     *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\n     *\n     *     // method (on prototype)\n     *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\n     *\n     */\n\n    function getMetadata(metadataKey, target, propertyKey) {\n      if (!IsObject(target)) throw new TypeError();\n      if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\n      return OrdinaryGetMetadata(metadataKey, target, propertyKey);\n    }\n\n    exporter(\"getMetadata\", getMetadata);\n    /**\n     * Gets the metadata value for the provided metadata key on the target object.\n     * @param metadataKey A key used to store and retrieve metadata.\n     * @param target The target object on which the metadata is defined.\n     * @param propertyKey (Optional) The property key for the target.\n     * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n     * @example\n     *\n     *     class Example {\n     *         // property declarations are not part of ES6, though they are valid in TypeScript:\n     *         // static staticProperty;\n     *         // property;\n     *\n     *         constructor(p) { }\n     *         static staticMethod(p) { }\n     *         method(p) { }\n     *     }\n     *\n     *     // constructor\n     *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\n     *\n     *     // property (on constructor)\n     *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n     *\n     *     // property (on prototype)\n     *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n     *\n     *     // method (on constructor)\n     *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n     *\n     *     // method (on prototype)\n     *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n     *\n     */\n\n    function getOwnMetadata(metadataKey, target, propertyKey) {\n      if (!IsObject(target)) throw new TypeError();\n      if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\n      return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\n    }\n\n    exporter(\"getOwnMetadata\", getOwnMetadata);\n    /**\n     * Gets the metadata keys defined on the target object or its prototype chain.\n     * @param target The target object on which the metadata is defined.\n     * @param propertyKey (Optional) The property key for the target.\n     * @returns An array of unique metadata keys.\n     * @example\n     *\n     *     class Example {\n     *         // property declarations are not part of ES6, though they are valid in TypeScript:\n     *         // static staticProperty;\n     *         // property;\n     *\n     *         constructor(p) { }\n     *         static staticMethod(p) { }\n     *         method(p) { }\n     *     }\n     *\n     *     // constructor\n     *     result = Reflect.getMetadataKeys(Example);\n     *\n     *     // property (on constructor)\n     *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\n     *\n     *     // property (on prototype)\n     *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\n     *\n     *     // method (on constructor)\n     *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\n     *\n     *     // method (on prototype)\n     *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\n     *\n     */\n\n    function getMetadataKeys(target, propertyKey) {\n      if (!IsObject(target)) throw new TypeError();\n      if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\n      return OrdinaryMetadataKeys(target, propertyKey);\n    }\n\n    exporter(\"getMetadataKeys\", getMetadataKeys);\n    /**\n     * Gets the unique metadata keys defined on the target object.\n     * @param target The target object on which the metadata is defined.\n     * @param propertyKey (Optional) The property key for the target.\n     * @returns An array of unique metadata keys.\n     * @example\n     *\n     *     class Example {\n     *         // property declarations are not part of ES6, though they are valid in TypeScript:\n     *         // static staticProperty;\n     *         // property;\n     *\n     *         constructor(p) { }\n     *         static staticMethod(p) { }\n     *         method(p) { }\n     *     }\n     *\n     *     // constructor\n     *     result = Reflect.getOwnMetadataKeys(Example);\n     *\n     *     // property (on constructor)\n     *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\n     *\n     *     // property (on prototype)\n     *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\n     *\n     *     // method (on constructor)\n     *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\n     *\n     *     // method (on prototype)\n     *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\n     *\n     */\n\n    function getOwnMetadataKeys(target, propertyKey) {\n      if (!IsObject(target)) throw new TypeError();\n      if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\n      return OrdinaryOwnMetadataKeys(target, propertyKey);\n    }\n\n    exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\n    /**\n     * Deletes the metadata entry from the target object with the provided key.\n     * @param metadataKey A key used to store and retrieve metadata.\n     * @param target The target object on which the metadata is defined.\n     * @param propertyKey (Optional) The property key for the target.\n     * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n     * @example\n     *\n     *     class Example {\n     *         // property declarations are not part of ES6, though they are valid in TypeScript:\n     *         // static staticProperty;\n     *         // property;\n     *\n     *         constructor(p) { }\n     *         static staticMethod(p) { }\n     *         method(p) { }\n     *     }\n     *\n     *     // constructor\n     *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\n     *\n     *     // property (on constructor)\n     *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\n     *\n     *     // property (on prototype)\n     *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\n     *\n     *     // method (on constructor)\n     *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\n     *\n     *     // method (on prototype)\n     *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\n     *\n     */\n\n    function deleteMetadata(metadataKey, target, propertyKey) {\n      if (!IsObject(target)) throw new TypeError();\n      if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\n      var metadataMap = GetOrCreateMetadataMap(target, propertyKey,\n      /*Create*/\n      false);\n      if (IsUndefined(metadataMap)) return false;\n      if (!metadataMap.delete(metadataKey)) return false;\n      if (metadataMap.size > 0) return true;\n      var targetMetadata = Metadata.get(target);\n      targetMetadata.delete(propertyKey);\n      if (targetMetadata.size > 0) return true;\n      Metadata.delete(target);\n      return true;\n    }\n\n    exporter(\"deleteMetadata\", deleteMetadata);\n\n    function DecorateConstructor(decorators, target) {\n      for (var i = decorators.length - 1; i >= 0; --i) {\n        var decorator = decorators[i];\n        var decorated = decorator(target);\n\n        if (!IsUndefined(decorated) && !IsNull(decorated)) {\n          if (!IsConstructor(decorated)) throw new TypeError();\n          target = decorated;\n        }\n      }\n\n      return target;\n    }\n\n    function DecorateProperty(decorators, target, propertyKey, descriptor) {\n      for (var i = decorators.length - 1; i >= 0; --i) {\n        var decorator = decorators[i];\n        var decorated = decorator(target, propertyKey, descriptor);\n\n        if (!IsUndefined(decorated) && !IsNull(decorated)) {\n          if (!IsObject(decorated)) throw new TypeError();\n          descriptor = decorated;\n        }\n      }\n\n      return descriptor;\n    }\n\n    function GetOrCreateMetadataMap(O, P, Create) {\n      var targetMetadata = Metadata.get(O);\n\n      if (IsUndefined(targetMetadata)) {\n        if (!Create) return undefined;\n        targetMetadata = new _Map();\n        Metadata.set(O, targetMetadata);\n      }\n\n      var metadataMap = targetMetadata.get(P);\n\n      if (IsUndefined(metadataMap)) {\n        if (!Create) return undefined;\n        metadataMap = new _Map();\n        targetMetadata.set(P, metadataMap);\n      }\n\n      return metadataMap;\n    } // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\n    // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\n\n\n    function OrdinaryHasMetadata(MetadataKey, O, P) {\n      var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n      if (hasOwn) return true;\n      var parent = OrdinaryGetPrototypeOf(O);\n      if (!IsNull(parent)) return OrdinaryHasMetadata(MetadataKey, parent, P);\n      return false;\n    } // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n    // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n\n\n    function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n      var metadataMap = GetOrCreateMetadataMap(O, P,\n      /*Create*/\n      false);\n      if (IsUndefined(metadataMap)) return false;\n      return ToBoolean(metadataMap.has(MetadataKey));\n    } // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\n    // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\n\n\n    function OrdinaryGetMetadata(MetadataKey, O, P) {\n      var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n      if (hasOwn) return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n      var parent = OrdinaryGetPrototypeOf(O);\n      if (!IsNull(parent)) return OrdinaryGetMetadata(MetadataKey, parent, P);\n      return undefined;\n    } // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n    // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n\n\n    function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n      var metadataMap = GetOrCreateMetadataMap(O, P,\n      /*Create*/\n      false);\n      if (IsUndefined(metadataMap)) return undefined;\n      return metadataMap.get(MetadataKey);\n    } // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n    // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n\n\n    function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n      var metadataMap = GetOrCreateMetadataMap(O, P,\n      /*Create*/\n      true);\n      metadataMap.set(MetadataKey, MetadataValue);\n    } // 3.1.6.1 OrdinaryMetadataKeys(O, P)\n    // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\n\n\n    function OrdinaryMetadataKeys(O, P) {\n      var ownKeys = OrdinaryOwnMetadataKeys(O, P);\n      var parent = OrdinaryGetPrototypeOf(O);\n      if (parent === null) return ownKeys;\n      var parentKeys = OrdinaryMetadataKeys(parent, P);\n      if (parentKeys.length <= 0) return ownKeys;\n      if (ownKeys.length <= 0) return parentKeys;\n      var set = new _Set();\n      var keys = [];\n\n      for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\n        var key = ownKeys_1[_i];\n        var hasKey = set.has(key);\n\n        if (!hasKey) {\n          set.add(key);\n          keys.push(key);\n        }\n      }\n\n      for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\n        var key = parentKeys_1[_a];\n        var hasKey = set.has(key);\n\n        if (!hasKey) {\n          set.add(key);\n          keys.push(key);\n        }\n      }\n\n      return keys;\n    } // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n    // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n\n\n    function OrdinaryOwnMetadataKeys(O, P) {\n      var keys = [];\n      var metadataMap = GetOrCreateMetadataMap(O, P,\n      /*Create*/\n      false);\n      if (IsUndefined(metadataMap)) return keys;\n      var keysObj = metadataMap.keys();\n      var iterator = GetIterator(keysObj);\n      var k = 0;\n\n      while (true) {\n        var next = IteratorStep(iterator);\n\n        if (!next) {\n          keys.length = k;\n          return keys;\n        }\n\n        var nextValue = IteratorValue(next);\n\n        try {\n          keys[k] = nextValue;\n        } catch (e) {\n          try {\n            IteratorClose(iterator);\n          } finally {\n            throw e;\n          }\n        }\n\n        k++;\n      }\n    } // 6 ECMAScript Data Typ0es and Values\n    // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\n\n\n    function Type(x) {\n      if (x === null) return 1\n      /* Null */\n      ;\n\n      switch (typeof x) {\n        case \"undefined\":\n          return 0\n          /* Undefined */\n          ;\n\n        case \"boolean\":\n          return 2\n          /* Boolean */\n          ;\n\n        case \"string\":\n          return 3\n          /* String */\n          ;\n\n        case \"symbol\":\n          return 4\n          /* Symbol */\n          ;\n\n        case \"number\":\n          return 5\n          /* Number */\n          ;\n\n        case \"object\":\n          return x === null ? 1\n          /* Null */\n          : 6\n          /* Object */\n          ;\n\n        default:\n          return 6\n          /* Object */\n          ;\n      }\n    } // 6.1.1 The Undefined Type\n    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\n\n\n    function IsUndefined(x) {\n      return x === undefined;\n    } // 6.1.2 The Null Type\n    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\n\n\n    function IsNull(x) {\n      return x === null;\n    } // 6.1.5 The Symbol Type\n    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\n\n\n    function IsSymbol(x) {\n      return typeof x === \"symbol\";\n    } // 6.1.7 The Object Type\n    // https://tc39.github.io/ecma262/#sec-object-type\n\n\n    function IsObject(x) {\n      return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n    } // 7.1 Type Conversion\n    // https://tc39.github.io/ecma262/#sec-type-conversion\n    // 7.1.1 ToPrimitive(input [, PreferredType])\n    // https://tc39.github.io/ecma262/#sec-toprimitive\n\n\n    function ToPrimitive(input, PreferredType) {\n      switch (Type(input)) {\n        case 0\n        /* Undefined */\n        :\n          return input;\n\n        case 1\n        /* Null */\n        :\n          return input;\n\n        case 2\n        /* Boolean */\n        :\n          return input;\n\n        case 3\n        /* String */\n        :\n          return input;\n\n        case 4\n        /* Symbol */\n        :\n          return input;\n\n        case 5\n        /* Number */\n        :\n          return input;\n      }\n\n      var hint = PreferredType === 3\n      /* String */\n      ? \"string\" : PreferredType === 5\n      /* Number */\n      ? \"number\" : \"default\";\n      var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\n\n      if (exoticToPrim !== undefined) {\n        var result = exoticToPrim.call(input, hint);\n        if (IsObject(result)) throw new TypeError();\n        return result;\n      }\n\n      return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\n    } // 7.1.1.1 OrdinaryToPrimitive(O, hint)\n    // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\n\n\n    function OrdinaryToPrimitive(O, hint) {\n      if (hint === \"string\") {\n        var toString_1 = O.toString;\n\n        if (IsCallable(toString_1)) {\n          var result = toString_1.call(O);\n          if (!IsObject(result)) return result;\n        }\n\n        var valueOf = O.valueOf;\n\n        if (IsCallable(valueOf)) {\n          var result = valueOf.call(O);\n          if (!IsObject(result)) return result;\n        }\n      } else {\n        var valueOf = O.valueOf;\n\n        if (IsCallable(valueOf)) {\n          var result = valueOf.call(O);\n          if (!IsObject(result)) return result;\n        }\n\n        var toString_2 = O.toString;\n\n        if (IsCallable(toString_2)) {\n          var result = toString_2.call(O);\n          if (!IsObject(result)) return result;\n        }\n      }\n\n      throw new TypeError();\n    } // 7.1.2 ToBoolean(argument)\n    // https://tc39.github.io/ecma262/2016/#sec-toboolean\n\n\n    function ToBoolean(argument) {\n      return !!argument;\n    } // 7.1.12 ToString(argument)\n    // https://tc39.github.io/ecma262/#sec-tostring\n\n\n    function ToString(argument) {\n      return \"\" + argument;\n    } // 7.1.14 ToPropertyKey(argument)\n    // https://tc39.github.io/ecma262/#sec-topropertykey\n\n\n    function ToPropertyKey(argument) {\n      var key = ToPrimitive(argument, 3\n      /* String */\n      );\n      if (IsSymbol(key)) return key;\n      return ToString(key);\n    } // 7.2 Testing and Comparison Operations\n    // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\n    // 7.2.2 IsArray(argument)\n    // https://tc39.github.io/ecma262/#sec-isarray\n\n\n    function IsArray(argument) {\n      return Array.isArray ? Array.isArray(argument) : argument instanceof Object ? argument instanceof Array : Object.prototype.toString.call(argument) === \"[object Array]\";\n    } // 7.2.3 IsCallable(argument)\n    // https://tc39.github.io/ecma262/#sec-iscallable\n\n\n    function IsCallable(argument) {\n      // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\n      return typeof argument === \"function\";\n    } // 7.2.4 IsConstructor(argument)\n    // https://tc39.github.io/ecma262/#sec-isconstructor\n\n\n    function IsConstructor(argument) {\n      // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\n      return typeof argument === \"function\";\n    } // 7.2.7 IsPropertyKey(argument)\n    // https://tc39.github.io/ecma262/#sec-ispropertykey\n\n\n    function IsPropertyKey(argument) {\n      switch (Type(argument)) {\n        case 3\n        /* String */\n        :\n          return true;\n\n        case 4\n        /* Symbol */\n        :\n          return true;\n\n        default:\n          return false;\n      }\n    } // 7.3 Operations on Objects\n    // https://tc39.github.io/ecma262/#sec-operations-on-objects\n    // 7.3.9 GetMethod(V, P)\n    // https://tc39.github.io/ecma262/#sec-getmethod\n\n\n    function GetMethod(V, P) {\n      var func = V[P];\n      if (func === undefined || func === null) return undefined;\n      if (!IsCallable(func)) throw new TypeError();\n      return func;\n    } // 7.4 Operations on Iterator Objects\n    // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\n\n\n    function GetIterator(obj) {\n      var method = GetMethod(obj, iteratorSymbol);\n      if (!IsCallable(method)) throw new TypeError(); // from Call\n\n      var iterator = method.call(obj);\n      if (!IsObject(iterator)) throw new TypeError();\n      return iterator;\n    } // 7.4.4 IteratorValue(iterResult)\n    // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\n\n\n    function IteratorValue(iterResult) {\n      return iterResult.value;\n    } // 7.4.5 IteratorStep(iterator)\n    // https://tc39.github.io/ecma262/#sec-iteratorstep\n\n\n    function IteratorStep(iterator) {\n      var result = iterator.next();\n      return result.done ? false : result;\n    } // 7.4.6 IteratorClose(iterator, completion)\n    // https://tc39.github.io/ecma262/#sec-iteratorclose\n\n\n    function IteratorClose(iterator) {\n      var f = iterator[\"return\"];\n      if (f) f.call(iterator);\n    } // 9.1 Ordinary Object Internal Methods and Internal Slots\n    // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\n    // 9.1.1.1 OrdinaryGetPrototypeOf(O)\n    // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\n\n\n    function OrdinaryGetPrototypeOf(O) {\n      var proto = Object.getPrototypeOf(O);\n      if (typeof O !== \"function\" || O === functionPrototype) return proto; // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n      // Try to determine the superclass constructor. Compatible implementations\n      // must either set __proto__ on a subclass constructor to the superclass constructor,\n      // or ensure each class has a valid `constructor` property on its prototype that\n      // points back to the constructor.\n      // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n      // This is the case when in ES6 or when using __proto__ in a compatible browser.\n\n      if (proto !== functionPrototype) return proto; // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n\n      var prototype = O.prototype;\n      var prototypeProto = prototype && Object.getPrototypeOf(prototype);\n      if (prototypeProto == null || prototypeProto === Object.prototype) return proto; // If the constructor was not a function, then we cannot determine the heritage.\n\n      var constructor = prototypeProto.constructor;\n      if (typeof constructor !== \"function\") return proto; // If we have some kind of self-reference, then we cannot determine the heritage.\n\n      if (constructor === O) return proto; // we have a pretty good guess at the heritage.\n\n      return constructor;\n    } // naive Map shim\n\n\n    function CreateMapPolyfill() {\n      var cacheSentinel = {};\n      var arraySentinel = [];\n\n      var MapIterator =\n      /** @class */\n      function () {\n        function MapIterator(keys, values, selector) {\n          this._index = 0;\n          this._keys = keys;\n          this._values = values;\n          this._selector = selector;\n        }\n\n        MapIterator.prototype[\"@@iterator\"] = function () {\n          return this;\n        };\n\n        MapIterator.prototype[iteratorSymbol] = function () {\n          return this;\n        };\n\n        MapIterator.prototype.next = function () {\n          var index = this._index;\n\n          if (index >= 0 && index < this._keys.length) {\n            var result = this._selector(this._keys[index], this._values[index]);\n\n            if (index + 1 >= this._keys.length) {\n              this._index = -1;\n              this._keys = arraySentinel;\n              this._values = arraySentinel;\n            } else {\n              this._index++;\n            }\n\n            return {\n              value: result,\n              done: false\n            };\n          }\n\n          return {\n            value: undefined,\n            done: true\n          };\n        };\n\n        MapIterator.prototype.throw = function (error) {\n          if (this._index >= 0) {\n            this._index = -1;\n            this._keys = arraySentinel;\n            this._values = arraySentinel;\n          }\n\n          throw error;\n        };\n\n        MapIterator.prototype.return = function (value) {\n          if (this._index >= 0) {\n            this._index = -1;\n            this._keys = arraySentinel;\n            this._values = arraySentinel;\n          }\n\n          return {\n            value: value,\n            done: true\n          };\n        };\n\n        return MapIterator;\n      }();\n\n      return (\n        /** @class */\n        function () {\n          function Map() {\n            this._keys = [];\n            this._values = [];\n            this._cacheKey = cacheSentinel;\n            this._cacheIndex = -2;\n          }\n\n          Object.defineProperty(Map.prototype, \"size\", {\n            get: function () {\n              return this._keys.length;\n            },\n            enumerable: true,\n            configurable: true\n          });\n\n          Map.prototype.has = function (key) {\n            return this._find(key,\n            /*insert*/\n            false) >= 0;\n          };\n\n          Map.prototype.get = function (key) {\n            var index = this._find(key,\n            /*insert*/\n            false);\n\n            return index >= 0 ? this._values[index] : undefined;\n          };\n\n          Map.prototype.set = function (key, value) {\n            var index = this._find(key,\n            /*insert*/\n            true);\n\n            this._values[index] = value;\n            return this;\n          };\n\n          Map.prototype.delete = function (key) {\n            var index = this._find(key,\n            /*insert*/\n            false);\n\n            if (index >= 0) {\n              var size = this._keys.length;\n\n              for (var i = index + 1; i < size; i++) {\n                this._keys[i - 1] = this._keys[i];\n                this._values[i - 1] = this._values[i];\n              }\n\n              this._keys.length--;\n              this._values.length--;\n\n              if (key === this._cacheKey) {\n                this._cacheKey = cacheSentinel;\n                this._cacheIndex = -2;\n              }\n\n              return true;\n            }\n\n            return false;\n          };\n\n          Map.prototype.clear = function () {\n            this._keys.length = 0;\n            this._values.length = 0;\n            this._cacheKey = cacheSentinel;\n            this._cacheIndex = -2;\n          };\n\n          Map.prototype.keys = function () {\n            return new MapIterator(this._keys, this._values, getKey);\n          };\n\n          Map.prototype.values = function () {\n            return new MapIterator(this._keys, this._values, getValue);\n          };\n\n          Map.prototype.entries = function () {\n            return new MapIterator(this._keys, this._values, getEntry);\n          };\n\n          Map.prototype[\"@@iterator\"] = function () {\n            return this.entries();\n          };\n\n          Map.prototype[iteratorSymbol] = function () {\n            return this.entries();\n          };\n\n          Map.prototype._find = function (key, insert) {\n            if (this._cacheKey !== key) {\n              this._cacheIndex = this._keys.indexOf(this._cacheKey = key);\n            }\n\n            if (this._cacheIndex < 0 && insert) {\n              this._cacheIndex = this._keys.length;\n\n              this._keys.push(key);\n\n              this._values.push(undefined);\n            }\n\n            return this._cacheIndex;\n          };\n\n          return Map;\n        }()\n      );\n\n      function getKey(key, _) {\n        return key;\n      }\n\n      function getValue(_, value) {\n        return value;\n      }\n\n      function getEntry(key, value) {\n        return [key, value];\n      }\n    } // naive Set shim\n\n\n    function CreateSetPolyfill() {\n      return (\n        /** @class */\n        function () {\n          function Set() {\n            this._map = new _Map();\n          }\n\n          Object.defineProperty(Set.prototype, \"size\", {\n            get: function () {\n              return this._map.size;\n            },\n            enumerable: true,\n            configurable: true\n          });\n\n          Set.prototype.has = function (value) {\n            return this._map.has(value);\n          };\n\n          Set.prototype.add = function (value) {\n            return this._map.set(value, value), this;\n          };\n\n          Set.prototype.delete = function (value) {\n            return this._map.delete(value);\n          };\n\n          Set.prototype.clear = function () {\n            this._map.clear();\n          };\n\n          Set.prototype.keys = function () {\n            return this._map.keys();\n          };\n\n          Set.prototype.values = function () {\n            return this._map.values();\n          };\n\n          Set.prototype.entries = function () {\n            return this._map.entries();\n          };\n\n          Set.prototype[\"@@iterator\"] = function () {\n            return this.keys();\n          };\n\n          Set.prototype[iteratorSymbol] = function () {\n            return this.keys();\n          };\n\n          return Set;\n        }()\n      );\n    } // naive WeakMap shim\n\n\n    function CreateWeakMapPolyfill() {\n      var UUID_SIZE = 16;\n      var keys = HashMap.create();\n      var rootKey = CreateUniqueKey();\n      return (\n        /** @class */\n        function () {\n          function WeakMap() {\n            this._key = CreateUniqueKey();\n          }\n\n          WeakMap.prototype.has = function (target) {\n            var table = GetOrCreateWeakMapTable(target,\n            /*create*/\n            false);\n            return table !== undefined ? HashMap.has(table, this._key) : false;\n          };\n\n          WeakMap.prototype.get = function (target) {\n            var table = GetOrCreateWeakMapTable(target,\n            /*create*/\n            false);\n            return table !== undefined ? HashMap.get(table, this._key) : undefined;\n          };\n\n          WeakMap.prototype.set = function (target, value) {\n            var table = GetOrCreateWeakMapTable(target,\n            /*create*/\n            true);\n            table[this._key] = value;\n            return this;\n          };\n\n          WeakMap.prototype.delete = function (target) {\n            var table = GetOrCreateWeakMapTable(target,\n            /*create*/\n            false);\n            return table !== undefined ? delete table[this._key] : false;\n          };\n\n          WeakMap.prototype.clear = function () {\n            // NOTE: not a real clear, just makes the previous data unreachable\n            this._key = CreateUniqueKey();\n          };\n\n          return WeakMap;\n        }()\n      );\n\n      function CreateUniqueKey() {\n        var key;\n\n        do key = \"@@WeakMap@@\" + CreateUUID(); while (HashMap.has(keys, key));\n\n        keys[key] = true;\n        return key;\n      }\n\n      function GetOrCreateWeakMapTable(target, create) {\n        if (!hasOwn.call(target, rootKey)) {\n          if (!create) return undefined;\n          Object.defineProperty(target, rootKey, {\n            value: HashMap.create()\n          });\n        }\n\n        return target[rootKey];\n      }\n\n      function FillRandomBytes(buffer, size) {\n        for (var i = 0; i < size; ++i) buffer[i] = Math.random() * 0xff | 0;\n\n        return buffer;\n      }\n\n      function GenRandomBytes(size) {\n        if (typeof Uint8Array === \"function\") {\n          if (typeof crypto !== \"undefined\") return crypto.getRandomValues(new Uint8Array(size));\n          if (typeof msCrypto !== \"undefined\") return msCrypto.getRandomValues(new Uint8Array(size));\n          return FillRandomBytes(new Uint8Array(size), size);\n        }\n\n        return FillRandomBytes(new Array(size), size);\n      }\n\n      function CreateUUID() {\n        var data = GenRandomBytes(UUID_SIZE); // mark as random - RFC 4122 § 4.4\n\n        data[6] = data[6] & 0x4f | 0x40;\n        data[8] = data[8] & 0xbf | 0x80;\n        var result = \"\";\n\n        for (var offset = 0; offset < UUID_SIZE; ++offset) {\n          var byte = data[offset];\n          if (offset === 4 || offset === 6 || offset === 8) result += \"-\";\n          if (byte < 16) result += \"0\";\n          result += byte.toString(16).toLowerCase();\n        }\n\n        return result;\n      }\n    } // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\n\n\n    function MakeDictionary(obj) {\n      obj.__ = undefined;\n      delete obj.__;\n      return obj;\n    }\n  });\n})(Reflect || (Reflect = {}));","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/reflect-metadata/Reflect.js"],"names":["Reflect","factory","root","global","self","Function","exporter","makeExporter","target","previous","key","value","Object","defineProperty","configurable","writable","hasOwn","prototype","hasOwnProperty","supportsSymbol","Symbol","toPrimitiveSymbol","toPrimitive","iteratorSymbol","iterator","supportsCreate","create","supportsProto","__proto__","Array","downLevel","HashMap","MakeDictionary","has","map","call","get","undefined","functionPrototype","getPrototypeOf","usePolyfill","process","env","_Map","Map","entries","CreateMapPolyfill","_Set","Set","CreateSetPolyfill","_WeakMap","WeakMap","CreateWeakMapPolyfill","Metadata","decorate","decorators","propertyKey","attributes","IsUndefined","IsArray","TypeError","IsObject","IsNull","ToPropertyKey","DecorateProperty","IsConstructor","DecorateConstructor","metadata","metadataKey","metadataValue","decorator","IsPropertyKey","OrdinaryDefineOwnMetadata","defineMetadata","hasMetadata","OrdinaryHasMetadata","hasOwnMetadata","OrdinaryHasOwnMetadata","getMetadata","OrdinaryGetMetadata","getOwnMetadata","OrdinaryGetOwnMetadata","getMetadataKeys","OrdinaryMetadataKeys","getOwnMetadataKeys","OrdinaryOwnMetadataKeys","deleteMetadata","metadataMap","GetOrCreateMetadataMap","delete","size","targetMetadata","i","length","decorated","descriptor","O","P","Create","set","MetadataKey","parent","OrdinaryGetPrototypeOf","ToBoolean","MetadataValue","ownKeys","parentKeys","keys","_i","ownKeys_1","hasKey","add","push","_a","parentKeys_1","keysObj","GetIterator","k","next","IteratorStep","nextValue","IteratorValue","e","IteratorClose","Type","x","IsSymbol","ToPrimitive","input","PreferredType","hint","exoticToPrim","GetMethod","result","OrdinaryToPrimitive","toString_1","toString","IsCallable","valueOf","toString_2","argument","ToString","isArray","V","func","obj","method","iterResult","done","f","proto","prototypeProto","constructor","cacheSentinel","arraySentinel","MapIterator","values","selector","_index","_keys","_values","_selector","index","throw","error","return","_cacheKey","_cacheIndex","enumerable","_find","clear","getKey","getValue","getEntry","insert","indexOf","_","_map","UUID_SIZE","rootKey","CreateUniqueKey","_key","table","GetOrCreateWeakMapTable","CreateUUID","FillRandomBytes","buffer","Math","random","GenRandomBytes","Uint8Array","crypto","getRandomValues","msCrypto","data","offset","byte","toLowerCase","__"],"mappings":"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IAAAA,QAAQ,CAAC,gBAAD,EAAmBsE,cAAnB,CAAR;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACQ,aAASE,WAAT,CAAqBV,WAArB,EAAkC5D,MAAlC,EAA0CgD,WAA1C,EAAuD;AACnD,UAAI,CAACK,QAAQ,CAACrD,MAAD,CAAb,EACI,MAAM,IAAIoD,SAAJ,EAAN;AACJ,UAAI,CAACF,WAAW,CAACF,WAAD,CAAhB,EACIA,WAAW,GAAGO,aAAa,CAACP,WAAD,CAA3B;AACJ,aAAOuB,mBAAmB,CAACX,WAAD,EAAc5D,MAAd,EAAsBgD,WAAtB,CAA1B;AACH;;AACDlD,IAAAA,QAAQ,CAAC,aAAD,EAAgBwE,WAAhB,CAAR;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACQ,aAASE,cAAT,CAAwBZ,WAAxB,EAAqC5D,MAArC,EAA6CgD,WAA7C,EAA0D;AACtD,UAAI,CAACK,QAAQ,CAACrD,MAAD,CAAb,EACI,MAAM,IAAIoD,SAAJ,EAAN;AACJ,UAAI,CAACF,WAAW,CAACF,WAAD,CAAhB,EACIA,WAAW,GAAGO,aAAa,CAACP,WAAD,CAA3B;AACJ,aAAOyB,sBAAsB,CAACb,WAAD,EAAc5D,MAAd,EAAsBgD,WAAtB,CAA7B;AACH;;AACDlD,IAAAA,QAAQ,CAAC,gBAAD,EAAmB0E,cAAnB,CAAR;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACQ,aAA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","sourcesContent":["/*! *****************************************************************************\nCopyright (C) Microsoft. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nvar Reflect;\n(function (Reflect) {\n    // Metadata Proposal\n    // https://rbuckton.github.io/reflect-metadata/\n    (function (factory) {\n        var root = typeof global === \"object\" ? global :\n            typeof self === \"object\" ? self :\n                typeof this === \"object\" ? this :\n                    Function(\"return this;\")();\n        var exporter = makeExporter(Reflect);\n        if (typeof root.Reflect === \"undefined\") {\n            root.Reflect = Reflect;\n        }\n        else {\n            exporter = makeExporter(root.Reflect, exporter);\n        }\n        factory(exporter);\n        function makeExporter(target, previous) {\n            return function (key, value) {\n                if (typeof target[key] !== \"function\") {\n                    Object.defineProperty(target, key, { configurable: true, writable: true, value: value });\n                }\n                if (previous)\n                    previous(key, value);\n            };\n        }\n    })(function (exporter) {\n        var hasOwn = Object.prototype.hasOwnProperty;\n        // feature test for Symbol support\n        var supportsSymbol = typeof Symbol === \"function\";\n        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\n        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\n        var downLevel = !supportsCreate && !supportsProto;\n        var HashMap = {\n            // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\n            create: supportsCreate\n                ? function () { return MakeDictionary(Object.create(null)); }\n                : supportsProto\n                    ? function () { return MakeDictionary({ __proto__: null }); }\n                    : function () { return MakeDictionary({}); },\n            has: downLevel\n                ? function (map, key) { return hasOwn.call(map, key); }\n                : function (map, key) { return key in map; },\n            get: downLevel\n                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\n                : function (map, key) { return map[key]; },\n        };\n        // Load global or shim versions of Map, Set, and WeakMap\n        var functionPrototype = Object.getPrototypeOf(Function);\n        var usePolyfill = typeof process === \"object\" && process.env && process.env[\"REFLECT_METADATA_USE_MAP_POLYFILL\"] === \"true\";\n        var _Map = !usePolyfill && typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\n        var _Set = !usePolyfill && typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\n        var _WeakMap = !usePolyfill && typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\n        // [[Metadata]] internal slot\n        // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\n        var Metadata = new _WeakMap();\n        /**\n         * Applies a set of decorators to a property of a target object.\n         * @param decorators An array of decorators.\n         * @param target The target object.\n         * @param propertyKey (Optional) The property key to decorate.\n         * @param attributes (Optional) The property descriptor for the target key.\n         * @remarks Decorators are applied in reverse order.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Example = Reflect.decorate(decoratorsArray, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Object.defineProperty(Example, \"staticMethod\",\n         *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\n         *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\n         *\n         *     // method (on prototype)\n         *     Object.defineProperty(Example.prototype, \"method\",\n         *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\n         *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\n         *\n         */\n        function decorate(decorators, target, propertyKey, attributes) {\n            if (!IsUndefined(propertyKey)) {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\n                    throw new TypeError();\n                if (IsNull(attributes))\n                    attributes = undefined;\n                propertyKey = ToPropertyKey(propertyKey);\n                return DecorateProperty(decorators, target, propertyKey, attributes);\n            }\n            else {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsConstructor(target))\n                    throw new TypeError();\n                return DecorateConstructor(decorators, target);\n            }\n        }\n        exporter(\"decorate\", decorate);\n        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\n        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\n        /**\n         * A default metadata decorator factory that can be used on a class, class member, or parameter.\n         * @param metadataKey The key for the metadata entry.\n         * @param metadataValue The value for the metadata entry.\n         * @returns A decorator function.\n         * @remarks\n         * If `metadataKey` is already defined for the target and target key, the\n         * metadataValue for that key will be overwritten.\n         * @example\n         *\n         *     // constructor\n         *     @Reflect.metadata(key, value)\n         *     class Example {\n         *     }\n         *\n         *     // property (on constructor, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticProperty;\n         *     }\n         *\n         *     // property (on prototype, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         property;\n         *     }\n         *\n         *     // method (on constructor)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticMethod() { }\n         *     }\n         *\n         *     // method (on prototype)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         method() { }\n         *     }\n         *\n         */\n        function metadata(metadataKey, metadataValue) {\n            function decorator(target, propertyKey) {\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\n                    throw new TypeError();\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n            }\n            return decorator;\n        }\n        exporter(\"metadata\", metadata);\n        /**\n         * Define a unique metadata entry on the target.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param metadataValue A value that contains attached metadata.\n         * @param target The target object on which to define metadata.\n         * @param propertyKey (Optional) The property key for the target.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\n         *\n         *     // decorator factory as metadata-producing annotation.\n         *     function MyAnnotation(options): Decorator {\n         *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n         *     }\n         *\n         */\n        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n        }\n        exporter(\"defineMetadata\", defineMetadata);\n        /**\n         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasMetadata\", hasMetadata);\n        /**\n         * Gets a value indicating whether the target object has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasOwnMetadata\", hasOwnMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getMetadata\", getMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getOwnMetadata\", getOwnMetadata);\n        /**\n         * Gets the metadata keys defined on the target object or its prototype chain.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getMetadataKeys\", getMetadataKeys);\n        /**\n         * Gets the unique metadata keys defined on the target object.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryOwnMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\n        /**\n         * Deletes the metadata entry from the target object with the provided key.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function deleteMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            if (!metadataMap.delete(metadataKey))\n                return false;\n            if (metadataMap.size > 0)\n                return true;\n            var targetMetadata = Metadata.get(target);\n            targetMetadata.delete(propertyKey);\n            if (targetMetadata.size > 0)\n                return true;\n            Metadata.delete(target);\n            return true;\n        }\n        exporter(\"deleteMetadata\", deleteMetadata);\n        function DecorateConstructor(decorators, target) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsConstructor(decorated))\n                        throw new TypeError();\n                    target = decorated;\n                }\n            }\n            return target;\n        }\n        function DecorateProperty(decorators, target, propertyKey, descriptor) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target, propertyKey, descriptor);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsObject(decorated))\n                        throw new TypeError();\n                    descriptor = decorated;\n                }\n            }\n            return descriptor;\n        }\n        function GetOrCreateMetadataMap(O, P, Create) {\n            var targetMetadata = Metadata.get(O);\n            if (IsUndefined(targetMetadata)) {\n                if (!Create)\n                    return undefined;\n                targetMetadata = new _Map();\n                Metadata.set(O, targetMetadata);\n            }\n            var metadataMap = targetMetadata.get(P);\n            if (IsUndefined(metadataMap)) {\n                if (!Create)\n                    return undefined;\n                metadataMap = new _Map();\n                targetMetadata.set(P, metadataMap);\n            }\n            return metadataMap;\n        }\n        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\n        function OrdinaryHasMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return true;\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryHasMetadata(MetadataKey, parent, P);\n            return false;\n        }\n        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            return ToBoolean(metadataMap.has(MetadataKey));\n        }\n        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\n        function OrdinaryGetMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryGetMetadata(MetadataKey, parent, P);\n            return undefined;\n        }\n        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return undefined;\n            return metadataMap.get(MetadataKey);\n        }\n        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\n            metadataMap.set(MetadataKey, MetadataValue);\n        }\n        // 3.1.6.1 OrdinaryMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\n        function OrdinaryMetadataKeys(O, P) {\n            var ownKeys = OrdinaryOwnMetadataKeys(O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (parent === null)\n                return ownKeys;\n            var parentKeys = OrdinaryMetadataKeys(parent, P);\n            if (parentKeys.length <= 0)\n                return ownKeys;\n            if (ownKeys.length <= 0)\n                return parentKeys;\n            var set = new _Set();\n            var keys = [];\n            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\n                var key = ownKeys_1[_i];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\n                var key = parentKeys_1[_a];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            return keys;\n        }\n        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n        function OrdinaryOwnMetadataKeys(O, P) {\n            var keys = [];\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return keys;\n            var keysObj = metadataMap.keys();\n            var iterator = GetIterator(keysObj);\n            var k = 0;\n            while (true) {\n                var next = IteratorStep(iterator);\n                if (!next) {\n                    keys.length = k;\n                    return keys;\n                }\n                var nextValue = IteratorValue(next);\n                try {\n                    keys[k] = nextValue;\n                }\n                catch (e) {\n                    try {\n                        IteratorClose(iterator);\n                    }\n                    finally {\n                        throw e;\n                    }\n                }\n                k++;\n            }\n        }\n        // 6 ECMAScript Data Typ0es and Values\n        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\n        function Type(x) {\n            if (x === null)\n                return 1 /* Null */;\n            switch (typeof x) {\n                case \"undefined\": return 0 /* Undefined */;\n                case \"boolean\": return 2 /* Boolean */;\n                case \"string\": return 3 /* String */;\n                case \"symbol\": return 4 /* Symbol */;\n                case \"number\": return 5 /* Number */;\n                case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\n                default: return 6 /* Object */;\n            }\n        }\n        // 6.1.1 The Undefined Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\n        function IsUndefined(x) {\n            return x === undefined;\n        }\n        // 6.1.2 The Null Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\n        function IsNull(x) {\n            return x === null;\n        }\n        // 6.1.5 The Symbol Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\n        function IsSymbol(x) {\n            return typeof x === \"symbol\";\n        }\n        // 6.1.7 The Object Type\n        // https://tc39.github.io/ecma262/#sec-object-type\n        function IsObject(x) {\n            return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n        }\n        // 7.1 Type Conversion\n        // https://tc39.github.io/ecma262/#sec-type-conversion\n        // 7.1.1 ToPrimitive(input [, PreferredType])\n        // https://tc39.github.io/ecma262/#sec-toprimitive\n        function ToPrimitive(input, PreferredType) {\n            switch (Type(input)) {\n                case 0 /* Undefined */: return input;\n                case 1 /* Null */: return input;\n                case 2 /* Boolean */: return input;\n                case 3 /* String */: return input;\n                case 4 /* Symbol */: return input;\n                case 5 /* Number */: return input;\n            }\n            var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\n            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\n            if (exoticToPrim !== undefined) {\n                var result = exoticToPrim.call(input, hint);\n                if (IsObject(result))\n                    throw new TypeError();\n                return result;\n            }\n            return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\n        }\n        // 7.1.1.1 OrdinaryToPrimitive(O, hint)\n        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\n        function OrdinaryToPrimitive(O, hint) {\n            if (hint === \"string\") {\n                var toString_1 = O.toString;\n                if (IsCallable(toString_1)) {\n                    var result = toString_1.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            else {\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var toString_2 = O.toString;\n                if (IsCallable(toString_2)) {\n                    var result = toString_2.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            throw new TypeError();\n        }\n        // 7.1.2 ToBoolean(argument)\n        // https://tc39.github.io/ecma262/2016/#sec-toboolean\n        function ToBoolean(argument) {\n            return !!argument;\n        }\n        // 7.1.12 ToString(argument)\n        // https://tc39.github.io/ecma262/#sec-tostring\n        function ToString(argument) {\n            return \"\" + argument;\n        }\n        // 7.1.14 ToPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-topropertykey\n        function ToPropertyKey(argument) {\n            var key = ToPrimitive(argument, 3 /* String */);\n            if (IsSymbol(key))\n                return key;\n            return ToString(key);\n        }\n        // 7.2 Testing and Comparison Operations\n        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\n        // 7.2.2 IsArray(argument)\n        // https://tc39.github.io/ecma262/#sec-isarray\n        function IsArray(argument) {\n            return Array.isArray\n                ? Array.isArray(argument)\n                : argument instanceof Object\n                    ? argument instanceof Array\n                    : Object.prototype.toString.call(argument) === \"[object Array]\";\n        }\n        // 7.2.3 IsCallable(argument)\n        // https://tc39.github.io/ecma262/#sec-iscallable\n        function IsCallable(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.4 IsConstructor(argument)\n        // https://tc39.github.io/ecma262/#sec-isconstructor\n        function IsConstructor(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.7 IsPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-ispropertykey\n        function IsPropertyKey(argument) {\n            switch (Type(argument)) {\n                case 3 /* String */: return true;\n                case 4 /* Symbol */: return true;\n                default: return false;\n            }\n        }\n        // 7.3 Operations on Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-objects\n        // 7.3.9 GetMethod(V, P)\n        // https://tc39.github.io/ecma262/#sec-getmethod\n        function GetMethod(V, P) {\n            var func = V[P];\n            if (func === undefined || func === null)\n                return undefined;\n            if (!IsCallable(func))\n                throw new TypeError();\n            return func;\n        }\n        // 7.4 Operations on Iterator Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\n        function GetIterator(obj) {\n            var method = GetMethod(obj, iteratorSymbol);\n            if (!IsCallable(method))\n                throw new TypeError(); // from Call\n            var iterator = method.call(obj);\n            if (!IsObject(iterator))\n                throw new TypeError();\n            return iterator;\n        }\n        // 7.4.4 IteratorValue(iterResult)\n        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\n        function IteratorValue(iterResult) {\n            return iterResult.value;\n        }\n        // 7.4.5 IteratorStep(iterator)\n        // https://tc39.github.io/ecma262/#sec-iteratorstep\n        function IteratorStep(iterator) {\n            var result = iterator.next();\n            return result.done ? false : result;\n        }\n        // 7.4.6 IteratorClose(iterator, completion)\n        // https://tc39.github.io/ecma262/#sec-iteratorclose\n        function IteratorClose(iterator) {\n            var f = iterator[\"return\"];\n            if (f)\n                f.call(iterator);\n        }\n        // 9.1 Ordinary Object Internal Methods and Internal Slots\n        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\n        // 9.1.1.1 OrdinaryGetPrototypeOf(O)\n        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\n        function OrdinaryGetPrototypeOf(O) {\n            var proto = Object.getPrototypeOf(O);\n            if (typeof O !== \"function\" || O === functionPrototype)\n                return proto;\n            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n            // Try to determine the superclass constructor. Compatible implementations\n            // must either set __proto__ on a subclass constructor to the superclass constructor,\n            // or ensure each class has a valid `constructor` property on its prototype that\n            // points back to the constructor.\n            // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n            // This is the case when in ES6 or when using __proto__ in a compatible browser.\n            if (proto !== functionPrototype)\n                return proto;\n            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n            var prototype = O.prototype;\n            var prototypeProto = prototype && Object.getPrototypeOf(prototype);\n            if (prototypeProto == null || prototypeProto === Object.prototype)\n                return proto;\n            // If the constructor was not a function, then we cannot determine the heritage.\n            var constructor = prototypeProto.constructor;\n            if (typeof constructor !== \"function\")\n                return proto;\n            // If we have some kind of self-reference, then we cannot determine the heritage.\n            if (constructor === O)\n                return proto;\n            // we have a pretty good guess at the heritage.\n            return constructor;\n        }\n        // naive Map shim\n        function CreateMapPolyfill() {\n            var cacheSentinel = {};\n            var arraySentinel = [];\n            var MapIterator = /** @class */ (function () {\n                function MapIterator(keys, values, selector) {\n                    this._index = 0;\n                    this._keys = keys;\n                    this._values = values;\n                    this._selector = selector;\n                }\n                MapIterator.prototype[\"@@iterator\"] = function () { return this; };\n                MapIterator.prototype[iteratorSymbol] = function () { return this; };\n                MapIterator.prototype.next = function () {\n                    var index = this._index;\n                    if (index >= 0 && index < this._keys.length) {\n                        var result = this._selector(this._keys[index], this._values[index]);\n                        if (index + 1 >= this._keys.length) {\n                            this._index = -1;\n                            this._keys = arraySentinel;\n                            this._values = arraySentinel;\n                        }\n                        else {\n                            this._index++;\n                        }\n                        return { value: result, done: false };\n                    }\n                    return { value: undefined, done: true };\n                };\n                MapIterator.prototype.throw = function (error) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    throw error;\n                };\n                MapIterator.prototype.return = function (value) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    return { value: value, done: true };\n                };\n                return MapIterator;\n            }());\n            return /** @class */ (function () {\n                function Map() {\n                    this._keys = [];\n                    this._values = [];\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                }\n                Object.defineProperty(Map.prototype, \"size\", {\n                    get: function () { return this._keys.length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\n                Map.prototype.get = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    return index >= 0 ? this._values[index] : undefined;\n                };\n                Map.prototype.set = function (key, value) {\n                    var index = this._find(key, /*insert*/ true);\n                    this._values[index] = value;\n                    return this;\n                };\n                Map.prototype.delete = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    if (index >= 0) {\n                        var size = this._keys.length;\n                        for (var i = index + 1; i < size; i++) {\n                            this._keys[i - 1] = this._keys[i];\n                            this._values[i - 1] = this._values[i];\n                        }\n                        this._keys.length--;\n                        this._values.length--;\n                        if (key === this._cacheKey) {\n                            this._cacheKey = cacheSentinel;\n                            this._cacheIndex = -2;\n                        }\n                        return true;\n                    }\n                    return false;\n                };\n                Map.prototype.clear = function () {\n                    this._keys.length = 0;\n                    this._values.length = 0;\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                };\n                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\n                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\n                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\n                Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\n                Map.prototype[iteratorSymbol] = function () { return this.entries(); };\n                Map.prototype._find = function (key, insert) {\n                    if (this._cacheKey !== key) {\n                        this._cacheIndex = this._keys.indexOf(this._cacheKey = key);\n                    }\n                    if (this._cacheIndex < 0 && insert) {\n                        this._cacheIndex = this._keys.length;\n                        this._keys.push(key);\n                        this._values.push(undefined);\n                    }\n                    return this._cacheIndex;\n                };\n                return Map;\n            }());\n            function getKey(key, _) {\n                return key;\n            }\n            function getValue(_, value) {\n                return value;\n            }\n            function getEntry(key, value) {\n                return [key, value];\n            }\n        }\n        // naive Set shim\n        function CreateSetPolyfill() {\n            return /** @class */ (function () {\n                function Set() {\n                    this._map = new _Map();\n                }\n                Object.defineProperty(Set.prototype, \"size\", {\n                    get: function () { return this._map.size; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Set.prototype.has = function (value) { return this._map.has(value); };\n                Set.prototype.add = function (value) { return this._map.set(value, value), this; };\n                Set.prototype.delete = function (value) { return this._map.delete(value); };\n                Set.prototype.clear = function () { this._map.clear(); };\n                Set.prototype.keys = function () { return this._map.keys(); };\n                Set.prototype.values = function () { return this._map.values(); };\n                Set.prototype.entries = function () { return this._map.entries(); };\n                Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\n                Set.prototype[iteratorSymbol] = function () { return this.keys(); };\n                return Set;\n            }());\n        }\n        // naive WeakMap shim\n        function CreateWeakMapPolyfill() {\n            var UUID_SIZE = 16;\n            var keys = HashMap.create();\n            var rootKey = CreateUniqueKey();\n            return /** @class */ (function () {\n                function WeakMap() {\n                    this._key = CreateUniqueKey();\n                }\n                WeakMap.prototype.has = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.has(table, this._key) : false;\n                };\n                WeakMap.prototype.get = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.get(table, this._key) : undefined;\n                };\n                WeakMap.prototype.set = function (target, value) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);\n                    table[this._key] = value;\n                    return this;\n                };\n                WeakMap.prototype.delete = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? delete table[this._key] : false;\n                };\n                WeakMap.prototype.clear = function () {\n                    // NOTE: not a real clear, just makes the previous data unreachable\n                    this._key = CreateUniqueKey();\n                };\n                return WeakMap;\n            }());\n            function CreateUniqueKey() {\n                var key;\n                do\n                    key = \"@@WeakMap@@\" + CreateUUID();\n                while (HashMap.has(keys, key));\n                keys[key] = true;\n                return key;\n            }\n            function GetOrCreateWeakMapTable(target, create) {\n                if (!hasOwn.call(target, rootKey)) {\n                    if (!create)\n                        return undefined;\n                    Object.defineProperty(target, rootKey, { value: HashMap.create() });\n                }\n                return target[rootKey];\n            }\n            function FillRandomBytes(buffer, size) {\n                for (var i = 0; i < size; ++i)\n                    buffer[i] = Math.random() * 0xff | 0;\n                return buffer;\n            }\n            function GenRandomBytes(size) {\n                if (typeof Uint8Array === \"function\") {\n                    if (typeof crypto !== \"undefined\")\n                        return crypto.getRandomValues(new Uint8Array(size));\n                    if (typeof msCrypto !== \"undefined\")\n                        return msCrypto.getRandomValues(new Uint8Array(size));\n                    return FillRandomBytes(new Uint8Array(size), size);\n                }\n                return FillRandomBytes(new Array(size), size);\n            }\n            function CreateUUID() {\n                var data = GenRandomBytes(UUID_SIZE);\n                // mark as random - RFC 4122 § 4.4\n                data[6] = data[6] & 0x4f | 0x40;\n                data[8] = data[8] & 0xbf | 0x80;\n                var result = \"\";\n                for (var offset = 0; offset < UUID_SIZE; ++offset) {\n                    var byte = data[offset];\n                    if (offset === 4 || offset === 6 || offset === 8)\n                        result += \"-\";\n                    if (byte < 16)\n                        result += \"0\";\n                    result += byte.toString(16).toLowerCase();\n                }\n                return result;\n            }\n        }\n        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\n        function MakeDictionary(obj) {\n            obj.__ = undefined;\n            delete obj.__;\n            return obj;\n        }\n    });\n})(Reflect || (Reflect = {}));\n"]},"metadata":{},"sourceType":"script"}