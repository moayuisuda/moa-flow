{"ast":null,"code":"import { UnitType } from '@antv/g';\nimport { inLine, inArc, inBox, inRect } from './utils/math';\nexport function isPointInPath(displayObject, position, isPointInPath) {\n  var _a = displayObject.parsedStyle,\n      radius = _a.radius,\n      fill = _a.fill,\n      stroke = _a.stroke,\n      lineWidth = _a.lineWidth,\n      parsedWidth = _a.width,\n      parsedHeight = _a.height,\n      clipPathTargets = _a.clipPathTargets;\n  var isClipPath = !!(clipPathTargets === null || clipPathTargets === void 0 ? void 0 : clipPathTargets.length);\n  var hasFill = fill && !fill.isNone;\n  var hasStroke = stroke && !stroke.isNone;\n  var widthUnit = parsedWidth.unit,\n      widthValue = parsedWidth.value;\n  var heightUnit = parsedHeight.unit,\n      heightValue = parsedHeight.value;\n  var width = 0;\n  var height = 0;\n\n  if (widthUnit === UnitType.kNumber || widthUnit === UnitType.kPixels) {\n    width = widthValue;\n  }\n\n  if (heightUnit === UnitType.kNumber || heightUnit === UnitType.kPixels) {\n    height = heightValue;\n  } // 无圆角时的策略\n\n\n  if (!radius) {\n    var halfWidth = lineWidth.value / 2; // 同时填充和带有边框\n\n    if (hasFill && hasStroke || isClipPath) {\n      return inBox(0 - halfWidth, 0 - halfWidth, width + halfWidth, height + halfWidth, position.x, position.y);\n    } // 仅填充\n\n\n    if (hasFill) {\n      return inBox(0, 0, width, height, position.x, position.y);\n    }\n\n    if (hasStroke) {\n      return inRect(0, 0, width, height, lineWidth.value, position.x, position.y);\n    }\n  } else {\n    var isHit = false;\n\n    if (hasStroke || isClipPath) {\n      isHit = inRectWithRadius(0, 0, width, height, radius.value, lineWidth.value, position.x, position.y);\n    } // 仅填充时带有圆角的矩形直接通过图形拾取\n    // 以后可以改成纯数学的近似拾取，将圆弧切割成多边形\n\n\n    if (!isHit && (hasFill || isClipPath)) {\n      isHit = isPointInPath(displayObject, position);\n    }\n\n    return isHit;\n  }\n\n  return false;\n}\n\nfunction inRectWithRadius(minX, minY, width, height, radius, lineWidth, x, y) {\n  return inLine(minX + radius, minY, minX + width - radius, minY, lineWidth, x, y) || inLine(minX + width, minY + radius, minX + width, minY + height - radius, lineWidth, x, y) || inLine(minX + width - radius, minY + height, minX + radius, minY + height, lineWidth, x, y) || inLine(minX, minY + height - radius, minX, minY + radius, lineWidth, x, y) || inArc(minX + width - radius, minY + radius, radius, 1.5 * Math.PI, 2 * Math.PI, lineWidth, x, y) || inArc(minX + width - radius, minY + height - radius, radius, 0, 0.5 * Math.PI, lineWidth, x, y) || inArc(minX + radius, minY + height - radius, radius, 0.5 * Math.PI, Math.PI, lineWidth, x, y) || inArc(minX + radius, minY + radius, radius, Math.PI, 1.5 * Math.PI, lineWidth, x, y);\n}","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/@antv/g-plugin-canvas-picker/es/Rect.js"],"names":["UnitType","inLine","inArc","inBox","inRect","isPointInPath","displayObject","position","_a","parsedStyle","radius","fill","stroke","lineWidth","parsedWidth","width","parsedHeight","height","clipPathTargets","isClipPath","length","hasFill","isNone","hasStroke","widthUnit","unit","widthValue","value","heightUnit","heightValue","kNumber","kPixels","halfWidth","x","y","isHit","inRectWithRadius","minX","minY","Math","PI"],"mappings":"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","sourcesContent":["import { UnitType } from '@antv/g';\nimport { inLine, inArc, inBox, inRect } from './utils/math';\nexport function isPointInPath(displayObject, position, isPointInPath) {\n  var _a = displayObject.parsedStyle,\n      radius = _a.radius,\n      fill = _a.fill,\n      stroke = _a.stroke,\n      lineWidth = _a.lineWidth,\n      parsedWidth = _a.width,\n      parsedHeight = _a.height,\n      clipPathTargets = _a.clipPathTargets;\n  var isClipPath = !!(clipPathTargets === null || clipPathTargets === void 0 ? void 0 : clipPathTargets.length);\n  var hasFill = fill && !fill.isNone;\n  var hasStroke = stroke && !stroke.isNone;\n  var widthUnit = parsedWidth.unit,\n      widthValue = parsedWidth.value;\n  var heightUnit = parsedHeight.unit,\n      heightValue = parsedHeight.value;\n  var width = 0;\n  var height = 0;\n\n  if (widthUnit === UnitType.kNumber || widthUnit === UnitType.kPixels) {\n    width = widthValue;\n  }\n\n  if (heightUnit === UnitType.kNumber || heightUnit === UnitType.kPixels) {\n    height = heightValue;\n  } // 无圆角时的策略\n\n\n  if (!radius) {\n    var halfWidth = lineWidth.value / 2; // 同时填充和带有边框\n\n    if (hasFill && hasStroke || isClipPath) {\n      return inBox(0 - halfWidth, 0 - halfWidth, width + halfWidth, height + halfWidth, position.x, position.y);\n    } // 仅填充\n\n\n    if (hasFill) {\n      return inBox(0, 0, width, height, position.x, position.y);\n    }\n\n    if (hasStroke) {\n      return inRect(0, 0, width, height, lineWidth.value, position.x, position.y);\n    }\n  } else {\n    var isHit = false;\n\n    if (hasStroke || isClipPath) {\n      isHit = inRectWithRadius(0, 0, width, height, radius.value, lineWidth.value, position.x, position.y);\n    } // 仅填充时带有圆角的矩形直接通过图形拾取\n    // 以后可以改成纯数学的近似拾取，将圆弧切割成多边形\n\n\n    if (!isHit && (hasFill || isClipPath)) {\n      isHit = isPointInPath(displayObject, position);\n    }\n\n    return isHit;\n  }\n\n  return false;\n}\n\nfunction inRectWithRadius(minX, minY, width, height, radius, lineWidth, x, y) {\n  return inLine(minX + radius, minY, minX + width - radius, minY, lineWidth, x, y) || inLine(minX + width, minY + radius, minX + width, minY + height - radius, lineWidth, x, y) || inLine(minX + width - radius, minY + height, minX + radius, minY + height, lineWidth, x, y) || inLine(minX, minY + height - radius, minX, minY + radius, lineWidth, x, y) || inArc(minX + width - radius, minY + radius, radius, 1.5 * Math.PI, 2 * Math.PI, lineWidth, x, y) || inArc(minX + width - radius, minY + height - radius, radius, 0, 0.5 * Math.PI, lineWidth, x, y) || inArc(minX + radius, minY + height - radius, radius, 0.5 * Math.PI, Math.PI, lineWidth, x, y) || inArc(minX + radius, minY + radius, radius, Math.PI, 1.5 * Math.PI, lineWidth, x, y);\n}"]},"metadata":{},"sourceType":"module"}