{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { CSSTransformComponent } from './CSSTransformComponent'; // import { UnitType } from './types';\n\n/**\n * Represents a translation value in a CSSTransformValue\n * used for properties like \"transform\".\n *\n * @see https://drafts.css-houdini.org/css-typed-om/#csstranslate\n */\n\nvar CSSTranslate =\n/** @class */\nfunction (_super) {\n  __extends(CSSTranslate, _super);\n\n  function CSSTranslate(x, y, z, is2D) {\n    var _this = _super.call(this, is2D) || this;\n\n    _this.x = x;\n    _this.y = y;\n    _this.z = z;\n    return _this;\n  }\n\n  CSSTranslate.prototype.toMatrix = function () {\n    // const x = this.x.to(UnitType.kPixels);\n    // const y = this.y.to(UnitType.kPixels);\n    // const z = this.z.to(UnitType.kPixels);\n    // let matrix: DOMMatrix;\n    // if (this.is2D) {\n    //   matrix = new DOMMatrix([1, 0, 0, 1, 0, 0]);\n    //   matrix.translateSelf(x.value, y.value);\n    // } else {\n    //   matrix = new DOMMatrix();\n    //   matrix.translateSelf(x.value, y.value, z.value);\n    // }\n    // return matrix;\n    return null;\n  };\n\n  return CSSTranslate;\n}(CSSTransformComponent);\n\nexport { CSSTranslate };","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/@antv/g/es/css/cssom/CSSTranslate.js"],"names":["__extends","CSSTransformComponent","CSSTranslate","_super","x","y","z","is2D","_this","call","prototype","toMatrix"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,qBAAT,QAAsC,yBAAtC,C,CAAiE;;AAEjE;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,YAAY;AAChB;AACA,UAAUC,MAAV,EAAkB;AAChBH,EAAAA,SAAS,CAACE,YAAD,EAAeC,MAAf,CAAT;;AAEA,WAASD,YAAT,CAAsBE,CAAtB,EAAyBC,CAAzB,EAA4BC,CAA5B,EAA+BC,IAA/B,EAAqC;AACnC,QAAIC,KAAK,GAAGL,MAAM,CAACM,IAAP,CAAY,IAAZ,EAAkBF,IAAlB,KAA2B,IAAvC;;AAEAC,IAAAA,KAAK,CAACJ,CAAN,GAAUA,CAAV;AACAI,IAAAA,KAAK,CAACH,CAAN,GAAUA,CAAV;AACAG,IAAAA,KAAK,CAACF,CAAN,GAAUA,CAAV;AACA,WAAOE,KAAP;AACD;;AAEDN,EAAAA,YAAY,CAACQ,SAAb,CAAuBC,QAAvB,GAAkC,YAAY;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAO,IAAP;AACD,GAdD;;AAgBA,SAAOT,YAAP;AACD,CA7BD,CA6BED,qBA7BF,CAFA;;AAiCA,SAASC,YAAT","sourcesContent":["import { __extends } from \"tslib\";\nimport { CSSTransformComponent } from './CSSTransformComponent'; // import { UnitType } from './types';\n\n/**\n * Represents a translation value in a CSSTransformValue\n * used for properties like \"transform\".\n *\n * @see https://drafts.css-houdini.org/css-typed-om/#csstranslate\n */\n\nvar CSSTranslate =\n/** @class */\nfunction (_super) {\n  __extends(CSSTranslate, _super);\n\n  function CSSTranslate(x, y, z, is2D) {\n    var _this = _super.call(this, is2D) || this;\n\n    _this.x = x;\n    _this.y = y;\n    _this.z = z;\n    return _this;\n  }\n\n  CSSTranslate.prototype.toMatrix = function () {\n    // const x = this.x.to(UnitType.kPixels);\n    // const y = this.y.to(UnitType.kPixels);\n    // const z = this.z.to(UnitType.kPixels);\n    // let matrix: DOMMatrix;\n    // if (this.is2D) {\n    //   matrix = new DOMMatrix([1, 0, 0, 1, 0, 0]);\n    //   matrix.translateSelf(x.value, y.value);\n    // } else {\n    //   matrix = new DOMMatrix();\n    //   matrix.translateSelf(x.value, y.value, z.value);\n    // }\n    // return matrix;\n    return null;\n  };\n\n  return CSSTranslate;\n}(CSSTransformComponent);\n\nexport { CSSTranslate };"]},"metadata":{},"sourceType":"module"}