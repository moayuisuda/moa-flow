{"ast":null,"code":"function ellipseDistance(squareX, squareY, rx, ry) {\n  return squareX / (rx * rx) + squareY / (ry * ry);\n}\n\nexport function isPointInPath(displayObject, _a) {\n  var x = _a.x,\n      y = _a.y;\n  var _b = displayObject.parsedStyle,\n      rxInPixels = _b.rx,\n      ryInPixels = _b.ry,\n      fill = _b.fill,\n      stroke = _b.stroke,\n      lineWidth = _b.lineWidth,\n      clipPathTargets = _b.clipPathTargets;\n  var isClipPath = !!(clipPathTargets === null || clipPathTargets === void 0 ? void 0 : clipPathTargets.length);\n  var hasFill = fill && !fill.isNone;\n  var hasStroke = stroke && !stroke.isNone;\n  var rx = rxInPixels.value;\n  var ry = ryInPixels.value;\n  var halfLineWith = lineWidth.value / 2;\n  var squareX = (x - rx) * (x - rx);\n  var squareY = (y - ry) * (y - ry); // 使用椭圆的公式： x*x/rx*rx + y*y/ry*ry = 1;\n\n  if (hasFill && hasStroke || isClipPath) {\n    return ellipseDistance(squareX, squareY, rx + halfLineWith, ry + halfLineWith) <= 1;\n  }\n\n  if (hasFill) {\n    return ellipseDistance(squareX, squareY, rx, ry) <= 1;\n  }\n\n  if (hasStroke) {\n    return ellipseDistance(squareX, squareY, rx - halfLineWith, ry - halfLineWith) >= 1 && ellipseDistance(squareX, squareY, rx + halfLineWith, ry + halfLineWith) <= 1;\n  }\n\n  return false;\n}","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/@antv/g-plugin-canvas-picker/es/Ellipse.js"],"names":["ellipseDistance","squareX","squareY","rx","ry","isPointInPath","displayObject","_a","x","y","_b","parsedStyle","rxInPixels","ryInPixels","fill","stroke","lineWidth","clipPathTargets","isClipPath","length","hasFill","isNone","hasStroke","value","halfLineWith"],"mappings":"AAAA,SAASA,eAAT,CAAyBC,OAAzB,EAAkCC,OAAlC,EAA2CC,EAA3C,EAA+CC,EAA/C,EAAmD;AACjD,SAAOH,OAAO,IAAIE,EAAE,GAAGA,EAAT,CAAP,GAAsBD,OAAO,IAAIE,EAAE,GAAGA,EAAT,CAApC;AACD;;AAED,OAAO,SAASC,aAAT,CAAuBC,aAAvB,EAAsCC,EAAtC,EAA0C;AAC/C,MAAIC,CAAC,GAAGD,EAAE,CAACC,CAAX;AAAA,MACIC,CAAC,GAAGF,EAAE,CAACE,CADX;AAEA,MAAIC,EAAE,GAAGJ,aAAa,CAACK,WAAvB;AAAA,MACIC,UAAU,GAAGF,EAAE,CAACP,EADpB;AAAA,MAEIU,UAAU,GAAGH,EAAE,CAACN,EAFpB;AAAA,MAGIU,IAAI,GAAGJ,EAAE,CAACI,IAHd;AAAA,MAIIC,MAAM,GAAGL,EAAE,CAACK,MAJhB;AAAA,MAKIC,SAAS,GAAGN,EAAE,CAACM,SALnB;AAAA,MAMIC,eAAe,GAAGP,EAAE,CAACO,eANzB;AAOA,MAAIC,UAAU,GAAG,CAAC,EAAED,eAAe,KAAK,IAApB,IAA4BA,eAAe,KAAK,KAAK,CAArD,GAAyD,KAAK,CAA9D,GAAkEA,eAAe,CAACE,MAApF,CAAlB;AACA,MAAIC,OAAO,GAAGN,IAAI,IAAI,CAACA,IAAI,CAACO,MAA5B;AACA,MAAIC,SAAS,GAAGP,MAAM,IAAI,CAACA,MAAM,CAACM,MAAlC;AACA,MAAIlB,EAAE,GAAGS,UAAU,CAACW,KAApB;AACA,MAAInB,EAAE,GAAGS,UAAU,CAACU,KAApB;AACA,MAAIC,YAAY,GAAGR,SAAS,CAACO,KAAV,GAAkB,CAArC;AACA,MAAItB,OAAO,GAAG,CAACO,CAAC,GAAGL,EAAL,KAAYK,CAAC,GAAGL,EAAhB,CAAd;AACA,MAAID,OAAO,GAAG,CAACO,CAAC,GAAGL,EAAL,KAAYK,CAAC,GAAGL,EAAhB,CAAd,CAjB+C,CAiBZ;;AAEnC,MAAIgB,OAAO,IAAIE,SAAX,IAAwBJ,UAA5B,EAAwC;AACtC,WAAOlB,eAAe,CAACC,OAAD,EAAUC,OAAV,EAAmBC,EAAE,GAAGqB,YAAxB,EAAsCpB,EAAE,GAAGoB,YAA3C,CAAf,IAA2E,CAAlF;AACD;;AAED,MAAIJ,OAAJ,EAAa;AACX,WAAOpB,eAAe,CAACC,OAAD,EAAUC,OAAV,EAAmBC,EAAnB,EAAuBC,EAAvB,CAAf,IAA6C,CAApD;AACD;;AAED,MAAIkB,SAAJ,EAAe;AACb,WAAOtB,eAAe,CAACC,OAAD,EAAUC,OAAV,EAAmBC,EAAE,GAAGqB,YAAxB,EAAsCpB,EAAE,GAAGoB,YAA3C,CAAf,IAA2E,CAA3E,IAAgFxB,eAAe,CAACC,OAAD,EAAUC,OAAV,EAAmBC,EAAE,GAAGqB,YAAxB,EAAsCpB,EAAE,GAAGoB,YAA3C,CAAf,IAA2E,CAAlK;AACD;;AAED,SAAO,KAAP;AACD","sourcesContent":["function ellipseDistance(squareX, squareY, rx, ry) {\n  return squareX / (rx * rx) + squareY / (ry * ry);\n}\n\nexport function isPointInPath(displayObject, _a) {\n  var x = _a.x,\n      y = _a.y;\n  var _b = displayObject.parsedStyle,\n      rxInPixels = _b.rx,\n      ryInPixels = _b.ry,\n      fill = _b.fill,\n      stroke = _b.stroke,\n      lineWidth = _b.lineWidth,\n      clipPathTargets = _b.clipPathTargets;\n  var isClipPath = !!(clipPathTargets === null || clipPathTargets === void 0 ? void 0 : clipPathTargets.length);\n  var hasFill = fill && !fill.isNone;\n  var hasStroke = stroke && !stroke.isNone;\n  var rx = rxInPixels.value;\n  var ry = ryInPixels.value;\n  var halfLineWith = lineWidth.value / 2;\n  var squareX = (x - rx) * (x - rx);\n  var squareY = (y - ry) * (y - ry); // 使用椭圆的公式： x*x/rx*rx + y*y/ry*ry = 1;\n\n  if (hasFill && hasStroke || isClipPath) {\n    return ellipseDistance(squareX, squareY, rx + halfLineWith, ry + halfLineWith) <= 1;\n  }\n\n  if (hasFill) {\n    return ellipseDistance(squareX, squareY, rx, ry) <= 1;\n  }\n\n  if (hasStroke) {\n    return ellipseDistance(squareX, squareY, rx - halfLineWith, ry - halfLineWith) >= 1 && ellipseDistance(squareX, squareY, rx + halfLineWith, ry + halfLineWith) <= 1;\n  }\n\n  return false;\n}"]},"metadata":{},"sourceType":"module"}