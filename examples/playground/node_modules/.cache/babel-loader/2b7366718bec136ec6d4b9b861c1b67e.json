{"ast":null,"code":"import { createTrackingData } from \"./reactionCleanupTrackingCommon\";\n/**\n * FinalizationRegistry-based uncommitted reaction cleanup\n */\n\nexport function createReactionCleanupTrackingUsingFinalizationRegister(FinalizationRegistry) {\n  var cleanupTokenToReactionTrackingMap = new Map();\n  var globalCleanupTokensCounter = 1;\n  var registry = new FinalizationRegistry(function cleanupFunction(token) {\n    var trackedReaction = cleanupTokenToReactionTrackingMap.get(token);\n\n    if (trackedReaction) {\n      trackedReaction.reaction.dispose();\n      cleanupTokenToReactionTrackingMap.delete(token);\n    }\n  });\n  return {\n    addReactionToTrack: function (reactionTrackingRef, reaction, objectRetainedByReact) {\n      var token = globalCleanupTokensCounter++;\n      registry.register(objectRetainedByReact, token, reactionTrackingRef);\n      reactionTrackingRef.current = createTrackingData(reaction);\n      reactionTrackingRef.current.finalizationRegistryCleanupToken = token;\n      cleanupTokenToReactionTrackingMap.set(token, reactionTrackingRef.current);\n      return reactionTrackingRef.current;\n    },\n    recordReactionAsCommitted: function (reactionRef) {\n      registry.unregister(reactionRef);\n\n      if (reactionRef.current && reactionRef.current.finalizationRegistryCleanupToken) {\n        cleanupTokenToReactionTrackingMap.delete(reactionRef.current.finalizationRegistryCleanupToken);\n      }\n    },\n    forceCleanupTimerToRunNowForTests: function () {// When FinalizationRegistry in use, this this is no-op\n    },\n    resetCleanupScheduleForTests: function () {// When FinalizationRegistry in use, this this is no-op\n    }\n  };\n}","map":{"version":3,"mappings":"AAEA,SAGIA,kBAHJ,QAIO,iCAJP;AAMA;;;;AAGA,OAAM,SAAUC,sDAAV,CACFC,oBADE,EAC0E;AAE5E,MAAMC,iCAAiC,GAAG,IAAIC,GAAJ,EAA1C;AACA,MAAIC,0BAA0B,GAAG,CAAjC;AAEA,MAAMC,QAAQ,GAAG,IAAIJ,oBAAJ,CAAyB,SAASK,eAAT,CAAyBC,KAAzB,EAAsC;AAC5E,QAAMC,eAAe,GAAGN,iCAAiC,CAACO,GAAlC,CAAsCF,KAAtC,CAAxB;;AACA,QAAIC,eAAJ,EAAqB;AACjBA,qBAAe,CAACE,QAAhB,CAAyBC,OAAzB;AACAT,uCAAiC,CAACU,MAAlC,CAAyCL,KAAzC;AACH;AACJ,GANgB,CAAjB;AAQA,SAAO;AACHM,sBAAkB,EAAlB,UACIC,mBADJ,EAEIJ,QAFJ,EAGIK,qBAHJ,EAGiC;AAE7B,UAAMR,KAAK,GAAGH,0BAA0B,EAAxC;AAEAC,cAAQ,CAACW,QAAT,CAAkBD,qBAAlB,EAAyCR,KAAzC,EAAgDO,mBAAhD;AACAA,yBAAmB,CAACG,OAApB,GAA8BlB,kBAAkB,CAACW,QAAD,CAAhD;AACAI,yBAAmB,CAACG,OAApB,CAA4BC,gCAA5B,GAA+DX,KAA/D;AACAL,uCAAiC,CAACiB,GAAlC,CAAsCZ,KAAtC,EAA6CO,mBAAmB,CAACG,OAAjE;AAEA,aAAOH,mBAAmB,CAACG,OAA3B;AACH,KAdE;AAeHG,6BAAyB,EAAzB,UAA0BC,WAA1B,EAAuF;AACnFhB,cAAQ,CAACiB,UAAT,CAAoBD,WAApB;;AAEA,UAAIA,WAAW,CAACJ,OAAZ,IAAuBI,WAAW,CAACJ,OAAZ,CAAoBC,gCAA/C,EAAiF;AAC7EhB,yCAAiC,CAACU,MAAlC,CACIS,WAAW,CAACJ,OAAZ,CAAoBC,gCADxB;AAGH;AACJ,KAvBE;AAwBHK,qCAAiC,eAC7B;AACH,KA1BE;AA2BHC,gCAA4B,eACxB;AACH;AA7BE,GAAP;AA+BH","names":["createTrackingData","createReactionCleanupTrackingUsingFinalizationRegister","FinalizationRegistry","cleanupTokenToReactionTrackingMap","Map","globalCleanupTokensCounter","registry","cleanupFunction","token","trackedReaction","get","reaction","dispose","delete","addReactionToTrack","reactionTrackingRef","objectRetainedByReact","register","current","finalizationRegistryCleanupToken","set","recordReactionAsCommitted","reactionRef","unregister","forceCleanupTimerToRunNowForTests","resetCleanupScheduleForTests"],"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/mobx-react-lite/src/utils/createReactionCleanupTrackingUsingFinalizationRegister.ts"],"sourcesContent":["import { FinalizationRegistry as FinalizationRegistryMaybeUndefined } from \"./FinalizationRegistryWrapper\"\nimport { Reaction } from \"mobx\"\nimport {\n    ReactionCleanupTracking,\n    IReactionTracking,\n    createTrackingData\n} from \"./reactionCleanupTrackingCommon\"\n\n/**\n * FinalizationRegistry-based uncommitted reaction cleanup\n */\nexport function createReactionCleanupTrackingUsingFinalizationRegister(\n    FinalizationRegistry: NonNullable<typeof FinalizationRegistryMaybeUndefined>\n): ReactionCleanupTracking {\n    const cleanupTokenToReactionTrackingMap = new Map<number, IReactionTracking>()\n    let globalCleanupTokensCounter = 1\n\n    const registry = new FinalizationRegistry(function cleanupFunction(token: number) {\n        const trackedReaction = cleanupTokenToReactionTrackingMap.get(token)\n        if (trackedReaction) {\n            trackedReaction.reaction.dispose()\n            cleanupTokenToReactionTrackingMap.delete(token)\n        }\n    })\n\n    return {\n        addReactionToTrack(\n            reactionTrackingRef: React.MutableRefObject<IReactionTracking | null>,\n            reaction: Reaction,\n            objectRetainedByReact: object\n        ) {\n            const token = globalCleanupTokensCounter++\n\n            registry.register(objectRetainedByReact, token, reactionTrackingRef)\n            reactionTrackingRef.current = createTrackingData(reaction)\n            reactionTrackingRef.current.finalizationRegistryCleanupToken = token\n            cleanupTokenToReactionTrackingMap.set(token, reactionTrackingRef.current)\n\n            return reactionTrackingRef.current\n        },\n        recordReactionAsCommitted(reactionRef: React.MutableRefObject<IReactionTracking | null>) {\n            registry.unregister(reactionRef)\n\n            if (reactionRef.current && reactionRef.current.finalizationRegistryCleanupToken) {\n                cleanupTokenToReactionTrackingMap.delete(\n                    reactionRef.current.finalizationRegistryCleanupToken\n                )\n            }\n        },\n        forceCleanupTimerToRunNowForTests() {\n            // When FinalizationRegistry in use, this this is no-op\n        },\n        resetCleanupScheduleForTests() {\n            // When FinalizationRegistry in use, this this is no-op\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}