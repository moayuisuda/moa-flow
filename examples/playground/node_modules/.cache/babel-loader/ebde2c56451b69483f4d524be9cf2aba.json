{"ast":null,"code":"import { __decorate, __metadata } from \"tslib\";\nimport { RenderingContext } from '@antv/g';\nimport { ContextService, RenderingPluginContribution } from '@antv/g';\nimport { inject, singleton } from 'mana-syringe';\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n/**\n * listen to mouse/touch/pointer events on DOM wrapper, trigger pointer events\n */\n\nvar DOMInteractionPlugin =\n/** @class */\nfunction () {\n  function DOMInteractionPlugin() {}\n\n  DOMInteractionPlugin_1 = DOMInteractionPlugin;\n\n  DOMInteractionPlugin.prototype.apply = function (renderingService) {\n    var _this = this;\n\n    var canvas = this.renderingContext.root.ownerDocument.defaultView;\n    var SUPPORT_ONLY_TOUCH = canvas.supportTouchEvent && MOBILE_REGEX.test(navigator.userAgent);\n\n    var onPointerMove = function onPointerMove(ev) {\n      renderingService.hooks.pointerMove.call(ev);\n    };\n\n    var onPointerUp = function onPointerUp(ev) {\n      renderingService.hooks.pointerUp.call(ev);\n    };\n\n    var onPointerDown = function onPointerDown(ev) {\n      renderingService.hooks.pointerDown.call(ev);\n    };\n\n    var onPointerOver = function onPointerOver(ev) {\n      renderingService.hooks.pointerOver.call(ev);\n    };\n\n    var onPointerOut = function onPointerOut(ev) {\n      renderingService.hooks.pointerOut.call(ev);\n    };\n\n    var onPointerWheel = function onPointerWheel(ev) {\n      renderingService.hooks.pointerWheel.call(ev);\n    };\n\n    var addPointerEventListener = function addPointerEventListener($el) {\n      globalThis.document.addEventListener('pointermove', onPointerMove, true);\n      $el.addEventListener('pointerdown', onPointerDown, true);\n      $el.addEventListener('pointerleave', onPointerOut, true);\n      $el.addEventListener('pointerover', onPointerOver, true);\n      globalThis.addEventListener('pointerup', onPointerUp, true);\n    };\n\n    var addTouchEventListener = function addTouchEventListener($el) {\n      $el.addEventListener('touchstart', onPointerDown, true);\n      $el.addEventListener('touchend', onPointerUp, true);\n      $el.addEventListener('touchmove', onPointerMove, true);\n    };\n\n    var addMouseEventListener = function addMouseEventListener($el) {\n      globalThis.document.addEventListener('mousemove', onPointerMove, true);\n      $el.addEventListener('mousedown', onPointerDown, true);\n      $el.addEventListener('mouseout', onPointerOut, true);\n      $el.addEventListener('mouseover', onPointerOver, true);\n      globalThis.addEventListener('mouseup', onPointerUp, true);\n    };\n\n    var removePointerEventListener = function removePointerEventListener($el) {\n      globalThis.document.removeEventListener('pointermove', onPointerMove, true);\n      $el.removeEventListener('pointerdown', onPointerDown, true);\n      $el.removeEventListener('pointerleave', onPointerOut, true);\n      $el.removeEventListener('pointerover', onPointerOver, true);\n      globalThis.removeEventListener('pointerup', onPointerUp, true);\n    };\n\n    var removeTouchEventListener = function removeTouchEventListener($el) {\n      $el.removeEventListener('touchstart', onPointerDown, true);\n      $el.removeEventListener('touchend', onPointerUp, true);\n      $el.removeEventListener('touchmove', onPointerMove, true);\n    };\n\n    var removeMouseEventListener = function removeMouseEventListener($el) {\n      globalThis.document.removeEventListener('mousemove', onPointerMove, true);\n      $el.removeEventListener('mousedown', onPointerDown, true);\n      $el.removeEventListener('mouseout', onPointerOut, true);\n      $el.removeEventListener('mouseover', onPointerOver, true);\n      globalThis.removeEventListener('mouseup', onPointerUp, true);\n    };\n\n    renderingService.hooks.init.tap(DOMInteractionPlugin_1.tag, function () {\n      var $el = _this.contextService.getDomElement();\n\n      if (canvas.supportPointerEvent) {\n        addPointerEventListener($el);\n      } else if (SUPPORT_ONLY_TOUCH) {\n        addTouchEventListener($el);\n      } else if (!canvas.supportTouchEvent) {\n        addMouseEventListener($el);\n      } else {\n        addTouchEventListener($el);\n        addMouseEventListener($el);\n      } // use passive event listeners\n      // @see https://zhuanlan.zhihu.com/p/24555031\n\n\n      $el.addEventListener('wheel', onPointerWheel, {\n        passive: true,\n        capture: true\n      });\n    });\n    renderingService.hooks.destroy.tap(DOMInteractionPlugin_1.tag, function () {\n      var $el = _this.contextService.getDomElement();\n\n      if (canvas.supportPointerEvent) {\n        removePointerEventListener($el);\n      } else if (SUPPORT_ONLY_TOUCH) {\n        removeTouchEventListener($el);\n      } else if (!canvas.supportTouchEvent) {\n        removeMouseEventListener($el);\n      } else {\n        removeTouchEventListener($el);\n        removeMouseEventListener($el);\n      }\n\n      $el.removeEventListener('wheel', onPointerWheel, true);\n    });\n  };\n\n  var DOMInteractionPlugin_1;\n  DOMInteractionPlugin.tag = 'DOMInteractionPlugin';\n\n  __decorate([inject(ContextService), __metadata(\"design:type\", Object)], DOMInteractionPlugin.prototype, \"contextService\", void 0);\n\n  __decorate([inject(RenderingContext), __metadata(\"design:type\", Object)], DOMInteractionPlugin.prototype, \"renderingContext\", void 0);\n\n  DOMInteractionPlugin = DOMInteractionPlugin_1 = __decorate([singleton({\n    contrib: RenderingPluginContribution\n  })], DOMInteractionPlugin);\n  return DOMInteractionPlugin;\n}();\n\nexport { DOMInteractionPlugin };","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/@antv/g-plugin-dom-interaction/es/DOMInteractionPlugin.js"],"names":["__decorate","__metadata","RenderingContext","ContextService","RenderingPluginContribution","inject","singleton","MOBILE_REGEX","DOMInteractionPlugin","DOMInteractionPlugin_1","prototype","apply","renderingService","_this","canvas","renderingContext","root","ownerDocument","defaultView","SUPPORT_ONLY_TOUCH","supportTouchEvent","test","navigator","userAgent","onPointerMove","ev","hooks","pointerMove","call","onPointerUp","pointerUp","onPointerDown","pointerDown","onPointerOver","pointerOver","onPointerOut","pointerOut","onPointerWheel","pointerWheel","addPointerEventListener","$el","globalThis","document","addEventListener","addTouchEventListener","addMouseEventListener","removePointerEventListener","removeEventListener","removeTouchEventListener","removeMouseEventListener","init","tap","tag","contextService","getDomElement","supportPointerEvent","passive","capture","destroy","Object","contrib"],"mappings":"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","sourcesContent":["import { __decorate, __metadata } from \"tslib\";\nimport { RenderingContext } from '@antv/g';\nimport { ContextService, RenderingPluginContribution } from '@antv/g';\nimport { inject, singleton } from 'mana-syringe';\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n/**\n * listen to mouse/touch/pointer events on DOM wrapper, trigger pointer events\n */\n\nvar DOMInteractionPlugin =\n/** @class */\nfunction () {\n  function DOMInteractionPlugin() {}\n\n  DOMInteractionPlugin_1 = DOMInteractionPlugin;\n\n  DOMInteractionPlugin.prototype.apply = function (renderingService) {\n    var _this = this;\n\n    var canvas = this.renderingContext.root.ownerDocument.defaultView;\n    var SUPPORT_ONLY_TOUCH = canvas.supportTouchEvent && MOBILE_REGEX.test(navigator.userAgent);\n\n    var onPointerMove = function onPointerMove(ev) {\n      renderingService.hooks.pointerMove.call(ev);\n    };\n\n    var onPointerUp = function onPointerUp(ev) {\n      renderingService.hooks.pointerUp.call(ev);\n    };\n\n    var onPointerDown = function onPointerDown(ev) {\n      renderingService.hooks.pointerDown.call(ev);\n    };\n\n    var onPointerOver = function onPointerOver(ev) {\n      renderingService.hooks.pointerOver.call(ev);\n    };\n\n    var onPointerOut = function onPointerOut(ev) {\n      renderingService.hooks.pointerOut.call(ev);\n    };\n\n    var onPointerWheel = function onPointerWheel(ev) {\n      renderingService.hooks.pointerWheel.call(ev);\n    };\n\n    var addPointerEventListener = function addPointerEventListener($el) {\n      globalThis.document.addEventListener('pointermove', onPointerMove, true);\n      $el.addEventListener('pointerdown', onPointerDown, true);\n      $el.addEventListener('pointerleave', onPointerOut, true);\n      $el.addEventListener('pointerover', onPointerOver, true);\n      globalThis.addEventListener('pointerup', onPointerUp, true);\n    };\n\n    var addTouchEventListener = function addTouchEventListener($el) {\n      $el.addEventListener('touchstart', onPointerDown, true);\n      $el.addEventListener('touchend', onPointerUp, true);\n      $el.addEventListener('touchmove', onPointerMove, true);\n    };\n\n    var addMouseEventListener = function addMouseEventListener($el) {\n      globalThis.document.addEventListener('mousemove', onPointerMove, true);\n      $el.addEventListener('mousedown', onPointerDown, true);\n      $el.addEventListener('mouseout', onPointerOut, true);\n      $el.addEventListener('mouseover', onPointerOver, true);\n      globalThis.addEventListener('mouseup', onPointerUp, true);\n    };\n\n    var removePointerEventListener = function removePointerEventListener($el) {\n      globalThis.document.removeEventListener('pointermove', onPointerMove, true);\n      $el.removeEventListener('pointerdown', onPointerDown, true);\n      $el.removeEventListener('pointerleave', onPointerOut, true);\n      $el.removeEventListener('pointerover', onPointerOver, true);\n      globalThis.removeEventListener('pointerup', onPointerUp, true);\n    };\n\n    var removeTouchEventListener = function removeTouchEventListener($el) {\n      $el.removeEventListener('touchstart', onPointerDown, true);\n      $el.removeEventListener('touchend', onPointerUp, true);\n      $el.removeEventListener('touchmove', onPointerMove, true);\n    };\n\n    var removeMouseEventListener = function removeMouseEventListener($el) {\n      globalThis.document.removeEventListener('mousemove', onPointerMove, true);\n      $el.removeEventListener('mousedown', onPointerDown, true);\n      $el.removeEventListener('mouseout', onPointerOut, true);\n      $el.removeEventListener('mouseover', onPointerOver, true);\n      globalThis.removeEventListener('mouseup', onPointerUp, true);\n    };\n\n    renderingService.hooks.init.tap(DOMInteractionPlugin_1.tag, function () {\n      var $el = _this.contextService.getDomElement();\n\n      if (canvas.supportPointerEvent) {\n        addPointerEventListener($el);\n      } else if (SUPPORT_ONLY_TOUCH) {\n        addTouchEventListener($el);\n      } else if (!canvas.supportTouchEvent) {\n        addMouseEventListener($el);\n      } else {\n        addTouchEventListener($el);\n        addMouseEventListener($el);\n      } // use passive event listeners\n      // @see https://zhuanlan.zhihu.com/p/24555031\n\n\n      $el.addEventListener('wheel', onPointerWheel, {\n        passive: true,\n        capture: true\n      });\n    });\n    renderingService.hooks.destroy.tap(DOMInteractionPlugin_1.tag, function () {\n      var $el = _this.contextService.getDomElement();\n\n      if (canvas.supportPointerEvent) {\n        removePointerEventListener($el);\n      } else if (SUPPORT_ONLY_TOUCH) {\n        removeTouchEventListener($el);\n      } else if (!canvas.supportTouchEvent) {\n        removeMouseEventListener($el);\n      } else {\n        removeTouchEventListener($el);\n        removeMouseEventListener($el);\n      }\n\n      $el.removeEventListener('wheel', onPointerWheel, true);\n    });\n  };\n\n  var DOMInteractionPlugin_1;\n  DOMInteractionPlugin.tag = 'DOMInteractionPlugin';\n\n  __decorate([inject(ContextService), __metadata(\"design:type\", Object)], DOMInteractionPlugin.prototype, \"contextService\", void 0);\n\n  __decorate([inject(RenderingContext), __metadata(\"design:type\", Object)], DOMInteractionPlugin.prototype, \"renderingContext\", void 0);\n\n  DOMInteractionPlugin = DOMInteractionPlugin_1 = __decorate([singleton({\n    contrib: RenderingPluginContribution\n  })], DOMInteractionPlugin);\n  return DOMInteractionPlugin;\n}();\n\nexport { DOMInteractionPlugin };"]},"metadata":{},"sourceType":"module"}