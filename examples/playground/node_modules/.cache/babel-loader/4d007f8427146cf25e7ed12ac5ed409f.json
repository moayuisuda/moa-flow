{"ast":null,"code":"import eq from './eq.js';\nimport isArrayLike from './isArrayLike.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\n\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n\n  var type = typeof index;\n\n  if (type == 'number' ? isArrayLike(object) && isIndex(index, object.length) : type == 'string' && index in object) {\n    return eq(object[index], value);\n  }\n\n  return false;\n}\n\nexport default isIterateeCall;","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/lodash-es/_isIterateeCall.js"],"names":["eq","isArrayLike","isIndex","isObject","isIterateeCall","value","index","object","type","length"],"mappings":"AAAA,OAAOA,EAAP,MAAe,SAAf;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,QAAP,MAAqB,eAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,cAAT,CAAwBC,KAAxB,EAA+BC,KAA/B,EAAsCC,MAAtC,EAA8C;AAC5C,MAAI,CAACJ,QAAQ,CAACI,MAAD,CAAb,EAAuB;AACrB,WAAO,KAAP;AACD;;AACD,MAAIC,IAAI,GAAG,OAAOF,KAAlB;;AACA,MAAIE,IAAI,IAAI,QAAR,GACKP,WAAW,CAACM,MAAD,CAAX,IAAuBL,OAAO,CAACI,KAAD,EAAQC,MAAM,CAACE,MAAf,CADnC,GAEKD,IAAI,IAAI,QAAR,IAAoBF,KAAK,IAAIC,MAFtC,EAGM;AACJ,WAAOP,EAAE,CAACO,MAAM,CAACD,KAAD,CAAP,EAAgBD,KAAhB,CAAT;AACD;;AACD,SAAO,KAAP;AACD;;AAED,eAAeD,cAAf","sourcesContent":["import eq from './eq.js';\nimport isArrayLike from './isArrayLike.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nexport default isIterateeCall;\n"]},"metadata":{},"sourceType":"module"}