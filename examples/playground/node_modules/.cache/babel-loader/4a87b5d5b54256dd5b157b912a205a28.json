{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { CSSStyleValue, CSSStyleValueType } from './CSSStyleValue';\nexport var GradientPatternType;\n\n(function (GradientPatternType) {\n  GradientPatternType[GradientPatternType[\"Constant\"] = 0] = \"Constant\";\n  GradientPatternType[GradientPatternType[\"LinearGradient\"] = 1] = \"LinearGradient\";\n  GradientPatternType[GradientPatternType[\"RadialGradient\"] = 2] = \"RadialGradient\";\n  GradientPatternType[GradientPatternType[\"Pattern\"] = 3] = \"Pattern\";\n})(GradientPatternType || (GradientPatternType = {}));\n\nvar CSSGradientValue =\n/** @class */\nfunction (_super) {\n  __extends(CSSGradientValue, _super);\n\n  function CSSGradientValue(type, value) {\n    var _this = _super.call(this) || this;\n\n    _this.type = type;\n    _this.value = value;\n    return _this;\n  }\n\n  CSSGradientValue.prototype.clone = function () {\n    return new CSSGradientValue(this.type, this.value);\n  };\n\n  CSSGradientValue.prototype.buildCSSText = function (n, p, result) {\n    var text = '';\n\n    if (this.type === GradientPatternType.LinearGradient) {\n      text = \"linear-gradient(\".concat(this.value.steps.map(function (step) {\n        return step.join(',');\n      }).join(','), \")\");\n    } else if (this.type === GradientPatternType.RadialGradient) {\n      text = \"radial-gradient(\".concat(this.value.steps.map(function (step) {\n        return step.join(',');\n      }).join(','), \")\");\n    } else if (this.type === GradientPatternType.Pattern) {\n      text = \"url(\".concat(this.value.src, \")\");\n    }\n\n    return result += text;\n  };\n\n  CSSGradientValue.prototype.getType = function () {\n    return CSSStyleValueType.kColorType;\n  };\n\n  return CSSGradientValue;\n}(CSSStyleValue);\n\nexport { CSSGradientValue };","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/@antv/g/es/css/cssom/CSSGradientValue.js"],"names":["__extends","CSSStyleValue","CSSStyleValueType","GradientPatternType","CSSGradientValue","_super","type","value","_this","call","prototype","clone","buildCSSText","n","p","result","text","LinearGradient","concat","steps","map","step","join","RadialGradient","Pattern","src","getType","kColorType"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,aAAT,EAAwBC,iBAAxB,QAAiD,iBAAjD;AACA,OAAO,IAAIC,mBAAJ;;AAEP,CAAC,UAAUA,mBAAV,EAA+B;AAC9BA,EAAAA,mBAAmB,CAACA,mBAAmB,CAAC,UAAD,CAAnB,GAAkC,CAAnC,CAAnB,GAA2D,UAA3D;AACAA,EAAAA,mBAAmB,CAACA,mBAAmB,CAAC,gBAAD,CAAnB,GAAwC,CAAzC,CAAnB,GAAiE,gBAAjE;AACAA,EAAAA,mBAAmB,CAACA,mBAAmB,CAAC,gBAAD,CAAnB,GAAwC,CAAzC,CAAnB,GAAiE,gBAAjE;AACAA,EAAAA,mBAAmB,CAACA,mBAAmB,CAAC,SAAD,CAAnB,GAAiC,CAAlC,CAAnB,GAA0D,SAA1D;AACD,CALD,EAKGA,mBAAmB,KAAKA,mBAAmB,GAAG,EAA3B,CALtB;;AAOA,IAAIC,gBAAgB;AACpB;AACA,UAAUC,MAAV,EAAkB;AAChBL,EAAAA,SAAS,CAACI,gBAAD,EAAmBC,MAAnB,CAAT;;AAEA,WAASD,gBAAT,CAA0BE,IAA1B,EAAgCC,KAAhC,EAAuC;AACrC,QAAIC,KAAK,GAAGH,MAAM,CAACI,IAAP,CAAY,IAAZ,KAAqB,IAAjC;;AAEAD,IAAAA,KAAK,CAACF,IAAN,GAAaA,IAAb;AACAE,IAAAA,KAAK,CAACD,KAAN,GAAcA,KAAd;AACA,WAAOC,KAAP;AACD;;AAEDJ,EAAAA,gBAAgB,CAACM,SAAjB,CAA2BC,KAA3B,GAAmC,YAAY;AAC7C,WAAO,IAAIP,gBAAJ,CAAqB,KAAKE,IAA1B,EAAgC,KAAKC,KAArC,CAAP;AACD,GAFD;;AAIAH,EAAAA,gBAAgB,CAACM,SAAjB,CAA2BE,YAA3B,GAA0C,UAAUC,CAAV,EAAaC,CAAb,EAAgBC,MAAhB,EAAwB;AAChE,QAAIC,IAAI,GAAG,EAAX;;AAEA,QAAI,KAAKV,IAAL,KAAcH,mBAAmB,CAACc,cAAtC,EAAsD;AACpDD,MAAAA,IAAI,GAAG,mBAAmBE,MAAnB,CAA0B,KAAKX,KAAL,CAAWY,KAAX,CAAiBC,GAAjB,CAAqB,UAAUC,IAAV,EAAgB;AACpE,eAAOA,IAAI,CAACC,IAAL,CAAU,GAAV,CAAP;AACD,OAFgC,EAE9BA,IAF8B,CAEzB,GAFyB,CAA1B,EAEO,GAFP,CAAP;AAGD,KAJD,MAIO,IAAI,KAAKhB,IAAL,KAAcH,mBAAmB,CAACoB,cAAtC,EAAsD;AAC3DP,MAAAA,IAAI,GAAG,mBAAmBE,MAAnB,CAA0B,KAAKX,KAAL,CAAWY,KAAX,CAAiBC,GAAjB,CAAqB,UAAUC,IAAV,EAAgB;AACpE,eAAOA,IAAI,CAACC,IAAL,CAAU,GAAV,CAAP;AACD,OAFgC,EAE9BA,IAF8B,CAEzB,GAFyB,CAA1B,EAEO,GAFP,CAAP;AAGD,KAJM,MAIA,IAAI,KAAKhB,IAAL,KAAcH,mBAAmB,CAACqB,OAAtC,EAA+C;AACpDR,MAAAA,IAAI,GAAG,OAAOE,MAAP,CAAc,KAAKX,KAAL,CAAWkB,GAAzB,EAA8B,GAA9B,CAAP;AACD;;AAED,WAAOV,MAAM,IAAIC,IAAjB;AACD,GAhBD;;AAkBAZ,EAAAA,gBAAgB,CAACM,SAAjB,CAA2BgB,OAA3B,GAAqC,YAAY;AAC/C,WAAOxB,iBAAiB,CAACyB,UAAzB;AACD,GAFD;;AAIA,SAAOvB,gBAAP;AACD,CAtCD,CAsCEH,aAtCF,CAFA;;AA0CA,SAASG,gBAAT","sourcesContent":["import { __extends } from \"tslib\";\nimport { CSSStyleValue, CSSStyleValueType } from './CSSStyleValue';\nexport var GradientPatternType;\n\n(function (GradientPatternType) {\n  GradientPatternType[GradientPatternType[\"Constant\"] = 0] = \"Constant\";\n  GradientPatternType[GradientPatternType[\"LinearGradient\"] = 1] = \"LinearGradient\";\n  GradientPatternType[GradientPatternType[\"RadialGradient\"] = 2] = \"RadialGradient\";\n  GradientPatternType[GradientPatternType[\"Pattern\"] = 3] = \"Pattern\";\n})(GradientPatternType || (GradientPatternType = {}));\n\nvar CSSGradientValue =\n/** @class */\nfunction (_super) {\n  __extends(CSSGradientValue, _super);\n\n  function CSSGradientValue(type, value) {\n    var _this = _super.call(this) || this;\n\n    _this.type = type;\n    _this.value = value;\n    return _this;\n  }\n\n  CSSGradientValue.prototype.clone = function () {\n    return new CSSGradientValue(this.type, this.value);\n  };\n\n  CSSGradientValue.prototype.buildCSSText = function (n, p, result) {\n    var text = '';\n\n    if (this.type === GradientPatternType.LinearGradient) {\n      text = \"linear-gradient(\".concat(this.value.steps.map(function (step) {\n        return step.join(',');\n      }).join(','), \")\");\n    } else if (this.type === GradientPatternType.RadialGradient) {\n      text = \"radial-gradient(\".concat(this.value.steps.map(function (step) {\n        return step.join(',');\n      }).join(','), \")\");\n    } else if (this.type === GradientPatternType.Pattern) {\n      text = \"url(\".concat(this.value.src, \")\");\n    }\n\n    return result += text;\n  };\n\n  CSSGradientValue.prototype.getType = function () {\n    return CSSStyleValueType.kColorType;\n  };\n\n  return CSSGradientValue;\n}(CSSStyleValue);\n\nexport { CSSGradientValue };"]},"metadata":{},"sourceType":"module"}