{"ast":null,"code":"import { __decorate, __metadata, __read } from \"tslib\";\nimport { inject, singleton, Syringe } from 'mana-syringe';\nimport { isNil } from 'lodash-es';\nimport { mat4, quat, vec3 } from 'gl-matrix';\nimport { AABB, Rectangle } from '../shapes';\nimport { SceneGraphSelectorFactory } from './SceneGraphSelector';\nimport { ElementEvent } from '../dom/interfaces';\nimport { MutationEvent } from '../dom/MutationEvent';\nexport function sortByZIndex(o1, o2) {\n  var zIndex1 = Number(o1.style.zIndex);\n  var zIndex2 = Number(o2.style.zIndex);\n\n  if (zIndex1 === zIndex2) {\n    // return o1.entity.getComponent(Sortable).lastSortedIndex - o2.entity.getComponent(Sortable).lastSortedIndex;\n    var parent_1 = o1.parentNode;\n\n    if (parent_1) {\n      var children = parent_1.childNodes || [];\n      return children.indexOf(o1) - children.indexOf(o2);\n    }\n  }\n\n  return zIndex1 - zIndex2;\n}\nexport function dirtifyToRoot(element, affectChildren) {\n  if (affectChildren === void 0) {\n    affectChildren = false;\n  }\n\n  var p = element;\n\n  while (p) {\n    var renderable = p.renderable;\n\n    if (renderable) {\n      renderable.renderBoundsDirty = true;\n      renderable.boundsDirty = true;\n      renderable.dirty = true;\n    }\n\n    p = p.parentNode;\n  }\n\n  element.emit(ElementEvent.BOUNDS_CHANGED, {\n    affectChildren: affectChildren\n  });\n}\nexport var SceneGraphService = Syringe.defineToken('SceneGraphService');\n/**\n * update transform in scene graph\n *\n * @see https://community.khronos.org/t/scene-graphs/50542/7\n */\n\nvar DefaultSceneGraphService =\n/** @class */\nfunction () {\n  function DefaultSceneGraphService() {\n    var _this = this;\n    /**\n     * rotate in world space\n     */\n\n\n    this.rotate = function () {\n      var parentInvertRotation = quat.create();\n      return function (element, degrees, y, z) {\n        if (y === void 0) {\n          y = 0;\n        }\n\n        if (z === void 0) {\n          z = 0;\n        }\n\n        if (typeof degrees === 'number') {\n          degrees = vec3.fromValues(degrees, y, z);\n        }\n\n        var transform = element.transformable;\n\n        if (element.parentNode === null || !element.parentNode.transformable) {\n          _this.rotateLocal(element, degrees);\n        } else {\n          var rotation = quat.create();\n          quat.fromEuler(rotation, degrees[0], degrees[1], degrees[2]);\n\n          var rot = _this.getRotation(element);\n\n          var parentRot = _this.getRotation(element.parentNode);\n\n          quat.copy(parentInvertRotation, parentRot);\n          quat.invert(parentInvertRotation, parentInvertRotation);\n          quat.multiply(rotation, parentInvertRotation, rotation);\n          quat.multiply(transform.localRotation, rotation, rot);\n          quat.normalize(transform.localRotation, transform.localRotation);\n\n          _this.dirtifyLocal(element, transform);\n        }\n      };\n    }();\n    /**\n     * rotate in local space\n     * @see @see https://docs.microsoft.com/en-us/windows/win32/api/directxmath/nf-directxmath-xmquaternionrotationrollpitchyaw\n     */\n\n\n    this.rotateLocal = function () {\n      var rotation = quat.create();\n      return function (element, degrees, y, z) {\n        if (y === void 0) {\n          y = 0;\n        }\n\n        if (z === void 0) {\n          z = 0;\n        }\n\n        if (typeof degrees === 'number') {\n          degrees = vec3.fromValues(degrees, y, z);\n        }\n\n        var transform = element.transformable;\n        quat.fromEuler(rotation, degrees[0], degrees[1], degrees[2]);\n        quat.mul(transform.localRotation, transform.localRotation, rotation);\n\n        _this.dirtifyLocal(element, transform);\n      };\n    }();\n    /**\n     * set euler angles(degrees) in world space\n     */\n\n\n    this.setEulerAngles = function () {\n      var invParentRot = quat.create();\n      return function (element, degrees, y, z) {\n        if (y === void 0) {\n          y = 0;\n        }\n\n        if (z === void 0) {\n          z = 0;\n        }\n\n        if (typeof degrees === 'number') {\n          degrees = vec3.fromValues(degrees, y, z);\n        }\n\n        var transform = element.transformable;\n\n        if (element.parentNode === null || !element.parentNode.transformable) {\n          _this.setLocalEulerAngles(element, degrees);\n        } else {\n          quat.fromEuler(transform.localRotation, degrees[0], degrees[1], degrees[2]);\n\n          var parentRotation = _this.getRotation(element.parentNode);\n\n          quat.copy(invParentRot, quat.invert(quat.create(), parentRotation));\n          quat.mul(transform.localRotation, transform.localRotation, invParentRot);\n\n          _this.dirtifyLocal(element, transform);\n        }\n      };\n    }();\n    /**\n     * translate in local space\n     *\n     * @example\n     * ```\n     * translateLocal(x, y, z)\n     * translateLocal(vec3(x, y, z))\n     * ```\n     */\n\n\n    this.translateLocal = function () {\n      return function (element, translation, y, z) {\n        if (y === void 0) {\n          y = 0;\n        }\n\n        if (z === void 0) {\n          z = 0;\n        }\n\n        if (typeof translation === 'number') {\n          translation = vec3.fromValues(translation, y, z);\n        }\n\n        var transform = element.transformable;\n\n        if (vec3.equals(translation, vec3.create())) {\n          return;\n        }\n\n        vec3.transformQuat(translation, translation, transform.localRotation);\n        vec3.add(transform.localPosition, transform.localPosition, translation);\n\n        _this.dirtifyLocal(element, transform);\n      };\n    }();\n    /**\n     * move to position in world space\n     *\n     * 对应 g 原版的 move/moveTo\n     * @see https://github.com/antvis/g/blob/master/packages/g-base/src/abstract/element.ts#L684-L689\n     */\n\n\n    this.setPosition = function () {\n      var parentInvertMatrix = mat4.create();\n      return function (element, position) {\n        var transform = element.transformable;\n        position = vec3.fromValues(position[0], position[1], position[2] || 0);\n\n        if (vec3.equals(_this.getPosition(element), position)) {\n          return;\n        }\n\n        transform.position = position;\n\n        if (element.parentNode === null || !element.parentNode.transformable) {\n          vec3.copy(transform.localPosition, position);\n        } else {\n          var parentTransform = element.parentNode.transformable;\n          mat4.copy(parentInvertMatrix, parentTransform.worldTransform);\n          mat4.invert(parentInvertMatrix, parentInvertMatrix);\n          vec3.transformMat4(transform.localPosition, position, parentInvertMatrix);\n        }\n\n        _this.dirtifyLocal(element, transform);\n      };\n    }();\n    /**\n     * translate in world space\n     *\n     * @example\n     * ```\n     * translate(x, y, z)\n     * translate(vec3(x, y, z))\n     * ```\n     *\n     * 对应 g 原版的 translate 2D\n     * @see https://github.com/antvis/g/blob/master/packages/g-base/src/abstract/element.ts#L665-L676\n     */\n\n\n    this.translate = function () {\n      var tr = vec3.create();\n      return function (element, translation, y, z) {\n        if (y === void 0) {\n          y = 0;\n        }\n\n        if (z === void 0) {\n          z = 0;\n        }\n\n        if (typeof translation === 'number') {\n          translation = vec3.fromValues(translation, y, z);\n        }\n\n        if (vec3.equals(translation, vec3.create())) {\n          return;\n        }\n\n        vec3.add(tr, _this.getPosition(element), translation);\n\n        _this.setPosition(element, tr);\n      };\n    }();\n\n    this.setRotation = function () {\n      var parentInvertRotation = quat.create();\n      return function (element, rotation, y, z, w) {\n        var transform = element.transformable;\n\n        if (typeof rotation === 'number') {\n          rotation = quat.fromValues(rotation, y, z, w);\n        }\n\n        if (element.parentNode === null || !element.parentNode.transformable) {\n          _this.setLocalRotation(element, rotation);\n        } else {\n          var parentRot = _this.getRotation(element.parentNode);\n\n          quat.copy(parentInvertRotation, parentRot);\n          quat.invert(parentInvertRotation, parentInvertRotation);\n          quat.multiply(transform.localRotation, parentInvertRotation, rotation);\n          quat.normalize(transform.localRotation, transform.localRotation);\n\n          _this.dirtifyLocal(element, transform);\n        }\n      };\n    };\n  }\n\n  DefaultSceneGraphService.prototype.matches = function (query, root) {\n    return this.sceneGraphSelectorFactory().is(query, root);\n  };\n\n  DefaultSceneGraphService.prototype.querySelector = function (query, root) {\n    return this.sceneGraphSelectorFactory().selectOne(query, root);\n  };\n\n  DefaultSceneGraphService.prototype.querySelectorAll = function (query, root) {\n    return this.sceneGraphSelectorFactory().selectAll(query, root); // .filter((node) => !node.shadow);\n  };\n\n  DefaultSceneGraphService.prototype.attach = function (child, parent, index) {\n    if (child.parentNode) {\n      this.detach(child);\n    }\n\n    child.parentNode = parent;\n\n    if (!isNil(index)) {\n      child.parentNode.childNodes.splice(index, 0, child);\n    } else {\n      child.parentNode.childNodes.push(child);\n    } // parent needs re-sort\n\n\n    var sortable = parent.sortable;\n\n    if (sortable) {\n      sortable.dirty = true;\n    } // this.updateGraphDepth(child);\n\n\n    var transform = child.transformable;\n\n    if (transform) {\n      this.dirtifyWorld(child, transform);\n    }\n\n    if (transform.frozen) {\n      this.unfreezeParentToRoot(child);\n    }\n  };\n\n  DefaultSceneGraphService.prototype.detach = function (child) {\n    if (child.parentNode) {\n      var transform = child.transformable; // if (transform) {\n      //   const worldTransform = this.getWorldTransform(child, transform);\n      //   mat4.getScaling(transform.localScale, worldTransform);\n      //   mat4.getTranslation(transform.localPosition, worldTransform);\n      //   mat4.getRotation(transform.localRotation, worldTransform);\n      //   transform.localDirtyFlag = true;\n      // }\n      // parent needs re-sort\n\n      var sortable = child.parentNode.sortable;\n\n      if (sortable) {\n        sortable.dirty = true;\n      }\n\n      var index = child.parentNode.childNodes.indexOf(child);\n\n      if (index > -1) {\n        child.parentNode.childNodes.splice(index, 1);\n      }\n\n      if (transform) {\n        this.dirtifyWorld(child, transform);\n      }\n\n      child.parentNode = null;\n    }\n  };\n\n  DefaultSceneGraphService.prototype.getOrigin = function (element) {\n    return element.transformable.origin;\n  };\n  /**\n   * same as pivot in Pixi.js\n   *\n   * @see https://stackoverflow.com/questions/40748452/how-to-change-css-transform-origin-but-preserve-transformation\n   */\n\n\n  DefaultSceneGraphService.prototype.setOrigin = function (element, origin, y, z) {\n    if (y === void 0) {\n      y = 0;\n    }\n\n    if (z === void 0) {\n      z = 0;\n    }\n\n    if (typeof origin === 'number') {\n      origin = vec3.fromValues(origin, y, z);\n    }\n\n    var transform = element.transformable;\n\n    if (vec3.equals(origin, transform.origin)) {\n      return;\n    }\n\n    var originVec = transform.origin; // const delta = vec3.subtract(vec3.create(), origin, originVec);\n    // vec3.add(transform.localPosition, transform.localPosition, delta);\n    // update origin\n\n    originVec[0] = origin[0];\n    originVec[1] = origin[1];\n    originVec[2] = origin[2] || 0;\n    this.dirtifyLocal(element, transform);\n  };\n  /**\n   * set euler angles(degrees) in local space\n   */\n\n\n  DefaultSceneGraphService.prototype.setLocalEulerAngles = function (element, degrees, y, z) {\n    if (y === void 0) {\n      y = 0;\n    }\n\n    if (z === void 0) {\n      z = 0;\n    }\n\n    if (typeof degrees === 'number') {\n      degrees = vec3.fromValues(degrees, y, z);\n    }\n\n    var transform = element.transformable;\n    quat.fromEuler(transform.localRotation, degrees[0], degrees[1], degrees[2]);\n    this.dirtifyLocal(element, transform);\n  };\n  /**\n   * move to position in local space\n   */\n\n\n  DefaultSceneGraphService.prototype.setLocalPosition = function (element, position) {\n    var transform = element.transformable;\n    position = vec3.fromValues(position[0], position[1], position[2] || 0);\n\n    if (vec3.equals(transform.localPosition, position)) {\n      return;\n    }\n\n    vec3.copy(transform.localPosition, position);\n    this.dirtifyLocal(element, transform);\n  };\n  /**\n   * scale in local space\n   */\n\n\n  DefaultSceneGraphService.prototype.scaleLocal = function (element, scaling) {\n    var transform = element.transformable;\n    vec3.multiply(transform.localScale, transform.localScale, vec3.fromValues(scaling[0], scaling[1], scaling[2] || 1));\n    this.dirtifyLocal(element, transform);\n  };\n\n  DefaultSceneGraphService.prototype.setLocalScale = function (element, scaling) {\n    var transform = element.transformable;\n    var updatedScaling = vec3.fromValues(scaling[0], scaling[1], scaling[2] || transform.localScale[2]);\n\n    if (vec3.equals(updatedScaling, transform.localScale)) {\n      return;\n    }\n\n    vec3.copy(transform.localScale, updatedScaling);\n    this.dirtifyLocal(element, transform);\n  };\n\n  DefaultSceneGraphService.prototype.setLocalRotation = function (element, rotation, y, z, w) {\n    if (typeof rotation === 'number') {\n      rotation = quat.fromValues(rotation, y, z, w);\n    }\n\n    var transform = element.transformable;\n    quat.copy(transform.localRotation, rotation);\n    this.dirtifyLocal(element, transform);\n  };\n\n  DefaultSceneGraphService.prototype.dirtifyLocal = function (element, transform) {\n    if (!transform.localDirtyFlag) {\n      transform.localDirtyFlag = true;\n\n      if (!transform.dirtyFlag) {\n        this.dirtifyWorld(element, transform);\n      }\n    }\n  };\n\n  DefaultSceneGraphService.prototype.dirtifyWorld = function (element, transform) {\n    if (!transform.dirtyFlag) {\n      this.unfreezeParentToRoot(element);\n    }\n\n    this.dirtifyWorldInternal(element, transform);\n    dirtifyToRoot(element, true);\n  };\n\n  DefaultSceneGraphService.prototype.getPosition = function (element) {\n    var transform = element.transformable;\n    return mat4.getTranslation(transform.position, this.getWorldTransform(element, transform));\n  };\n\n  DefaultSceneGraphService.prototype.getRotation = function (element) {\n    var transform = element.transformable;\n    return mat4.getRotation(transform.rotation, this.getWorldTransform(element, transform));\n  };\n\n  DefaultSceneGraphService.prototype.getScale = function (element) {\n    var transform = element.transformable;\n    return mat4.getScaling(transform.scaling, this.getWorldTransform(element, transform));\n  };\n\n  DefaultSceneGraphService.prototype.getWorldTransform = function (element, transform) {\n    if (transform === void 0) {\n      transform = element.transformable;\n    }\n\n    if (!transform.localDirtyFlag && !transform.dirtyFlag) {\n      return transform.worldTransform;\n    }\n\n    if (element.parentNode && element.parentNode.transformable) {\n      this.getWorldTransform(element.parentNode);\n    }\n\n    this.sync(element, transform);\n    return transform.worldTransform;\n  };\n\n  DefaultSceneGraphService.prototype.getLocalPosition = function (element) {\n    return element.transformable.localPosition;\n  };\n\n  DefaultSceneGraphService.prototype.getLocalRotation = function (element) {\n    return element.transformable.localRotation;\n  };\n\n  DefaultSceneGraphService.prototype.getLocalScale = function (element) {\n    return element.transformable.localScale;\n  };\n\n  DefaultSceneGraphService.prototype.getLocalTransform = function (element) {\n    var transform = element.transformable;\n\n    if (transform.localDirtyFlag) {\n      mat4.fromRotationTranslationScaleOrigin(transform.localTransform, transform.localRotation, transform.localPosition, transform.localScale, transform.origin);\n      transform.localDirtyFlag = false;\n    }\n\n    return transform.localTransform;\n  };\n\n  DefaultSceneGraphService.prototype.resetLocalTransform = function (element) {\n    this.setLocalScale(element, [1, 1, 1]);\n    this.setLocalPosition(element, [0, 0, 0]);\n    this.setLocalEulerAngles(element, [0, 0, 0]);\n  };\n\n  DefaultSceneGraphService.prototype.getTransformedGeometryBounds = function (element, render) {\n    if (render === void 0) {\n      render = false;\n    }\n\n    var bounds = this.getGeometryBounds(element, render);\n\n    if (!AABB.isEmpty(bounds)) {\n      var aabb = new AABB();\n      aabb.setFromTransformedAABB(bounds, this.getWorldTransform(element));\n      return aabb;\n    } else {\n      return null;\n    }\n  };\n  /**\n   * won't account for children\n   */\n\n\n  DefaultSceneGraphService.prototype.getGeometryBounds = function (element, render) {\n    if (render === void 0) {\n      render = false;\n    }\n\n    var geometry = element.geometry;\n    var bounds = render ? geometry.renderBounds : geometry.contentBounds || null;\n    return bounds && new AABB(bounds.center, bounds.halfExtents) || new AABB();\n  };\n  /**\n   * account for children in world space\n   */\n\n\n  DefaultSceneGraphService.prototype.getBounds = function (element, render) {\n    var _this = this;\n\n    if (render === void 0) {\n      render = false;\n    }\n\n    var renderable = element.renderable;\n\n    if (!renderable.boundsDirty && !render && renderable.bounds) {\n      return renderable.bounds;\n    }\n\n    if (!renderable.renderBoundsDirty && render && renderable.renderBounds) {\n      return renderable.renderBounds;\n    } // reset with geometry's aabb\n\n\n    var aabb = this.getTransformedGeometryBounds(element, render); // merge children's aabbs\n\n    var children = element.childNodes;\n    children.forEach(function (child) {\n      var childBounds = _this.getBounds(child, render);\n\n      if (childBounds) {\n        if (!aabb) {\n          aabb = new AABB();\n          aabb.update(childBounds.center, childBounds.halfExtents);\n        } else {\n          aabb.add(childBounds);\n        }\n      }\n    }); // account for clip path\n\n    var clipPath = element.style.clipPath;\n\n    if (clipPath) {\n      var clipPathBounds = this.getTransformedGeometryBounds(clipPath, true);\n      var transformParentBounds = void 0;\n\n      if (clipPathBounds) {\n        transformParentBounds = new AABB(); // intersect with original geometry\n\n        transformParentBounds.setFromTransformedAABB(clipPathBounds, this.getWorldTransform(element));\n      }\n\n      if (!aabb) {\n        aabb = transformParentBounds;\n      } else if (transformParentBounds) {\n        aabb = transformParentBounds.intersection(aabb);\n      }\n    }\n\n    if (aabb) {\n      if (render) {\n        renderable.renderBounds = aabb;\n      } else {\n        renderable.bounds = aabb;\n      }\n    }\n\n    if (render) {\n      renderable.renderBoundsDirty = false;\n    } else {\n      renderable.boundsDirty = false;\n    }\n\n    return aabb || new AABB();\n  };\n  /**\n   * account for children in local space\n   */\n\n\n  DefaultSceneGraphService.prototype.getLocalBounds = function (element) {\n    if (element.parentNode) {\n      var parentInvert = mat4.create();\n\n      if (element.parentNode.transformable) {\n        parentInvert = mat4.invert(mat4.create(), this.getWorldTransform(element.parentNode));\n      }\n\n      var bounds = this.getBounds(element);\n\n      if (!AABB.isEmpty(bounds)) {\n        var localBounds = new AABB();\n        localBounds.setFromTransformedAABB(bounds, parentInvert);\n        return localBounds;\n      }\n    }\n\n    return this.getBounds(element);\n  };\n\n  DefaultSceneGraphService.prototype.getBoundingClientRect = function (element) {\n    var _a, _b;\n\n    var aabb;\n    var bounds = this.getGeometryBounds(element);\n\n    if (!AABB.isEmpty(bounds)) {\n      aabb = new AABB(); // apply transformation to aabb\n\n      aabb.setFromTransformedAABB(bounds, this.getWorldTransform(element));\n    } // calc context's offset\n\n\n    var bbox = (_b = (_a = element.ownerDocument) === null || _a === void 0 ? void 0 : _a.defaultView) === null || _b === void 0 ? void 0 : _b.getContextService().getBoundingClientRect();\n\n    if (aabb) {\n      var _c = __read(aabb.getMin(), 2),\n          left = _c[0],\n          top_1 = _c[1];\n\n      var _d = __read(aabb.getMax(), 2),\n          right = _d[0],\n          bottom = _d[1];\n\n      return new Rectangle(left + ((bbox === null || bbox === void 0 ? void 0 : bbox.left) || 0), top_1 + ((bbox === null || bbox === void 0 ? void 0 : bbox.top) || 0), right - left, bottom - top_1);\n    }\n\n    return new Rectangle((bbox === null || bbox === void 0 ? void 0 : bbox.left) || 0, (bbox === null || bbox === void 0 ? void 0 : bbox.top) || 0, 0, 0);\n  };\n\n  DefaultSceneGraphService.prototype.dirtifyWorldInternal = function (element, transform) {\n    var _this = this;\n\n    if (!transform.dirtyFlag) {\n      transform.dirtyFlag = true;\n      transform.frozen = false;\n      element.childNodes.forEach(function (child) {\n        var childTransform = child.transformable;\n\n        if (!childTransform.dirtyFlag) {\n          _this.dirtifyWorldInternal(child, childTransform);\n        }\n      });\n      var renderable = element.renderable;\n\n      if (renderable) {\n        renderable.renderBoundsDirty = true;\n        renderable.boundsDirty = true;\n        renderable.dirty = true;\n      }\n\n      element.dispatchEvent(new MutationEvent(ElementEvent.ATTR_MODIFIED, element, null, null, 'modelMatrix', MutationEvent.MODIFICATION, null, null));\n    }\n  };\n\n  DefaultSceneGraphService.prototype.syncHierarchy = function (element) {\n    var transform = element.transformable;\n\n    if (transform.frozen) {\n      return;\n    }\n\n    transform.frozen = true;\n\n    if (transform.localDirtyFlag || transform.dirtyFlag) {\n      this.sync(element, transform);\n    }\n\n    var children = element.childNodes;\n\n    for (var i = 0; i < children.length; i++) {\n      this.syncHierarchy(children[i]);\n    }\n  };\n\n  DefaultSceneGraphService.prototype.sync = function (element, transform) {\n    if (transform.localDirtyFlag) {\n      mat4.fromRotationTranslationScaleOrigin(transform.localTransform, transform.localRotation, transform.localPosition, transform.localScale, transform.origin);\n      transform.localDirtyFlag = false;\n    }\n\n    if (transform.dirtyFlag) {\n      var parent_2 = element.parentNode;\n      var parentTransform = parent_2 && parent_2.transformable;\n\n      if (parent_2 === null || !parentTransform) {\n        mat4.copy(transform.worldTransform, transform.localTransform);\n      } else {\n        // TODO: should we support scale compensation?\n        // @see https://github.com/playcanvas/engine/issues/1077#issuecomment-359765557\n        mat4.multiply(transform.worldTransform, parentTransform.worldTransform, transform.localTransform);\n      }\n\n      transform.dirtyFlag = false;\n    }\n  };\n\n  DefaultSceneGraphService.prototype.unfreezeParentToRoot = function (child) {\n    var p = child.parentNode;\n\n    while (p) {\n      var transform = p.transformable;\n\n      if (transform) {\n        transform.frozen = false;\n      }\n\n      p = p.parentNode;\n    }\n  };\n\n  __decorate([inject(SceneGraphSelectorFactory), __metadata(\"design:type\", Function)], DefaultSceneGraphService.prototype, \"sceneGraphSelectorFactory\", void 0);\n\n  DefaultSceneGraphService = __decorate([singleton()], DefaultSceneGraphService);\n  return DefaultSceneGraphService;\n}();\n\nexport { DefaultSceneGraphService };","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/@antv/g/es/services/SceneGraphService.js"],"names":["__decorate","__metadata","__read","inject","singleton","Syringe","isNil","mat4","quat","vec3","AABB","Rectangle","SceneGraphSelectorFactory","ElementEvent","MutationEvent","sortByZIndex","o1","o2","zIndex1","Number","style","zIndex","zIndex2","parent_1","parentNode","children","childNodes","indexOf","dirtifyToRoot","element","affectChildren","p","renderable","renderBoundsDirty","boundsDirty","dirty","emit","BOUNDS_CHANGED","SceneGraphService","defineToken","DefaultSceneGraphService","_this","rotate","parentInvertRotation","create","degrees","y","z","fromValues","transform","transformable","rotateLocal","rotation","fromEuler","rot","getRotation","parentRot","copy","invert","multiply","localRotation","normalize","dirtifyLocal","mul","setEulerAngles","invParentRot","setLocalEulerAngles","parentRotation","translateLocal","translation","equals","transformQuat","add","localPosition","setPosition","parentInvertMatrix","position","getPosition","parentTransform","worldTransform","transformMat4","translate","tr","setRotation","w","setLocalRotation","prototype","matches","query","root","sceneGraphSelectorFactory","is","querySelector","selectOne","querySelectorAll","selectAll","attach","child","parent","index","detach","splice","push","sortable","dirtifyWorld","frozen","unfreezeParentToRoot","getOrigin","origin","setOrigin","originVec","setLocalPosition","scaleLocal","scaling","localScale","setLocalScale","updatedScaling","localDirtyFlag","dirtyFlag","dirtifyWorldInternal","getTranslation","getWorldTransform","getScale","getScaling","sync","getLocalPosition","getLocalRotation","getLocalScale","getLocalTransform","fromRotationTranslationScaleOrigin","localTransform","resetLocalTransform","getTransformedGeometryBounds","render","bounds","getGeometryBounds","isEmpty","aabb","setFromTransformedAABB","geometry","renderBounds","contentBounds","center","halfExtents","getBounds","forEach","childBounds","update","clipPath","clipPathBounds","transformParentBounds","intersection","getLocalBounds","parentInvert","localBounds","getBoundingClientRect","_a","_b","bbox","ownerDocument","defaultView","getContextService","_c","getMin","left","top_1","_d","getMax","right","bottom","top","childTransform","dispatchEvent","ATTR_MODIFIED","MODIFICATION","syncHierarchy","i","length","parent_2","Function"],"mappings":"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","sourcesContent":["import { __decorate, __metadata, __read } from \"tslib\";\nimport { inject, singleton, Syringe } from 'mana-syringe';\nimport { isNil } from 'lodash-es';\nimport { mat4, quat, vec3 } from 'gl-matrix';\nimport { AABB, Rectangle } from '../shapes';\nimport { SceneGraphSelectorFactory } from './SceneGraphSelector';\nimport { ElementEvent } from '../dom/interfaces';\nimport { MutationEvent } from '../dom/MutationEvent';\nexport function sortByZIndex(o1, o2) {\n  var zIndex1 = Number(o1.style.zIndex);\n  var zIndex2 = Number(o2.style.zIndex);\n\n  if (zIndex1 === zIndex2) {\n    // return o1.entity.getComponent(Sortable).lastSortedIndex - o2.entity.getComponent(Sortable).lastSortedIndex;\n    var parent_1 = o1.parentNode;\n\n    if (parent_1) {\n      var children = parent_1.childNodes || [];\n      return children.indexOf(o1) - children.indexOf(o2);\n    }\n  }\n\n  return zIndex1 - zIndex2;\n}\nexport function dirtifyToRoot(element, affectChildren) {\n  if (affectChildren === void 0) {\n    affectChildren = false;\n  }\n\n  var p = element;\n\n  while (p) {\n    var renderable = p.renderable;\n\n    if (renderable) {\n      renderable.renderBoundsDirty = true;\n      renderable.boundsDirty = true;\n      renderable.dirty = true;\n    }\n\n    p = p.parentNode;\n  }\n\n  element.emit(ElementEvent.BOUNDS_CHANGED, {\n    affectChildren: affectChildren\n  });\n}\nexport var SceneGraphService = Syringe.defineToken('SceneGraphService');\n/**\n * update transform in scene graph\n *\n * @see https://community.khronos.org/t/scene-graphs/50542/7\n */\n\nvar DefaultSceneGraphService =\n/** @class */\nfunction () {\n  function DefaultSceneGraphService() {\n    var _this = this;\n    /**\n     * rotate in world space\n     */\n\n\n    this.rotate = function () {\n      var parentInvertRotation = quat.create();\n      return function (element, degrees, y, z) {\n        if (y === void 0) {\n          y = 0;\n        }\n\n        if (z === void 0) {\n          z = 0;\n        }\n\n        if (typeof degrees === 'number') {\n          degrees = vec3.fromValues(degrees, y, z);\n        }\n\n        var transform = element.transformable;\n\n        if (element.parentNode === null || !element.parentNode.transformable) {\n          _this.rotateLocal(element, degrees);\n        } else {\n          var rotation = quat.create();\n          quat.fromEuler(rotation, degrees[0], degrees[1], degrees[2]);\n\n          var rot = _this.getRotation(element);\n\n          var parentRot = _this.getRotation(element.parentNode);\n\n          quat.copy(parentInvertRotation, parentRot);\n          quat.invert(parentInvertRotation, parentInvertRotation);\n          quat.multiply(rotation, parentInvertRotation, rotation);\n          quat.multiply(transform.localRotation, rotation, rot);\n          quat.normalize(transform.localRotation, transform.localRotation);\n\n          _this.dirtifyLocal(element, transform);\n        }\n      };\n    }();\n    /**\n     * rotate in local space\n     * @see @see https://docs.microsoft.com/en-us/windows/win32/api/directxmath/nf-directxmath-xmquaternionrotationrollpitchyaw\n     */\n\n\n    this.rotateLocal = function () {\n      var rotation = quat.create();\n      return function (element, degrees, y, z) {\n        if (y === void 0) {\n          y = 0;\n        }\n\n        if (z === void 0) {\n          z = 0;\n        }\n\n        if (typeof degrees === 'number') {\n          degrees = vec3.fromValues(degrees, y, z);\n        }\n\n        var transform = element.transformable;\n        quat.fromEuler(rotation, degrees[0], degrees[1], degrees[2]);\n        quat.mul(transform.localRotation, transform.localRotation, rotation);\n\n        _this.dirtifyLocal(element, transform);\n      };\n    }();\n    /**\n     * set euler angles(degrees) in world space\n     */\n\n\n    this.setEulerAngles = function () {\n      var invParentRot = quat.create();\n      return function (element, degrees, y, z) {\n        if (y === void 0) {\n          y = 0;\n        }\n\n        if (z === void 0) {\n          z = 0;\n        }\n\n        if (typeof degrees === 'number') {\n          degrees = vec3.fromValues(degrees, y, z);\n        }\n\n        var transform = element.transformable;\n\n        if (element.parentNode === null || !element.parentNode.transformable) {\n          _this.setLocalEulerAngles(element, degrees);\n        } else {\n          quat.fromEuler(transform.localRotation, degrees[0], degrees[1], degrees[2]);\n\n          var parentRotation = _this.getRotation(element.parentNode);\n\n          quat.copy(invParentRot, quat.invert(quat.create(), parentRotation));\n          quat.mul(transform.localRotation, transform.localRotation, invParentRot);\n\n          _this.dirtifyLocal(element, transform);\n        }\n      };\n    }();\n    /**\n     * translate in local space\n     *\n     * @example\n     * ```\n     * translateLocal(x, y, z)\n     * translateLocal(vec3(x, y, z))\n     * ```\n     */\n\n\n    this.translateLocal = function () {\n      return function (element, translation, y, z) {\n        if (y === void 0) {\n          y = 0;\n        }\n\n        if (z === void 0) {\n          z = 0;\n        }\n\n        if (typeof translation === 'number') {\n          translation = vec3.fromValues(translation, y, z);\n        }\n\n        var transform = element.transformable;\n\n        if (vec3.equals(translation, vec3.create())) {\n          return;\n        }\n\n        vec3.transformQuat(translation, translation, transform.localRotation);\n        vec3.add(transform.localPosition, transform.localPosition, translation);\n\n        _this.dirtifyLocal(element, transform);\n      };\n    }();\n    /**\n     * move to position in world space\n     *\n     * 对应 g 原版的 move/moveTo\n     * @see https://github.com/antvis/g/blob/master/packages/g-base/src/abstract/element.ts#L684-L689\n     */\n\n\n    this.setPosition = function () {\n      var parentInvertMatrix = mat4.create();\n      return function (element, position) {\n        var transform = element.transformable;\n        position = vec3.fromValues(position[0], position[1], position[2] || 0);\n\n        if (vec3.equals(_this.getPosition(element), position)) {\n          return;\n        }\n\n        transform.position = position;\n\n        if (element.parentNode === null || !element.parentNode.transformable) {\n          vec3.copy(transform.localPosition, position);\n        } else {\n          var parentTransform = element.parentNode.transformable;\n          mat4.copy(parentInvertMatrix, parentTransform.worldTransform);\n          mat4.invert(parentInvertMatrix, parentInvertMatrix);\n          vec3.transformMat4(transform.localPosition, position, parentInvertMatrix);\n        }\n\n        _this.dirtifyLocal(element, transform);\n      };\n    }();\n    /**\n     * translate in world space\n     *\n     * @example\n     * ```\n     * translate(x, y, z)\n     * translate(vec3(x, y, z))\n     * ```\n     *\n     * 对应 g 原版的 translate 2D\n     * @see https://github.com/antvis/g/blob/master/packages/g-base/src/abstract/element.ts#L665-L676\n     */\n\n\n    this.translate = function () {\n      var tr = vec3.create();\n      return function (element, translation, y, z) {\n        if (y === void 0) {\n          y = 0;\n        }\n\n        if (z === void 0) {\n          z = 0;\n        }\n\n        if (typeof translation === 'number') {\n          translation = vec3.fromValues(translation, y, z);\n        }\n\n        if (vec3.equals(translation, vec3.create())) {\n          return;\n        }\n\n        vec3.add(tr, _this.getPosition(element), translation);\n\n        _this.setPosition(element, tr);\n      };\n    }();\n\n    this.setRotation = function () {\n      var parentInvertRotation = quat.create();\n      return function (element, rotation, y, z, w) {\n        var transform = element.transformable;\n\n        if (typeof rotation === 'number') {\n          rotation = quat.fromValues(rotation, y, z, w);\n        }\n\n        if (element.parentNode === null || !element.parentNode.transformable) {\n          _this.setLocalRotation(element, rotation);\n        } else {\n          var parentRot = _this.getRotation(element.parentNode);\n\n          quat.copy(parentInvertRotation, parentRot);\n          quat.invert(parentInvertRotation, parentInvertRotation);\n          quat.multiply(transform.localRotation, parentInvertRotation, rotation);\n          quat.normalize(transform.localRotation, transform.localRotation);\n\n          _this.dirtifyLocal(element, transform);\n        }\n      };\n    };\n  }\n\n  DefaultSceneGraphService.prototype.matches = function (query, root) {\n    return this.sceneGraphSelectorFactory().is(query, root);\n  };\n\n  DefaultSceneGraphService.prototype.querySelector = function (query, root) {\n    return this.sceneGraphSelectorFactory().selectOne(query, root);\n  };\n\n  DefaultSceneGraphService.prototype.querySelectorAll = function (query, root) {\n    return this.sceneGraphSelectorFactory().selectAll(query, root); // .filter((node) => !node.shadow);\n  };\n\n  DefaultSceneGraphService.prototype.attach = function (child, parent, index) {\n    if (child.parentNode) {\n      this.detach(child);\n    }\n\n    child.parentNode = parent;\n\n    if (!isNil(index)) {\n      child.parentNode.childNodes.splice(index, 0, child);\n    } else {\n      child.parentNode.childNodes.push(child);\n    } // parent needs re-sort\n\n\n    var sortable = parent.sortable;\n\n    if (sortable) {\n      sortable.dirty = true;\n    } // this.updateGraphDepth(child);\n\n\n    var transform = child.transformable;\n\n    if (transform) {\n      this.dirtifyWorld(child, transform);\n    }\n\n    if (transform.frozen) {\n      this.unfreezeParentToRoot(child);\n    }\n  };\n\n  DefaultSceneGraphService.prototype.detach = function (child) {\n    if (child.parentNode) {\n      var transform = child.transformable; // if (transform) {\n      //   const worldTransform = this.getWorldTransform(child, transform);\n      //   mat4.getScaling(transform.localScale, worldTransform);\n      //   mat4.getTranslation(transform.localPosition, worldTransform);\n      //   mat4.getRotation(transform.localRotation, worldTransform);\n      //   transform.localDirtyFlag = true;\n      // }\n      // parent needs re-sort\n\n      var sortable = child.parentNode.sortable;\n\n      if (sortable) {\n        sortable.dirty = true;\n      }\n\n      var index = child.parentNode.childNodes.indexOf(child);\n\n      if (index > -1) {\n        child.parentNode.childNodes.splice(index, 1);\n      }\n\n      if (transform) {\n        this.dirtifyWorld(child, transform);\n      }\n\n      child.parentNode = null;\n    }\n  };\n\n  DefaultSceneGraphService.prototype.getOrigin = function (element) {\n    return element.transformable.origin;\n  };\n  /**\n   * same as pivot in Pixi.js\n   *\n   * @see https://stackoverflow.com/questions/40748452/how-to-change-css-transform-origin-but-preserve-transformation\n   */\n\n\n  DefaultSceneGraphService.prototype.setOrigin = function (element, origin, y, z) {\n    if (y === void 0) {\n      y = 0;\n    }\n\n    if (z === void 0) {\n      z = 0;\n    }\n\n    if (typeof origin === 'number') {\n      origin = vec3.fromValues(origin, y, z);\n    }\n\n    var transform = element.transformable;\n\n    if (vec3.equals(origin, transform.origin)) {\n      return;\n    }\n\n    var originVec = transform.origin; // const delta = vec3.subtract(vec3.create(), origin, originVec);\n    // vec3.add(transform.localPosition, transform.localPosition, delta);\n    // update origin\n\n    originVec[0] = origin[0];\n    originVec[1] = origin[1];\n    originVec[2] = origin[2] || 0;\n    this.dirtifyLocal(element, transform);\n  };\n  /**\n   * set euler angles(degrees) in local space\n   */\n\n\n  DefaultSceneGraphService.prototype.setLocalEulerAngles = function (element, degrees, y, z) {\n    if (y === void 0) {\n      y = 0;\n    }\n\n    if (z === void 0) {\n      z = 0;\n    }\n\n    if (typeof degrees === 'number') {\n      degrees = vec3.fromValues(degrees, y, z);\n    }\n\n    var transform = element.transformable;\n    quat.fromEuler(transform.localRotation, degrees[0], degrees[1], degrees[2]);\n    this.dirtifyLocal(element, transform);\n  };\n  /**\n   * move to position in local space\n   */\n\n\n  DefaultSceneGraphService.prototype.setLocalPosition = function (element, position) {\n    var transform = element.transformable;\n    position = vec3.fromValues(position[0], position[1], position[2] || 0);\n\n    if (vec3.equals(transform.localPosition, position)) {\n      return;\n    }\n\n    vec3.copy(transform.localPosition, position);\n    this.dirtifyLocal(element, transform);\n  };\n  /**\n   * scale in local space\n   */\n\n\n  DefaultSceneGraphService.prototype.scaleLocal = function (element, scaling) {\n    var transform = element.transformable;\n    vec3.multiply(transform.localScale, transform.localScale, vec3.fromValues(scaling[0], scaling[1], scaling[2] || 1));\n    this.dirtifyLocal(element, transform);\n  };\n\n  DefaultSceneGraphService.prototype.setLocalScale = function (element, scaling) {\n    var transform = element.transformable;\n    var updatedScaling = vec3.fromValues(scaling[0], scaling[1], scaling[2] || transform.localScale[2]);\n\n    if (vec3.equals(updatedScaling, transform.localScale)) {\n      return;\n    }\n\n    vec3.copy(transform.localScale, updatedScaling);\n    this.dirtifyLocal(element, transform);\n  };\n\n  DefaultSceneGraphService.prototype.setLocalRotation = function (element, rotation, y, z, w) {\n    if (typeof rotation === 'number') {\n      rotation = quat.fromValues(rotation, y, z, w);\n    }\n\n    var transform = element.transformable;\n    quat.copy(transform.localRotation, rotation);\n    this.dirtifyLocal(element, transform);\n  };\n\n  DefaultSceneGraphService.prototype.dirtifyLocal = function (element, transform) {\n    if (!transform.localDirtyFlag) {\n      transform.localDirtyFlag = true;\n\n      if (!transform.dirtyFlag) {\n        this.dirtifyWorld(element, transform);\n      }\n    }\n  };\n\n  DefaultSceneGraphService.prototype.dirtifyWorld = function (element, transform) {\n    if (!transform.dirtyFlag) {\n      this.unfreezeParentToRoot(element);\n    }\n\n    this.dirtifyWorldInternal(element, transform);\n    dirtifyToRoot(element, true);\n  };\n\n  DefaultSceneGraphService.prototype.getPosition = function (element) {\n    var transform = element.transformable;\n    return mat4.getTranslation(transform.position, this.getWorldTransform(element, transform));\n  };\n\n  DefaultSceneGraphService.prototype.getRotation = function (element) {\n    var transform = element.transformable;\n    return mat4.getRotation(transform.rotation, this.getWorldTransform(element, transform));\n  };\n\n  DefaultSceneGraphService.prototype.getScale = function (element) {\n    var transform = element.transformable;\n    return mat4.getScaling(transform.scaling, this.getWorldTransform(element, transform));\n  };\n\n  DefaultSceneGraphService.prototype.getWorldTransform = function (element, transform) {\n    if (transform === void 0) {\n      transform = element.transformable;\n    }\n\n    if (!transform.localDirtyFlag && !transform.dirtyFlag) {\n      return transform.worldTransform;\n    }\n\n    if (element.parentNode && element.parentNode.transformable) {\n      this.getWorldTransform(element.parentNode);\n    }\n\n    this.sync(element, transform);\n    return transform.worldTransform;\n  };\n\n  DefaultSceneGraphService.prototype.getLocalPosition = function (element) {\n    return element.transformable.localPosition;\n  };\n\n  DefaultSceneGraphService.prototype.getLocalRotation = function (element) {\n    return element.transformable.localRotation;\n  };\n\n  DefaultSceneGraphService.prototype.getLocalScale = function (element) {\n    return element.transformable.localScale;\n  };\n\n  DefaultSceneGraphService.prototype.getLocalTransform = function (element) {\n    var transform = element.transformable;\n\n    if (transform.localDirtyFlag) {\n      mat4.fromRotationTranslationScaleOrigin(transform.localTransform, transform.localRotation, transform.localPosition, transform.localScale, transform.origin);\n      transform.localDirtyFlag = false;\n    }\n\n    return transform.localTransform;\n  };\n\n  DefaultSceneGraphService.prototype.resetLocalTransform = function (element) {\n    this.setLocalScale(element, [1, 1, 1]);\n    this.setLocalPosition(element, [0, 0, 0]);\n    this.setLocalEulerAngles(element, [0, 0, 0]);\n  };\n\n  DefaultSceneGraphService.prototype.getTransformedGeometryBounds = function (element, render) {\n    if (render === void 0) {\n      render = false;\n    }\n\n    var bounds = this.getGeometryBounds(element, render);\n\n    if (!AABB.isEmpty(bounds)) {\n      var aabb = new AABB();\n      aabb.setFromTransformedAABB(bounds, this.getWorldTransform(element));\n      return aabb;\n    } else {\n      return null;\n    }\n  };\n  /**\n   * won't account for children\n   */\n\n\n  DefaultSceneGraphService.prototype.getGeometryBounds = function (element, render) {\n    if (render === void 0) {\n      render = false;\n    }\n\n    var geometry = element.geometry;\n    var bounds = render ? geometry.renderBounds : geometry.contentBounds || null;\n    return bounds && new AABB(bounds.center, bounds.halfExtents) || new AABB();\n  };\n  /**\n   * account for children in world space\n   */\n\n\n  DefaultSceneGraphService.prototype.getBounds = function (element, render) {\n    var _this = this;\n\n    if (render === void 0) {\n      render = false;\n    }\n\n    var renderable = element.renderable;\n\n    if (!renderable.boundsDirty && !render && renderable.bounds) {\n      return renderable.bounds;\n    }\n\n    if (!renderable.renderBoundsDirty && render && renderable.renderBounds) {\n      return renderable.renderBounds;\n    } // reset with geometry's aabb\n\n\n    var aabb = this.getTransformedGeometryBounds(element, render); // merge children's aabbs\n\n    var children = element.childNodes;\n    children.forEach(function (child) {\n      var childBounds = _this.getBounds(child, render);\n\n      if (childBounds) {\n        if (!aabb) {\n          aabb = new AABB();\n          aabb.update(childBounds.center, childBounds.halfExtents);\n        } else {\n          aabb.add(childBounds);\n        }\n      }\n    }); // account for clip path\n\n    var clipPath = element.style.clipPath;\n\n    if (clipPath) {\n      var clipPathBounds = this.getTransformedGeometryBounds(clipPath, true);\n      var transformParentBounds = void 0;\n\n      if (clipPathBounds) {\n        transformParentBounds = new AABB(); // intersect with original geometry\n\n        transformParentBounds.setFromTransformedAABB(clipPathBounds, this.getWorldTransform(element));\n      }\n\n      if (!aabb) {\n        aabb = transformParentBounds;\n      } else if (transformParentBounds) {\n        aabb = transformParentBounds.intersection(aabb);\n      }\n    }\n\n    if (aabb) {\n      if (render) {\n        renderable.renderBounds = aabb;\n      } else {\n        renderable.bounds = aabb;\n      }\n    }\n\n    if (render) {\n      renderable.renderBoundsDirty = false;\n    } else {\n      renderable.boundsDirty = false;\n    }\n\n    return aabb || new AABB();\n  };\n  /**\n   * account for children in local space\n   */\n\n\n  DefaultSceneGraphService.prototype.getLocalBounds = function (element) {\n    if (element.parentNode) {\n      var parentInvert = mat4.create();\n\n      if (element.parentNode.transformable) {\n        parentInvert = mat4.invert(mat4.create(), this.getWorldTransform(element.parentNode));\n      }\n\n      var bounds = this.getBounds(element);\n\n      if (!AABB.isEmpty(bounds)) {\n        var localBounds = new AABB();\n        localBounds.setFromTransformedAABB(bounds, parentInvert);\n        return localBounds;\n      }\n    }\n\n    return this.getBounds(element);\n  };\n\n  DefaultSceneGraphService.prototype.getBoundingClientRect = function (element) {\n    var _a, _b;\n\n    var aabb;\n    var bounds = this.getGeometryBounds(element);\n\n    if (!AABB.isEmpty(bounds)) {\n      aabb = new AABB(); // apply transformation to aabb\n\n      aabb.setFromTransformedAABB(bounds, this.getWorldTransform(element));\n    } // calc context's offset\n\n\n    var bbox = (_b = (_a = element.ownerDocument) === null || _a === void 0 ? void 0 : _a.defaultView) === null || _b === void 0 ? void 0 : _b.getContextService().getBoundingClientRect();\n\n    if (aabb) {\n      var _c = __read(aabb.getMin(), 2),\n          left = _c[0],\n          top_1 = _c[1];\n\n      var _d = __read(aabb.getMax(), 2),\n          right = _d[0],\n          bottom = _d[1];\n\n      return new Rectangle(left + ((bbox === null || bbox === void 0 ? void 0 : bbox.left) || 0), top_1 + ((bbox === null || bbox === void 0 ? void 0 : bbox.top) || 0), right - left, bottom - top_1);\n    }\n\n    return new Rectangle((bbox === null || bbox === void 0 ? void 0 : bbox.left) || 0, (bbox === null || bbox === void 0 ? void 0 : bbox.top) || 0, 0, 0);\n  };\n\n  DefaultSceneGraphService.prototype.dirtifyWorldInternal = function (element, transform) {\n    var _this = this;\n\n    if (!transform.dirtyFlag) {\n      transform.dirtyFlag = true;\n      transform.frozen = false;\n      element.childNodes.forEach(function (child) {\n        var childTransform = child.transformable;\n\n        if (!childTransform.dirtyFlag) {\n          _this.dirtifyWorldInternal(child, childTransform);\n        }\n      });\n      var renderable = element.renderable;\n\n      if (renderable) {\n        renderable.renderBoundsDirty = true;\n        renderable.boundsDirty = true;\n        renderable.dirty = true;\n      }\n\n      element.dispatchEvent(new MutationEvent(ElementEvent.ATTR_MODIFIED, element, null, null, 'modelMatrix', MutationEvent.MODIFICATION, null, null));\n    }\n  };\n\n  DefaultSceneGraphService.prototype.syncHierarchy = function (element) {\n    var transform = element.transformable;\n\n    if (transform.frozen) {\n      return;\n    }\n\n    transform.frozen = true;\n\n    if (transform.localDirtyFlag || transform.dirtyFlag) {\n      this.sync(element, transform);\n    }\n\n    var children = element.childNodes;\n\n    for (var i = 0; i < children.length; i++) {\n      this.syncHierarchy(children[i]);\n    }\n  };\n\n  DefaultSceneGraphService.prototype.sync = function (element, transform) {\n    if (transform.localDirtyFlag) {\n      mat4.fromRotationTranslationScaleOrigin(transform.localTransform, transform.localRotation, transform.localPosition, transform.localScale, transform.origin);\n      transform.localDirtyFlag = false;\n    }\n\n    if (transform.dirtyFlag) {\n      var parent_2 = element.parentNode;\n      var parentTransform = parent_2 && parent_2.transformable;\n\n      if (parent_2 === null || !parentTransform) {\n        mat4.copy(transform.worldTransform, transform.localTransform);\n      } else {\n        // TODO: should we support scale compensation?\n        // @see https://github.com/playcanvas/engine/issues/1077#issuecomment-359765557\n        mat4.multiply(transform.worldTransform, parentTransform.worldTransform, transform.localTransform);\n      }\n\n      transform.dirtyFlag = false;\n    }\n  };\n\n  DefaultSceneGraphService.prototype.unfreezeParentToRoot = function (child) {\n    var p = child.parentNode;\n\n    while (p) {\n      var transform = p.transformable;\n\n      if (transform) {\n        transform.frozen = false;\n      }\n\n      p = p.parentNode;\n    }\n  };\n\n  __decorate([inject(SceneGraphSelectorFactory), __metadata(\"design:type\", Function)], DefaultSceneGraphService.prototype, \"sceneGraphSelectorFactory\", void 0);\n\n  DefaultSceneGraphService = __decorate([singleton()], DefaultSceneGraphService);\n  return DefaultSceneGraphService;\n}();\n\nexport { DefaultSceneGraphService };"]},"metadata":{},"sourceType":"module"}