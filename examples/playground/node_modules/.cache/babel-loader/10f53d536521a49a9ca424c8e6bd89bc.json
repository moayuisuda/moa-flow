{"ast":null,"code":"import { __read } from \"tslib\";\nimport { isArray, isNumber } from 'lodash-es';\nimport { mat3, mat4, vec3 } from 'gl-matrix';\nexport function getAngle(angle) {\n  if (angle === undefined) {\n    return 0;\n  } else if (angle > 360 || angle < -360) {\n    return angle % 360;\n  }\n\n  return angle;\n}\nexport function createVec3(x, y, z) {\n  if (y === void 0) {\n    y = 0;\n  }\n\n  if (z === void 0) {\n    z = 0;\n  }\n\n  if (isNumber(x)) {\n    return vec3.fromValues(x, y, z);\n  }\n\n  if (isArray(x) && x.length === 3) {\n    return vec3.clone(x);\n  }\n\n  return vec3.fromValues(x[0], x[1] || y, x[2] || z);\n}\nexport function deg2rad(deg) {\n  return deg * (Math.PI / 180);\n}\nexport function rad2deg(rad) {\n  return rad * (180 / Math.PI);\n}\nexport function grad2deg(grads) {\n  grads = grads % 400;\n\n  if (grads < 0) {\n    grads += 400;\n  }\n\n  return grads / 400 * 360;\n}\nexport function deg2turn(deg) {\n  return deg / 360;\n}\nexport function turn2deg(turn) {\n  return 360 * turn;\n}\n/**\n * decompose mat3\n * extract translation/scaling/rotation(in radians)\n *\n * gl-matrix didn't provide them for mat3, but we can\n * @see https://math.stackexchange.com/a/1463487\n * @see https://math.stackexchange.com/a/417813\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m21 = mat[3];\n  var m22 = mat[4];\n  out[0] = Math.hypot(m11, m12);\n  out[1] = Math.hypot(m21, m22);\n  return out;\n}\nexport function getTranslation(out, mat) {\n  out[0] = mat[6];\n  out[1] = mat[7];\n  return out;\n}\nexport function getRotationInRadians(mat) {\n  return Math.atan2(mat[1], mat[4]);\n}\n\nfunction getEulerFromQuat(out, quat) {\n  var x = quat[0];\n  var y = quat[1];\n  var z = quat[2];\n  var w = quat[3];\n  var x2 = x * x;\n  var y2 = y * y;\n  var z2 = z * z;\n  var w2 = w * w;\n  var unit = x2 + y2 + z2 + w2;\n  var test = x * w - y * z;\n\n  if (test > 0.499995 * unit) {\n    // TODO: Use glmatrix.EPSILON\n    // singularity at the north pole\n    out[0] = Math.PI / 2;\n    out[1] = 2 * Math.atan2(y, x);\n    out[2] = 0;\n  } else if (test < -0.499995 * unit) {\n    //TODO: Use glmatrix.EPSILON\n    // singularity at the south pole\n    out[0] = -Math.PI / 2;\n    out[1] = 2 * Math.atan2(y, x);\n    out[2] = 0;\n  } else {\n    out[0] = Math.asin(2 * (x * z - w * y));\n    out[1] = Math.atan2(2 * (x * w + y * z), 1 - 2 * (z2 + w2));\n    out[2] = Math.atan2(2 * (x * y + z * w), 1 - 2 * (y2 + z2));\n  } // TODO: Return them as degrees and not as radians\n\n\n  return out;\n}\n\nfunction getEulerFromMat4(out, m) {\n  var x;\n  var z;\n  var halfPi = Math.PI * 0.5;\n\n  var _a = __read(mat4.getScaling(vec3.create(), m), 3),\n      sx = _a[0],\n      sy = _a[1],\n      sz = _a[2];\n\n  var y = Math.asin(-m[2] / sx);\n\n  if (y < halfPi) {\n    if (y > -halfPi) {\n      x = Math.atan2(m[6] / sy, m[10] / sz);\n      z = Math.atan2(m[1] / sx, m[0] / sx);\n    } else {\n      // Not a unique solution\n      z = 0;\n      x = -Math.atan2(m[4] / sy, m[5] / sy);\n    }\n  } else {\n    // Not a unique solution\n    z = 0;\n    x = Math.atan2(m[4] / sy, m[5] / sy);\n  }\n\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * @see https://github.com/toji/gl-matrix/issues/329\n * @see https://doc.babylonjs.com/divingDeeper/mesh/transforms/center_origin/rotation_conventions\n */\n\n\nexport function getEuler(out, quat) {\n  if (quat.length === 16) {\n    return getEulerFromMat4(out, quat);\n  } else {\n    return getEulerFromQuat(out, quat);\n  }\n}\nexport function fromRotationTranslationScale(rotation, x, y, scaleX, scaleY) {\n  var cos = Math.cos(rotation);\n  var sin = Math.sin(rotation);\n  return mat3.fromValues(scaleX * cos, scaleY * sin, 0, -scaleX * sin, scaleY * cos, 0, x, y, 1);\n}\nexport function makePerspective(out, left, right, top, bottom, near, far) {\n  var x = 2 * near / (right - left);\n  var y = 2 * near / (top - bottom);\n  var a = (right + left) / (right - left);\n  var b = (top + bottom) / (top - bottom);\n  var c = -(far + near) / (far - near);\n  var d = -2 * far * near / (far - near);\n  out[0] = x;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = y;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = a;\n  out[9] = b;\n  out[10] = c;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = d;\n  out[15] = 0;\n  return out;\n}\nexport function decompose(mat) {\n  var row0x = mat[0];\n  var row0y = mat[3];\n  var row1x = mat[1];\n  var row1y = mat[4]; // decompose 3x3 matrix\n  // @see https://www.w3.org/TR/css-transforms-1/#decomposing-a-2d-matrix\n\n  var scalingX = Math.sqrt(row0x * row0x + row0y * row0y);\n  var scalingY = Math.sqrt(row1x * row1x + row1y * row1y); // If determinant is negative, one axis was flipped.\n\n  var determinant = row0x * row1y - row0y * row1x;\n\n  if (determinant < 0) {\n    // Flip axis with minimum unit vector dot product.\n    if (row0x < row1y) {\n      scalingX = -scalingX;\n    } else {\n      scalingY = -scalingY;\n    }\n  } // Renormalize matrix to remove scale.\n\n\n  if (scalingX) {\n    row0x *= 1 / scalingX;\n    row0y *= 1 / scalingX;\n  }\n\n  if (scalingY) {\n    row1x *= 1 / scalingY;\n    row1y *= 1 / scalingY;\n  } // Compute rotation and renormalize matrix.\n\n\n  var angle = Math.atan2(row0y, row0x);\n  return [mat[6], mat[7], scalingX, scalingY, angle];\n}","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/@antv/g/es/utils/math.js"],"names":["__read","isArray","isNumber","mat3","mat4","vec3","getAngle","angle","undefined","createVec3","x","y","z","fromValues","length","clone","deg2rad","deg","Math","PI","rad2deg","rad","grad2deg","grads","deg2turn","turn2deg","turn","getScaling","out","mat","m11","m12","m21","m22","hypot","getTranslation","getRotationInRadians","atan2","getEulerFromQuat","quat","w","x2","y2","z2","w2","unit","test","asin","getEulerFromMat4","m","halfPi","_a","create","sx","sy","sz","getEuler","fromRotationTranslationScale","rotation","scaleX","scaleY","cos","sin","makePerspective","left","right","top","bottom","near","far","a","b","c","d","decompose","row0x","row0y","row1x","row1y","scalingX","sqrt","scalingY","determinant"],"mappings":"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","sourcesContent":["import { __read } from \"tslib\";\nimport { isArray, isNumber } from 'lodash-es';\nimport { mat3, mat4, vec3 } from 'gl-matrix';\nexport function getAngle(angle) {\n  if (angle === undefined) {\n    return 0;\n  } else if (angle > 360 || angle < -360) {\n    return angle % 360;\n  }\n\n  return angle;\n}\nexport function createVec3(x, y, z) {\n  if (y === void 0) {\n    y = 0;\n  }\n\n  if (z === void 0) {\n    z = 0;\n  }\n\n  if (isNumber(x)) {\n    return vec3.fromValues(x, y, z);\n  }\n\n  if (isArray(x) && x.length === 3) {\n    return vec3.clone(x);\n  }\n\n  return vec3.fromValues(x[0], x[1] || y, x[2] || z);\n}\nexport function deg2rad(deg) {\n  return deg * (Math.PI / 180);\n}\nexport function rad2deg(rad) {\n  return rad * (180 / Math.PI);\n}\nexport function grad2deg(grads) {\n  grads = grads % 400;\n\n  if (grads < 0) {\n    grads += 400;\n  }\n\n  return grads / 400 * 360;\n}\nexport function deg2turn(deg) {\n  return deg / 360;\n}\nexport function turn2deg(turn) {\n  return 360 * turn;\n}\n/**\n * decompose mat3\n * extract translation/scaling/rotation(in radians)\n *\n * gl-matrix didn't provide them for mat3, but we can\n * @see https://math.stackexchange.com/a/1463487\n * @see https://math.stackexchange.com/a/417813\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m21 = mat[3];\n  var m22 = mat[4];\n  out[0] = Math.hypot(m11, m12);\n  out[1] = Math.hypot(m21, m22);\n  return out;\n}\nexport function getTranslation(out, mat) {\n  out[0] = mat[6];\n  out[1] = mat[7];\n  return out;\n}\nexport function getRotationInRadians(mat) {\n  return Math.atan2(mat[1], mat[4]);\n}\n\nfunction getEulerFromQuat(out, quat) {\n  var x = quat[0];\n  var y = quat[1];\n  var z = quat[2];\n  var w = quat[3];\n  var x2 = x * x;\n  var y2 = y * y;\n  var z2 = z * z;\n  var w2 = w * w;\n  var unit = x2 + y2 + z2 + w2;\n  var test = x * w - y * z;\n\n  if (test > 0.499995 * unit) {\n    // TODO: Use glmatrix.EPSILON\n    // singularity at the north pole\n    out[0] = Math.PI / 2;\n    out[1] = 2 * Math.atan2(y, x);\n    out[2] = 0;\n  } else if (test < -0.499995 * unit) {\n    //TODO: Use glmatrix.EPSILON\n    // singularity at the south pole\n    out[0] = -Math.PI / 2;\n    out[1] = 2 * Math.atan2(y, x);\n    out[2] = 0;\n  } else {\n    out[0] = Math.asin(2 * (x * z - w * y));\n    out[1] = Math.atan2(2 * (x * w + y * z), 1 - 2 * (z2 + w2));\n    out[2] = Math.atan2(2 * (x * y + z * w), 1 - 2 * (y2 + z2));\n  } // TODO: Return them as degrees and not as radians\n\n\n  return out;\n}\n\nfunction getEulerFromMat4(out, m) {\n  var x;\n  var z;\n  var halfPi = Math.PI * 0.5;\n\n  var _a = __read(mat4.getScaling(vec3.create(), m), 3),\n      sx = _a[0],\n      sy = _a[1],\n      sz = _a[2];\n\n  var y = Math.asin(-m[2] / sx);\n\n  if (y < halfPi) {\n    if (y > -halfPi) {\n      x = Math.atan2(m[6] / sy, m[10] / sz);\n      z = Math.atan2(m[1] / sx, m[0] / sx);\n    } else {\n      // Not a unique solution\n      z = 0;\n      x = -Math.atan2(m[4] / sy, m[5] / sy);\n    }\n  } else {\n    // Not a unique solution\n    z = 0;\n    x = Math.atan2(m[4] / sy, m[5] / sy);\n  }\n\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * @see https://github.com/toji/gl-matrix/issues/329\n * @see https://doc.babylonjs.com/divingDeeper/mesh/transforms/center_origin/rotation_conventions\n */\n\n\nexport function getEuler(out, quat) {\n  if (quat.length === 16) {\n    return getEulerFromMat4(out, quat);\n  } else {\n    return getEulerFromQuat(out, quat);\n  }\n}\nexport function fromRotationTranslationScale(rotation, x, y, scaleX, scaleY) {\n  var cos = Math.cos(rotation);\n  var sin = Math.sin(rotation);\n  return mat3.fromValues(scaleX * cos, scaleY * sin, 0, -scaleX * sin, scaleY * cos, 0, x, y, 1);\n}\nexport function makePerspective(out, left, right, top, bottom, near, far) {\n  var x = 2 * near / (right - left);\n  var y = 2 * near / (top - bottom);\n  var a = (right + left) / (right - left);\n  var b = (top + bottom) / (top - bottom);\n  var c = -(far + near) / (far - near);\n  var d = -2 * far * near / (far - near);\n  out[0] = x;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = y;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = a;\n  out[9] = b;\n  out[10] = c;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = d;\n  out[15] = 0;\n  return out;\n}\nexport function decompose(mat) {\n  var row0x = mat[0];\n  var row0y = mat[3];\n  var row1x = mat[1];\n  var row1y = mat[4]; // decompose 3x3 matrix\n  // @see https://www.w3.org/TR/css-transforms-1/#decomposing-a-2d-matrix\n\n  var scalingX = Math.sqrt(row0x * row0x + row0y * row0y);\n  var scalingY = Math.sqrt(row1x * row1x + row1y * row1y); // If determinant is negative, one axis was flipped.\n\n  var determinant = row0x * row1y - row0y * row1x;\n\n  if (determinant < 0) {\n    // Flip axis with minimum unit vector dot product.\n    if (row0x < row1y) {\n      scalingX = -scalingX;\n    } else {\n      scalingY = -scalingY;\n    }\n  } // Renormalize matrix to remove scale.\n\n\n  if (scalingX) {\n    row0x *= 1 / scalingX;\n    row0y *= 1 / scalingX;\n  }\n\n  if (scalingY) {\n    row1x *= 1 / scalingY;\n    row1y *= 1 / scalingY;\n  } // Compute rotation and renormalize matrix.\n\n\n  var angle = Math.atan2(row0y, row0x);\n  return [mat[6], mat[7], scalingX, scalingY, angle];\n}"]},"metadata":{},"sourceType":"module"}