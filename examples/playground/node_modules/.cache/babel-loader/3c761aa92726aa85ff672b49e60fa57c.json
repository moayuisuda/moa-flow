{"ast":null,"code":"import { __decorate, __metadata, __values } from \"tslib\";\nimport { CanvasConfig, DisplayObjectPool, RenderingPluginContribution, OffscreenCanvasCreator, Point } from '@antv/g';\nimport { PathGeneratorFactory, RBushRoot } from '@antv/g-plugin-canvas-renderer';\nimport { mat4, vec3 } from 'gl-matrix';\nimport { inject, singleton, Syringe } from 'mana-syringe';\nexport var PointInPathPickerFactory = Syringe.defineToken('PointInPathPicker');\n/**\n * pick shape(s) with Mouse/Touch event\n *\n * 1. find AABB with r-tree\n * 2. do math calculation with geometry in an accurate way\n */\n\nvar CanvasPickerPlugin =\n/** @class */\nfunction () {\n  function CanvasPickerPlugin() {\n    var _this = this;\n\n    this.isHit = function (displayObject, position, worldTransform) {\n      // use picker for current shape's type\n      var pick = _this.pointInPathPickerFactory(displayObject.nodeName);\n\n      if (pick) {\n        // invert with world matrix\n        var invertWorldMat = mat4.invert(mat4.create(), worldTransform); // transform client position to local space, do picking in local space\n\n        var localPosition = vec3.transformMat4(vec3.create(), vec3.fromValues(position[0], position[1], 0), invertWorldMat); // account for anchor\n\n        var halfExtents = displayObject.getGeometryBounds().halfExtents;\n        var anchor = displayObject.parsedStyle.anchor;\n        localPosition[0] += (anchor && anchor[0].value || 0) * halfExtents[0] * 2;\n        localPosition[1] += (anchor && anchor[1].value || 0) * halfExtents[1] * 2;\n\n        if (pick(displayObject, new Point(localPosition[0], localPosition[1]), _this.isPointInPath)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n    /**\n     * use native picking method\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/isPointInPath\n     */\n\n\n    this.isPointInPath = function (displayObject, position) {\n      var context = _this.offscreenCanvas.getOrCreateContext(_this.canvasConfig.offscreenCanvas);\n\n      var generatePath = _this.pathGeneratorFactory(displayObject.nodeName);\n\n      if (generatePath) {\n        generatePath(context, displayObject.parsedStyle);\n      }\n\n      return context.isPointInPath(position.x, position.y);\n    };\n  }\n\n  CanvasPickerPlugin_1 = CanvasPickerPlugin;\n\n  CanvasPickerPlugin.prototype.apply = function (renderingService) {\n    var _this = this;\n\n    renderingService.hooks.pick.tap(CanvasPickerPlugin_1.tag, function (result) {\n      var e_1, _a;\n\n      var topmost = result.topmost,\n          _b = result.position,\n          x = _b.x,\n          y = _b.y; // position in world space\n\n      var position = vec3.fromValues(x, y, 0); // query by AABB first with spatial index(r-tree)\n\n      var rBushNodes = _this.rBush.search({\n        minX: position[0],\n        minY: position[1],\n        maxX: position[0],\n        maxY: position[1]\n      });\n\n      var queriedIds = rBushNodes.map(function (node) {\n        return node.id;\n      });\n      var hitTestList = [];\n      rBushNodes.forEach(function (_a) {\n        var id = _a.id;\n\n        var displayObject = _this.displayObjectPool.getByEntity(id);\n\n        if (displayObject.isVisible() && !displayObject.isCulled() && displayObject.isInteractive()) {\n          // parent is not included, eg. parent is clipped\n          if (displayObject.parentNode && queriedIds.indexOf(displayObject.parentNode.entity) === -1) {\n            return;\n          }\n\n          hitTestList.push(displayObject);\n        }\n      }); // find group with max z-index\n\n      hitTestList.sort(function (a, b) {\n        return b.sortable.renderOrder - a.sortable.renderOrder;\n      });\n      var pickedDisplayObjects = [];\n\n      try {\n        for (var hitTestList_1 = __values(hitTestList), hitTestList_1_1 = hitTestList_1.next(); !hitTestList_1_1.done; hitTestList_1_1 = hitTestList_1.next()) {\n          var displayObject = hitTestList_1_1.value; // test with clip path\n\n          var clipPath = displayObject.parsedStyle.clipPath;\n          var objectToTest = clipPath || displayObject;\n          var worldTransform = displayObject.getWorldTransform(); // clipped's world matrix * clipPath's local matrix\n\n          if (clipPath) {\n            worldTransform = mat4.multiply(mat4.create(), worldTransform, clipPath.getLocalTransform());\n          }\n\n          if (_this.isHit(objectToTest, position, worldTransform)) {\n            if (topmost) {\n              result.picked = [displayObject];\n              return result;\n            } else {\n              pickedDisplayObjects.push(displayObject);\n            }\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (hitTestList_1_1 && !hitTestList_1_1.done && (_a = hitTestList_1.return)) _a.call(hitTestList_1);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n\n      result.picked = pickedDisplayObjects;\n      return result;\n    });\n  };\n\n  var CanvasPickerPlugin_1;\n  CanvasPickerPlugin.tag = 'CanvasPickerPlugin';\n\n  __decorate([inject(DisplayObjectPool), __metadata(\"design:type\", DisplayObjectPool)], CanvasPickerPlugin.prototype, \"displayObjectPool\", void 0);\n\n  __decorate([inject(CanvasConfig), __metadata(\"design:type\", Object)], CanvasPickerPlugin.prototype, \"canvasConfig\", void 0);\n\n  __decorate([inject(OffscreenCanvasCreator), __metadata(\"design:type\", OffscreenCanvasCreator)], CanvasPickerPlugin.prototype, \"offscreenCanvas\", void 0);\n\n  __decorate([inject(RBushRoot), __metadata(\"design:type\", Function)], CanvasPickerPlugin.prototype, \"rBush\", void 0);\n\n  __decorate([inject(PathGeneratorFactory), __metadata(\"design:type\", Function)], CanvasPickerPlugin.prototype, \"pathGeneratorFactory\", void 0);\n\n  __decorate([inject(PointInPathPickerFactory), __metadata(\"design:type\", Function)], CanvasPickerPlugin.prototype, \"pointInPathPickerFactory\", void 0);\n\n  CanvasPickerPlugin = CanvasPickerPlugin_1 = __decorate([singleton({\n    contrib: RenderingPluginContribution\n  })], CanvasPickerPlugin);\n  return CanvasPickerPlugin;\n}();\n\nexport { CanvasPickerPlugin };","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/@antv/g-plugin-canvas-picker/es/CanvasPickerPlugin.js"],"names":["__decorate","__metadata","__values","CanvasConfig","DisplayObjectPool","RenderingPluginContribution","OffscreenCanvasCreator","Point","PathGeneratorFactory","RBushRoot","mat4","vec3","inject","singleton","Syringe","PointInPathPickerFactory","defineToken","CanvasPickerPlugin","_this","isHit","displayObject","position","worldTransform","pick","pointInPathPickerFactory","nodeName","invertWorldMat","invert","create","localPosition","transformMat4","fromValues","halfExtents","getGeometryBounds","anchor","parsedStyle","value","isPointInPath","context","offscreenCanvas","getOrCreateContext","canvasConfig","generatePath","pathGeneratorFactory","x","y","CanvasPickerPlugin_1","prototype","apply","renderingService","hooks","tap","tag","result","e_1","_a","topmost","_b","rBushNodes","rBush","search","minX","minY","maxX","maxY","queriedIds","map","node","id","hitTestList","forEach","displayObjectPool","getByEntity","isVisible","isCulled","isInteractive","parentNode","indexOf","entity","push","sort","a","b","sortable","renderOrder","pickedDisplayObjects","hitTestList_1","hitTestList_1_1","next","done","clipPath","objectToTest","getWorldTransform","multiply","getLocalTransform","picked","e_1_1","error","return","call","Object","Function","contrib"],"mappings":"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","sourcesContent":["import { __decorate, __metadata, __values } from \"tslib\";\nimport { CanvasConfig, DisplayObjectPool, RenderingPluginContribution, OffscreenCanvasCreator, Point } from '@antv/g';\nimport { PathGeneratorFactory, RBushRoot } from '@antv/g-plugin-canvas-renderer';\nimport { mat4, vec3 } from 'gl-matrix';\nimport { inject, singleton, Syringe } from 'mana-syringe';\nexport var PointInPathPickerFactory = Syringe.defineToken('PointInPathPicker');\n/**\n * pick shape(s) with Mouse/Touch event\n *\n * 1. find AABB with r-tree\n * 2. do math calculation with geometry in an accurate way\n */\n\nvar CanvasPickerPlugin =\n/** @class */\nfunction () {\n  function CanvasPickerPlugin() {\n    var _this = this;\n\n    this.isHit = function (displayObject, position, worldTransform) {\n      // use picker for current shape's type\n      var pick = _this.pointInPathPickerFactory(displayObject.nodeName);\n\n      if (pick) {\n        // invert with world matrix\n        var invertWorldMat = mat4.invert(mat4.create(), worldTransform); // transform client position to local space, do picking in local space\n\n        var localPosition = vec3.transformMat4(vec3.create(), vec3.fromValues(position[0], position[1], 0), invertWorldMat); // account for anchor\n\n        var halfExtents = displayObject.getGeometryBounds().halfExtents;\n        var anchor = displayObject.parsedStyle.anchor;\n        localPosition[0] += (anchor && anchor[0].value || 0) * halfExtents[0] * 2;\n        localPosition[1] += (anchor && anchor[1].value || 0) * halfExtents[1] * 2;\n\n        if (pick(displayObject, new Point(localPosition[0], localPosition[1]), _this.isPointInPath)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n    /**\n     * use native picking method\n     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/isPointInPath\n     */\n\n\n    this.isPointInPath = function (displayObject, position) {\n      var context = _this.offscreenCanvas.getOrCreateContext(_this.canvasConfig.offscreenCanvas);\n\n      var generatePath = _this.pathGeneratorFactory(displayObject.nodeName);\n\n      if (generatePath) {\n        generatePath(context, displayObject.parsedStyle);\n      }\n\n      return context.isPointInPath(position.x, position.y);\n    };\n  }\n\n  CanvasPickerPlugin_1 = CanvasPickerPlugin;\n\n  CanvasPickerPlugin.prototype.apply = function (renderingService) {\n    var _this = this;\n\n    renderingService.hooks.pick.tap(CanvasPickerPlugin_1.tag, function (result) {\n      var e_1, _a;\n\n      var topmost = result.topmost,\n          _b = result.position,\n          x = _b.x,\n          y = _b.y; // position in world space\n\n      var position = vec3.fromValues(x, y, 0); // query by AABB first with spatial index(r-tree)\n\n      var rBushNodes = _this.rBush.search({\n        minX: position[0],\n        minY: position[1],\n        maxX: position[0],\n        maxY: position[1]\n      });\n\n      var queriedIds = rBushNodes.map(function (node) {\n        return node.id;\n      });\n      var hitTestList = [];\n      rBushNodes.forEach(function (_a) {\n        var id = _a.id;\n\n        var displayObject = _this.displayObjectPool.getByEntity(id);\n\n        if (displayObject.isVisible() && !displayObject.isCulled() && displayObject.isInteractive()) {\n          // parent is not included, eg. parent is clipped\n          if (displayObject.parentNode && queriedIds.indexOf(displayObject.parentNode.entity) === -1) {\n            return;\n          }\n\n          hitTestList.push(displayObject);\n        }\n      }); // find group with max z-index\n\n      hitTestList.sort(function (a, b) {\n        return b.sortable.renderOrder - a.sortable.renderOrder;\n      });\n      var pickedDisplayObjects = [];\n\n      try {\n        for (var hitTestList_1 = __values(hitTestList), hitTestList_1_1 = hitTestList_1.next(); !hitTestList_1_1.done; hitTestList_1_1 = hitTestList_1.next()) {\n          var displayObject = hitTestList_1_1.value; // test with clip path\n\n          var clipPath = displayObject.parsedStyle.clipPath;\n          var objectToTest = clipPath || displayObject;\n          var worldTransform = displayObject.getWorldTransform(); // clipped's world matrix * clipPath's local matrix\n\n          if (clipPath) {\n            worldTransform = mat4.multiply(mat4.create(), worldTransform, clipPath.getLocalTransform());\n          }\n\n          if (_this.isHit(objectToTest, position, worldTransform)) {\n            if (topmost) {\n              result.picked = [displayObject];\n              return result;\n            } else {\n              pickedDisplayObjects.push(displayObject);\n            }\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (hitTestList_1_1 && !hitTestList_1_1.done && (_a = hitTestList_1.return)) _a.call(hitTestList_1);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n\n      result.picked = pickedDisplayObjects;\n      return result;\n    });\n  };\n\n  var CanvasPickerPlugin_1;\n  CanvasPickerPlugin.tag = 'CanvasPickerPlugin';\n\n  __decorate([inject(DisplayObjectPool), __metadata(\"design:type\", DisplayObjectPool)], CanvasPickerPlugin.prototype, \"displayObjectPool\", void 0);\n\n  __decorate([inject(CanvasConfig), __metadata(\"design:type\", Object)], CanvasPickerPlugin.prototype, \"canvasConfig\", void 0);\n\n  __decorate([inject(OffscreenCanvasCreator), __metadata(\"design:type\", OffscreenCanvasCreator)], CanvasPickerPlugin.prototype, \"offscreenCanvas\", void 0);\n\n  __decorate([inject(RBushRoot), __metadata(\"design:type\", Function)], CanvasPickerPlugin.prototype, \"rBush\", void 0);\n\n  __decorate([inject(PathGeneratorFactory), __metadata(\"design:type\", Function)], CanvasPickerPlugin.prototype, \"pathGeneratorFactory\", void 0);\n\n  __decorate([inject(PointInPathPickerFactory), __metadata(\"design:type\", Function)], CanvasPickerPlugin.prototype, \"pointInPathPickerFactory\", void 0);\n\n  CanvasPickerPlugin = CanvasPickerPlugin_1 = __decorate([singleton({\n    contrib: RenderingPluginContribution\n  })], CanvasPickerPlugin);\n  return CanvasPickerPlugin;\n}();\n\nexport { CanvasPickerPlugin };"]},"metadata":{},"sourceType":"module"}