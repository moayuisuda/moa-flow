{"ast":null,"code":"import { __read, __spreadArray } from \"tslib\";\nimport { getEasingFunction, convertToDash } from './custom-easing';\nimport { bezier } from './bezier-easing';\nexport var linear = function linear(x) {\n  return x;\n};\nvar Start = 1;\nvar Middle = 0.5;\nvar End = 0;\n\nfunction step(count, pos) {\n  return function (x) {\n    if (x >= 1) {\n      return 1;\n    }\n\n    var stepSize = 1 / count;\n    x += pos * stepSize;\n    return x - x % stepSize;\n  };\n}\n\nvar numberString = '\\\\s*(-?\\\\d+\\\\.?\\\\d*|-?\\\\.\\\\d+)\\\\s*';\nvar cubicBezierRe = new RegExp('cubic-bezier\\\\(' + numberString + ',' + numberString + ',' + numberString + ',' + numberString + '\\\\)');\nvar step1Re = /steps\\(\\s*(\\d+)\\s*\\)/;\nvar step2Re = /steps\\(\\s*(\\d+)\\s*,\\s*(start|middle|end)\\s*\\)/;\nexport function parseEasingFunction(normalizedEasing) {\n  var cubicData = cubicBezierRe.exec(normalizedEasing);\n\n  if (cubicData) {\n    // @ts-ignore\n    return bezier.apply(void 0, __spreadArray([], __read(cubicData.slice(1).map(Number)), false));\n  }\n\n  var step1Data = step1Re.exec(normalizedEasing);\n\n  if (step1Data) {\n    return step(Number(step1Data[1]), End);\n  }\n\n  var step2Data = step2Re.exec(normalizedEasing);\n\n  if (step2Data) {\n    // @ts-ignore\n    return step(Number(step2Data[1]), {\n      start: Start,\n      middle: Middle,\n      end: End\n    }[step2Data[2]]);\n  }\n\n  return getEasingFunction(normalizedEasing);\n}\nexport function calculateActiveDuration(timing) {\n  // @ts-ignore\n  return Math.abs(repeatedDuration(timing) / (timing.playbackRate || 1));\n}\n\nfunction repeatedDuration(timing) {\n  var _a; // https://drafts.csswg.org/web-animations/#calculating-the-active-duration\n\n\n  if (timing.duration === 0 || timing.iterations === 0) {\n    return 0;\n  } // @see https://developer.mozilla.org/en-US/docs/Web/API/EffectTiming/duration#value\n  // if (timing.duration === 'auto') {\n  //   timing.duration = 0;\n  // }\n\n\n  return (timing.duration === 'auto' ? 0 : Number(timing.duration)) * ((_a = timing.iterations) !== null && _a !== void 0 ? _a : 1);\n}\n\nvar PhaseNone = 0;\nvar PhaseBefore = 1;\nvar PhaseAfter = 2;\nvar PhaseActive = 3;\n\nfunction calculatePhase(activeDuration, localTime, timing) {\n  // https://drafts.csswg.org/web-animations/#animation-effect-phases-and-states\n  if (localTime === null) {\n    return PhaseNone;\n  }\n\n  var endTime = timing.endTime;\n\n  if (localTime < Math.min(timing.delay, endTime)) {\n    return PhaseBefore;\n  }\n\n  if (localTime >= Math.min(timing.delay + activeDuration + timing.endDelay, endTime)) {\n    return PhaseAfter;\n  }\n\n  return PhaseActive;\n}\n\nfunction calculateActiveTime(activeDuration, fillMode, localTime, phase, delay) {\n  // https://drafts.csswg.org/web-animations/#calculating-the-active-time\n  switch (phase) {\n    case PhaseBefore:\n      if (fillMode === 'backwards' || fillMode === 'both') return 0;\n      return null;\n\n    case PhaseActive:\n      return localTime - delay;\n\n    case PhaseAfter:\n      if (fillMode === 'forwards' || fillMode === 'both') return activeDuration;\n      return null;\n\n    case PhaseNone:\n      return null;\n  }\n}\n\nfunction calculateOverallProgress(iterationDuration, phase, iterations, activeTime, iterationStart) {\n  // https://drafts.csswg.org/web-animations/#calculating-the-overall-progress\n  var overallProgress = iterationStart;\n\n  if (iterationDuration === 0) {\n    if (phase !== PhaseBefore) {\n      overallProgress += iterations;\n    }\n  } else {\n    overallProgress += activeTime / iterationDuration;\n  }\n\n  return overallProgress;\n}\n\nfunction calculateSimpleIterationProgress(overallProgress, iterationStart, phase, iterations, activeTime, iterationDuration) {\n  // https://drafts.csswg.org/web-animations/#calculating-the-simple-iteration-progress\n  var simpleIterationProgress = overallProgress === Infinity ? iterationStart % 1 : overallProgress % 1;\n\n  if (simpleIterationProgress === 0 && phase === PhaseAfter && iterations !== 0 && (activeTime !== 0 || iterationDuration === 0)) {\n    simpleIterationProgress = 1;\n  }\n\n  return simpleIterationProgress;\n}\n\nfunction calculateCurrentIteration(phase, iterations, simpleIterationProgress, overallProgress) {\n  // https://drafts.csswg.org/web-animations/#calculating-the-current-iteration\n  if (phase === PhaseAfter && iterations === Infinity) {\n    return Infinity;\n  }\n\n  if (simpleIterationProgress === 1) {\n    return Math.floor(overallProgress) - 1;\n  }\n\n  return Math.floor(overallProgress);\n}\n\nfunction calculateDirectedProgress(playbackDirection, currentIteration, simpleIterationProgress) {\n  // https://drafts.csswg.org/web-animations/#calculating-the-directed-progress\n  var currentDirection = playbackDirection;\n\n  if (playbackDirection !== 'normal' && playbackDirection !== 'reverse') {\n    var d = currentIteration;\n\n    if (playbackDirection === 'alternate-reverse') {\n      d += 1;\n    }\n\n    currentDirection = 'normal';\n\n    if (d !== Infinity && d % 2 !== 0) {\n      currentDirection = 'reverse';\n    }\n  }\n\n  if (currentDirection === 'normal') {\n    return simpleIterationProgress;\n  }\n\n  return 1 - simpleIterationProgress;\n}\n\nexport function calculateIterationProgress(activeDuration, localTime, timing) {\n  var phase = calculatePhase(activeDuration, localTime, timing);\n  var activeTime = calculateActiveTime(activeDuration, timing.fill, localTime, phase, timing.delay);\n  if (activeTime === null) return null;\n  var duration = timing.duration === 'auto' ? 0 : timing.duration;\n  var overallProgress = calculateOverallProgress(duration, phase, timing.iterations, activeTime, timing.iterationStart);\n  var simpleIterationProgress = calculateSimpleIterationProgress(overallProgress, timing.iterationStart, phase, timing.iterations, activeTime, duration);\n  var currentIteration = calculateCurrentIteration(phase, timing.iterations, simpleIterationProgress, overallProgress);\n  var directedProgress = calculateDirectedProgress(timing.direction, currentIteration, simpleIterationProgress);\n  timing.currentIteration = currentIteration;\n  timing.progress = directedProgress; // https://drafts.csswg.org/web-animations/#calculating-the-transformed-progress\n  // https://drafts.csswg.org/web-animations/#calculating-the-iteration-progress\n\n  return timing.easingFunction(directedProgress);\n}\n/**\n * From: [https://easings.net]\n * Read More about easings on [MDN](https://developer.mozilla.org/en-US/docs/Web/API/EffectTiming/easing)\n */\n\nexport var EASINGS = {\n  in: 'ease-in',\n  out: 'ease-out',\n  'in-out': 'ease-in-out',\n  // Sine\n  'in-sine': 'cubic-bezier(0.47, 0, 0.745, 0.715)',\n  'out-sine': 'cubic-bezier(0.39, 0.575, 0.565, 1)',\n  'in-out-sine': 'cubic-bezier(0.445, 0.05, 0.55, 0.95)',\n  // Quad\n  'in-quad': 'cubic-bezier(0.55, 0.085, 0.68, 0.53)',\n  'out-quad': 'cubic-bezier(0.25, 0.46, 0.45, 0.94)',\n  'in-out-quad': 'cubic-bezier(0.455, 0.03, 0.515, 0.955)',\n  // Cubic\n  'in-cubic': 'cubic-bezier(0.55, 0.055, 0.675, 0.19)',\n  'out-cubic': 'cubic-bezier(0.215, 0.61, 0.355, 1)',\n  'in-out-cubic': 'cubic-bezier(0.645, 0.045, 0.355, 1)',\n  // Quart\n  'in-quart': 'cubic-bezier(0.895, 0.03, 0.685, 0.22)',\n  'out-quart': 'cubic-bezier(0.165, 0.84, 0.44, 1)',\n  'in-out-quart': 'cubic-bezier(0.77, 0, 0.175, 1)',\n  // Quint\n  'in-quint': 'cubic-bezier(0.755, 0.05, 0.855, 0.06)',\n  'out-quint': 'cubic-bezier(0.23, 1, 0.32, 1)',\n  'in-out-quint': 'cubic-bezier(0.86, 0, 0.07, 1)',\n  // Expo\n  'in-expo': 'cubic-bezier(0.95, 0.05, 0.795, 0.035)',\n  'out-expo': 'cubic-bezier(0.19, 1, 0.22, 1)',\n  'in-out-expo': 'cubic-bezier(1, 0, 0, 1)',\n  // Circ\n  'in-circ': 'cubic-bezier(0.6, 0.04, 0.98, 0.335)',\n  'out-circ': 'cubic-bezier(0.075, 0.82, 0.165, 1)',\n  'in-out-circ': 'cubic-bezier(0.785, 0.135, 0.15, 0.86)',\n  // Back\n  'in-back': 'cubic-bezier(0.6, -0.28, 0.735, 0.045)',\n  'out-back': 'cubic-bezier(0.175, 0.885, 0.32, 1.275)',\n  'in-out-back': 'cubic-bezier(0.68, -0.55, 0.265, 1.55)'\n};\nexport var EasingKeys = Object.keys(EASINGS);\n/**\n * Converts users input into a usable easing function string\n */\n\nexport var getEase = function getEase(ease) {\n  if (ease === void 0) {\n    ease = 'ease';\n  } // Convert camelCase strings into dashed strings, then Remove the \"ease-\" keyword\n\n\n  var search = convertToDash(ease).replace(/^ease-/, '');\n  return EASINGS[search] || ease;\n};","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/@antv/g/es/utils/animation.js"],"names":["__read","__spreadArray","getEasingFunction","convertToDash","bezier","linear","x","Start","Middle","End","step","count","pos","stepSize","numberString","cubicBezierRe","RegExp","step1Re","step2Re","parseEasingFunction","normalizedEasing","cubicData","exec","apply","slice","map","Number","step1Data","step2Data","start","middle","end","calculateActiveDuration","timing","Math","abs","repeatedDuration","playbackRate","_a","duration","iterations","PhaseNone","PhaseBefore","PhaseAfter","PhaseActive","calculatePhase","activeDuration","localTime","endTime","min","delay","endDelay","calculateActiveTime","fillMode","phase","calculateOverallProgress","iterationDuration","activeTime","iterationStart","overallProgress","calculateSimpleIterationProgress","simpleIterationProgress","Infinity","calculateCurrentIteration","floor","calculateDirectedProgress","playbackDirection","currentIteration","currentDirection","d","calculateIterationProgress","fill","directedProgress","direction","progress","easingFunction","EASINGS","in","out","EasingKeys","Object","keys","getEase","ease","search","replace"],"mappings":"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","sourcesContent":["import { __read, __spreadArray } from \"tslib\";\nimport { getEasingFunction, convertToDash } from './custom-easing';\nimport { bezier } from './bezier-easing';\nexport var linear = function linear(x) {\n  return x;\n};\nvar Start = 1;\nvar Middle = 0.5;\nvar End = 0;\n\nfunction step(count, pos) {\n  return function (x) {\n    if (x >= 1) {\n      return 1;\n    }\n\n    var stepSize = 1 / count;\n    x += pos * stepSize;\n    return x - x % stepSize;\n  };\n}\n\nvar numberString = '\\\\s*(-?\\\\d+\\\\.?\\\\d*|-?\\\\.\\\\d+)\\\\s*';\nvar cubicBezierRe = new RegExp('cubic-bezier\\\\(' + numberString + ',' + numberString + ',' + numberString + ',' + numberString + '\\\\)');\nvar step1Re = /steps\\(\\s*(\\d+)\\s*\\)/;\nvar step2Re = /steps\\(\\s*(\\d+)\\s*,\\s*(start|middle|end)\\s*\\)/;\nexport function parseEasingFunction(normalizedEasing) {\n  var cubicData = cubicBezierRe.exec(normalizedEasing);\n\n  if (cubicData) {\n    // @ts-ignore\n    return bezier.apply(void 0, __spreadArray([], __read(cubicData.slice(1).map(Number)), false));\n  }\n\n  var step1Data = step1Re.exec(normalizedEasing);\n\n  if (step1Data) {\n    return step(Number(step1Data[1]), End);\n  }\n\n  var step2Data = step2Re.exec(normalizedEasing);\n\n  if (step2Data) {\n    // @ts-ignore\n    return step(Number(step2Data[1]), {\n      start: Start,\n      middle: Middle,\n      end: End\n    }[step2Data[2]]);\n  }\n\n  return getEasingFunction(normalizedEasing);\n}\nexport function calculateActiveDuration(timing) {\n  // @ts-ignore\n  return Math.abs(repeatedDuration(timing) / (timing.playbackRate || 1));\n}\n\nfunction repeatedDuration(timing) {\n  var _a; // https://drafts.csswg.org/web-animations/#calculating-the-active-duration\n\n\n  if (timing.duration === 0 || timing.iterations === 0) {\n    return 0;\n  } // @see https://developer.mozilla.org/en-US/docs/Web/API/EffectTiming/duration#value\n  // if (timing.duration === 'auto') {\n  //   timing.duration = 0;\n  // }\n\n\n  return (timing.duration === 'auto' ? 0 : Number(timing.duration)) * ((_a = timing.iterations) !== null && _a !== void 0 ? _a : 1);\n}\n\nvar PhaseNone = 0;\nvar PhaseBefore = 1;\nvar PhaseAfter = 2;\nvar PhaseActive = 3;\n\nfunction calculatePhase(activeDuration, localTime, timing) {\n  // https://drafts.csswg.org/web-animations/#animation-effect-phases-and-states\n  if (localTime === null) {\n    return PhaseNone;\n  }\n\n  var endTime = timing.endTime;\n\n  if (localTime < Math.min(timing.delay, endTime)) {\n    return PhaseBefore;\n  }\n\n  if (localTime >= Math.min(timing.delay + activeDuration + timing.endDelay, endTime)) {\n    return PhaseAfter;\n  }\n\n  return PhaseActive;\n}\n\nfunction calculateActiveTime(activeDuration, fillMode, localTime, phase, delay) {\n  // https://drafts.csswg.org/web-animations/#calculating-the-active-time\n  switch (phase) {\n    case PhaseBefore:\n      if (fillMode === 'backwards' || fillMode === 'both') return 0;\n      return null;\n\n    case PhaseActive:\n      return localTime - delay;\n\n    case PhaseAfter:\n      if (fillMode === 'forwards' || fillMode === 'both') return activeDuration;\n      return null;\n\n    case PhaseNone:\n      return null;\n  }\n}\n\nfunction calculateOverallProgress(iterationDuration, phase, iterations, activeTime, iterationStart) {\n  // https://drafts.csswg.org/web-animations/#calculating-the-overall-progress\n  var overallProgress = iterationStart;\n\n  if (iterationDuration === 0) {\n    if (phase !== PhaseBefore) {\n      overallProgress += iterations;\n    }\n  } else {\n    overallProgress += activeTime / iterationDuration;\n  }\n\n  return overallProgress;\n}\n\nfunction calculateSimpleIterationProgress(overallProgress, iterationStart, phase, iterations, activeTime, iterationDuration) {\n  // https://drafts.csswg.org/web-animations/#calculating-the-simple-iteration-progress\n  var simpleIterationProgress = overallProgress === Infinity ? iterationStart % 1 : overallProgress % 1;\n\n  if (simpleIterationProgress === 0 && phase === PhaseAfter && iterations !== 0 && (activeTime !== 0 || iterationDuration === 0)) {\n    simpleIterationProgress = 1;\n  }\n\n  return simpleIterationProgress;\n}\n\nfunction calculateCurrentIteration(phase, iterations, simpleIterationProgress, overallProgress) {\n  // https://drafts.csswg.org/web-animations/#calculating-the-current-iteration\n  if (phase === PhaseAfter && iterations === Infinity) {\n    return Infinity;\n  }\n\n  if (simpleIterationProgress === 1) {\n    return Math.floor(overallProgress) - 1;\n  }\n\n  return Math.floor(overallProgress);\n}\n\nfunction calculateDirectedProgress(playbackDirection, currentIteration, simpleIterationProgress) {\n  // https://drafts.csswg.org/web-animations/#calculating-the-directed-progress\n  var currentDirection = playbackDirection;\n\n  if (playbackDirection !== 'normal' && playbackDirection !== 'reverse') {\n    var d = currentIteration;\n\n    if (playbackDirection === 'alternate-reverse') {\n      d += 1;\n    }\n\n    currentDirection = 'normal';\n\n    if (d !== Infinity && d % 2 !== 0) {\n      currentDirection = 'reverse';\n    }\n  }\n\n  if (currentDirection === 'normal') {\n    return simpleIterationProgress;\n  }\n\n  return 1 - simpleIterationProgress;\n}\n\nexport function calculateIterationProgress(activeDuration, localTime, timing) {\n  var phase = calculatePhase(activeDuration, localTime, timing);\n  var activeTime = calculateActiveTime(activeDuration, timing.fill, localTime, phase, timing.delay);\n  if (activeTime === null) return null;\n  var duration = timing.duration === 'auto' ? 0 : timing.duration;\n  var overallProgress = calculateOverallProgress(duration, phase, timing.iterations, activeTime, timing.iterationStart);\n  var simpleIterationProgress = calculateSimpleIterationProgress(overallProgress, timing.iterationStart, phase, timing.iterations, activeTime, duration);\n  var currentIteration = calculateCurrentIteration(phase, timing.iterations, simpleIterationProgress, overallProgress);\n  var directedProgress = calculateDirectedProgress(timing.direction, currentIteration, simpleIterationProgress);\n  timing.currentIteration = currentIteration;\n  timing.progress = directedProgress; // https://drafts.csswg.org/web-animations/#calculating-the-transformed-progress\n  // https://drafts.csswg.org/web-animations/#calculating-the-iteration-progress\n\n  return timing.easingFunction(directedProgress);\n}\n/**\n * From: [https://easings.net]\n * Read More about easings on [MDN](https://developer.mozilla.org/en-US/docs/Web/API/EffectTiming/easing)\n */\n\nexport var EASINGS = {\n  in: 'ease-in',\n  out: 'ease-out',\n  'in-out': 'ease-in-out',\n  // Sine\n  'in-sine': 'cubic-bezier(0.47, 0, 0.745, 0.715)',\n  'out-sine': 'cubic-bezier(0.39, 0.575, 0.565, 1)',\n  'in-out-sine': 'cubic-bezier(0.445, 0.05, 0.55, 0.95)',\n  // Quad\n  'in-quad': 'cubic-bezier(0.55, 0.085, 0.68, 0.53)',\n  'out-quad': 'cubic-bezier(0.25, 0.46, 0.45, 0.94)',\n  'in-out-quad': 'cubic-bezier(0.455, 0.03, 0.515, 0.955)',\n  // Cubic\n  'in-cubic': 'cubic-bezier(0.55, 0.055, 0.675, 0.19)',\n  'out-cubic': 'cubic-bezier(0.215, 0.61, 0.355, 1)',\n  'in-out-cubic': 'cubic-bezier(0.645, 0.045, 0.355, 1)',\n  // Quart\n  'in-quart': 'cubic-bezier(0.895, 0.03, 0.685, 0.22)',\n  'out-quart': 'cubic-bezier(0.165, 0.84, 0.44, 1)',\n  'in-out-quart': 'cubic-bezier(0.77, 0, 0.175, 1)',\n  // Quint\n  'in-quint': 'cubic-bezier(0.755, 0.05, 0.855, 0.06)',\n  'out-quint': 'cubic-bezier(0.23, 1, 0.32, 1)',\n  'in-out-quint': 'cubic-bezier(0.86, 0, 0.07, 1)',\n  // Expo\n  'in-expo': 'cubic-bezier(0.95, 0.05, 0.795, 0.035)',\n  'out-expo': 'cubic-bezier(0.19, 1, 0.22, 1)',\n  'in-out-expo': 'cubic-bezier(1, 0, 0, 1)',\n  // Circ\n  'in-circ': 'cubic-bezier(0.6, 0.04, 0.98, 0.335)',\n  'out-circ': 'cubic-bezier(0.075, 0.82, 0.165, 1)',\n  'in-out-circ': 'cubic-bezier(0.785, 0.135, 0.15, 0.86)',\n  // Back\n  'in-back': 'cubic-bezier(0.6, -0.28, 0.735, 0.045)',\n  'out-back': 'cubic-bezier(0.175, 0.885, 0.32, 1.275)',\n  'in-out-back': 'cubic-bezier(0.68, -0.55, 0.265, 1.55)'\n};\nexport var EasingKeys = Object.keys(EASINGS);\n/**\n * Converts users input into a usable easing function string\n */\n\nexport var getEase = function getEase(ease) {\n  if (ease === void 0) {\n    ease = 'ease';\n  } // Convert camelCase strings into dashed strings, then Remove the \"ease-\" keyword\n\n\n  var search = convertToDash(ease).replace(/^ease-/, '');\n  return EASINGS[search] || ease;\n};"]},"metadata":{},"sourceType":"module"}