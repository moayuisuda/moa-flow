{"ast":null,"code":"import { __decorate, __read, __spreadArray } from \"tslib\";\nimport { singleton } from 'mana-syringe';\nimport { GeometryAABBUpdater } from './interfaces';\nimport { Shape } from '../../types';\n\nvar PolylineUpdater =\n/** @class */\nfunction () {\n  function PolylineUpdater() {}\n\n  PolylineUpdater.prototype.update = function (parsedStyle) {\n    var points = parsedStyle.points.points; // FIXME: account for miter lineJoin\n\n    var minX = Math.min.apply(Math, __spreadArray([], __read(points.map(function (point) {\n      return point[0];\n    })), false));\n    var maxX = Math.max.apply(Math, __spreadArray([], __read(points.map(function (point) {\n      return point[0];\n    })), false));\n    var minY = Math.min.apply(Math, __spreadArray([], __read(points.map(function (point) {\n      return point[1];\n    })), false));\n    var maxY = Math.max.apply(Math, __spreadArray([], __read(points.map(function (point) {\n      return point[1];\n    })), false));\n    var width = maxX - minX;\n    var height = maxY - minY;\n    return {\n      width: width,\n      height: height,\n      x: minX,\n      y: minY\n    };\n  };\n\n  PolylineUpdater = __decorate([singleton({\n    token: [{\n      token: GeometryAABBUpdater,\n      named: Shape.POLYLINE\n    }, {\n      token: GeometryAABBUpdater,\n      named: Shape.POLYGON\n    }]\n  })], PolylineUpdater);\n  return PolylineUpdater;\n}();\n\nexport { PolylineUpdater };","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/@antv/g/es/services/aabb/PolylineUpdater.js"],"names":["__decorate","__read","__spreadArray","singleton","GeometryAABBUpdater","Shape","PolylineUpdater","prototype","update","parsedStyle","points","minX","Math","min","apply","map","point","maxX","max","minY","maxY","width","height","x","y","token","named","POLYLINE","POLYGON"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,MAArB,EAA6BC,aAA7B,QAAkD,OAAlD;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,mBAAT,QAAoC,cAApC;AACA,SAASC,KAAT,QAAsB,aAAtB;;AAEA,IAAIC,eAAe;AACnB;AACA,YAAY;AACV,WAASA,eAAT,GAA2B,CAAE;;AAE7BA,EAAAA,eAAe,CAACC,SAAhB,CAA0BC,MAA1B,GAAmC,UAAUC,WAAV,EAAuB;AACxD,QAAIC,MAAM,GAAGD,WAAW,CAACC,MAAZ,CAAmBA,MAAhC,CADwD,CAChB;;AAExC,QAAIC,IAAI,GAAGC,IAAI,CAACC,GAAL,CAASC,KAAT,CAAeF,IAAf,EAAqBV,aAAa,CAAC,EAAD,EAAKD,MAAM,CAACS,MAAM,CAACK,GAAP,CAAW,UAAUC,KAAV,EAAiB;AACnF,aAAOA,KAAK,CAAC,CAAD,CAAZ;AACD,KAFwD,CAAD,CAAX,EAExC,KAFwC,CAAlC,CAAX;AAGA,QAAIC,IAAI,GAAGL,IAAI,CAACM,GAAL,CAASJ,KAAT,CAAeF,IAAf,EAAqBV,aAAa,CAAC,EAAD,EAAKD,MAAM,CAACS,MAAM,CAACK,GAAP,CAAW,UAAUC,KAAV,EAAiB;AACnF,aAAOA,KAAK,CAAC,CAAD,CAAZ;AACD,KAFwD,CAAD,CAAX,EAExC,KAFwC,CAAlC,CAAX;AAGA,QAAIG,IAAI,GAAGP,IAAI,CAACC,GAAL,CAASC,KAAT,CAAeF,IAAf,EAAqBV,aAAa,CAAC,EAAD,EAAKD,MAAM,CAACS,MAAM,CAACK,GAAP,CAAW,UAAUC,KAAV,EAAiB;AACnF,aAAOA,KAAK,CAAC,CAAD,CAAZ;AACD,KAFwD,CAAD,CAAX,EAExC,KAFwC,CAAlC,CAAX;AAGA,QAAII,IAAI,GAAGR,IAAI,CAACM,GAAL,CAASJ,KAAT,CAAeF,IAAf,EAAqBV,aAAa,CAAC,EAAD,EAAKD,MAAM,CAACS,MAAM,CAACK,GAAP,CAAW,UAAUC,KAAV,EAAiB;AACnF,aAAOA,KAAK,CAAC,CAAD,CAAZ;AACD,KAFwD,CAAD,CAAX,EAExC,KAFwC,CAAlC,CAAX;AAGA,QAAIK,KAAK,GAAGJ,IAAI,GAAGN,IAAnB;AACA,QAAIW,MAAM,GAAGF,IAAI,GAAGD,IAApB;AACA,WAAO;AACLE,MAAAA,KAAK,EAAEA,KADF;AAELC,MAAAA,MAAM,EAAEA,MAFH;AAGLC,MAAAA,CAAC,EAAEZ,IAHE;AAILa,MAAAA,CAAC,EAAEL;AAJE,KAAP;AAMD,GAvBD;;AAyBAb,EAAAA,eAAe,GAAGN,UAAU,CAAC,CAACG,SAAS,CAAC;AACtCsB,IAAAA,KAAK,EAAE,CAAC;AACNA,MAAAA,KAAK,EAAErB,mBADD;AAENsB,MAAAA,KAAK,EAAErB,KAAK,CAACsB;AAFP,KAAD,EAGJ;AACDF,MAAAA,KAAK,EAAErB,mBADN;AAEDsB,MAAAA,KAAK,EAAErB,KAAK,CAACuB;AAFZ,KAHI;AAD+B,GAAD,CAAV,CAAD,EAQvBtB,eARuB,CAA5B;AASA,SAAOA,eAAP;AACD,CAtCD,EAFA;;AA0CA,SAASA,eAAT","sourcesContent":["import { __decorate, __read, __spreadArray } from \"tslib\";\nimport { singleton } from 'mana-syringe';\nimport { GeometryAABBUpdater } from './interfaces';\nimport { Shape } from '../../types';\n\nvar PolylineUpdater =\n/** @class */\nfunction () {\n  function PolylineUpdater() {}\n\n  PolylineUpdater.prototype.update = function (parsedStyle) {\n    var points = parsedStyle.points.points; // FIXME: account for miter lineJoin\n\n    var minX = Math.min.apply(Math, __spreadArray([], __read(points.map(function (point) {\n      return point[0];\n    })), false));\n    var maxX = Math.max.apply(Math, __spreadArray([], __read(points.map(function (point) {\n      return point[0];\n    })), false));\n    var minY = Math.min.apply(Math, __spreadArray([], __read(points.map(function (point) {\n      return point[1];\n    })), false));\n    var maxY = Math.max.apply(Math, __spreadArray([], __read(points.map(function (point) {\n      return point[1];\n    })), false));\n    var width = maxX - minX;\n    var height = maxY - minY;\n    return {\n      width: width,\n      height: height,\n      x: minX,\n      y: minY\n    };\n  };\n\n  PolylineUpdater = __decorate([singleton({\n    token: [{\n      token: GeometryAABBUpdater,\n      named: Shape.POLYLINE\n    }, {\n      token: GeometryAABBUpdater,\n      named: Shape.POLYGON\n    }]\n  })], PolylineUpdater);\n  return PolylineUpdater;\n}();\n\nexport { PolylineUpdater };"]},"metadata":{},"sourceType":"module"}