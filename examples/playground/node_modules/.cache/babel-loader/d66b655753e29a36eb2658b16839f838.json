{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport Title from './Title';\nimport Paragraph from './Paragraph';\nimport { ConfigContext } from '../config-provider';\nimport Element from './Element';\nimport SkeletonAvatar from './Avatar';\nimport SkeletonButton from './Button';\nimport SkeletonInput from './Input';\nimport SkeletonImage from './Image';\n\nfunction getComponentProps(prop) {\n  if (prop && _typeof(prop) === 'object') {\n    return prop;\n  }\n\n  return {};\n}\n\nfunction getAvatarBasicProps(hasTitle, hasParagraph) {\n  if (hasTitle && !hasParagraph) {\n    // Square avatar\n    return {\n      size: 'large',\n      shape: 'square'\n    };\n  }\n\n  return {\n    size: 'large',\n    shape: 'circle'\n  };\n}\n\nfunction getTitleBasicProps(hasAvatar, hasParagraph) {\n  if (!hasAvatar && hasParagraph) {\n    return {\n      width: '38%'\n    };\n  }\n\n  if (hasAvatar && hasParagraph) {\n    return {\n      width: '50%'\n    };\n  }\n\n  return {};\n}\n\nfunction getParagraphBasicProps(hasAvatar, hasTitle) {\n  var basicProps = {}; // Width\n\n  if (!hasAvatar || !hasTitle) {\n    basicProps.width = '61%';\n  } // Rows\n\n\n  if (!hasAvatar && hasTitle) {\n    basicProps.rows = 3;\n  } else {\n    basicProps.rows = 2;\n  }\n\n  return basicProps;\n}\n\nvar Skeleton = function Skeleton(props) {\n  var customizePrefixCls = props.prefixCls,\n      loading = props.loading,\n      className = props.className,\n      style = props.style,\n      children = props.children,\n      avatar = props.avatar,\n      title = props.title,\n      paragraph = props.paragraph,\n      active = props.active,\n      round = props.round;\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n\n  if (loading || !('loading' in props)) {\n    var _classNames;\n\n    var hasAvatar = !!avatar;\n    var hasTitle = !!title;\n    var hasParagraph = !!paragraph; // Avatar\n\n    var avatarNode;\n\n    if (hasAvatar) {\n      var avatarProps = _extends(_extends({\n        prefixCls: \"\".concat(prefixCls, \"-avatar\")\n      }, getAvatarBasicProps(hasTitle, hasParagraph)), getComponentProps(avatar)); // We direct use SkeletonElement as avatar in skeleton internal.\n\n\n      avatarNode = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-header\")\n      }, /*#__PURE__*/React.createElement(Element, avatarProps));\n    }\n\n    var contentNode;\n\n    if (hasTitle || hasParagraph) {\n      // Title\n      var $title;\n\n      if (hasTitle) {\n        var titleProps = _extends(_extends({\n          prefixCls: \"\".concat(prefixCls, \"-title\")\n        }, getTitleBasicProps(hasAvatar, hasParagraph)), getComponentProps(title));\n\n        $title = /*#__PURE__*/React.createElement(Title, titleProps);\n      } // Paragraph\n\n\n      var paragraphNode;\n\n      if (hasParagraph) {\n        var paragraphProps = _extends(_extends({\n          prefixCls: \"\".concat(prefixCls, \"-paragraph\")\n        }, getParagraphBasicProps(hasAvatar, hasTitle)), getComponentProps(paragraph));\n\n        paragraphNode = /*#__PURE__*/React.createElement(Paragraph, paragraphProps);\n      }\n\n      contentNode = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-content\")\n      }, $title, paragraphNode);\n    }\n\n    var cls = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-with-avatar\"), hasAvatar), _defineProperty(_classNames, \"\".concat(prefixCls, \"-active\"), active), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-round\"), round), _classNames), className);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: cls,\n      style: style\n    }, avatarNode, contentNode);\n  }\n\n  return children;\n};\n\nSkeleton.defaultProps = {\n  avatar: false,\n  title: true,\n  paragraph: true\n};\nSkeleton.Button = SkeletonButton;\nSkeleton.Avatar = SkeletonAvatar;\nSkeleton.Input = SkeletonInput;\nSkeleton.Image = SkeletonImage;\nexport default Skeleton;","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/antd/es/skeleton/Skeleton.js"],"names":["_defineProperty","_extends","_typeof","React","classNames","Title","Paragraph","ConfigContext","Element","SkeletonAvatar","SkeletonButton","SkeletonInput","SkeletonImage","getComponentProps","prop","getAvatarBasicProps","hasTitle","hasParagraph","size","shape","getTitleBasicProps","hasAvatar","width","getParagraphBasicProps","basicProps","rows","Skeleton","props","customizePrefixCls","prefixCls","loading","className","style","children","avatar","title","paragraph","active","round","_React$useContext","useContext","getPrefixCls","direction","_classNames","avatarNode","avatarProps","concat","createElement","contentNode","$title","titleProps","paragraphNode","paragraphProps","cls","defaultProps","Button","Avatar","Input","Image"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport Title from './Title';\nimport Paragraph from './Paragraph';\nimport { ConfigContext } from '../config-provider';\nimport Element from './Element';\nimport SkeletonAvatar from './Avatar';\nimport SkeletonButton from './Button';\nimport SkeletonInput from './Input';\nimport SkeletonImage from './Image';\n\nfunction getComponentProps(prop) {\n  if (prop && _typeof(prop) === 'object') {\n    return prop;\n  }\n\n  return {};\n}\n\nfunction getAvatarBasicProps(hasTitle, hasParagraph) {\n  if (hasTitle && !hasParagraph) {\n    // Square avatar\n    return {\n      size: 'large',\n      shape: 'square'\n    };\n  }\n\n  return {\n    size: 'large',\n    shape: 'circle'\n  };\n}\n\nfunction getTitleBasicProps(hasAvatar, hasParagraph) {\n  if (!hasAvatar && hasParagraph) {\n    return {\n      width: '38%'\n    };\n  }\n\n  if (hasAvatar && hasParagraph) {\n    return {\n      width: '50%'\n    };\n  }\n\n  return {};\n}\n\nfunction getParagraphBasicProps(hasAvatar, hasTitle) {\n  var basicProps = {}; // Width\n\n  if (!hasAvatar || !hasTitle) {\n    basicProps.width = '61%';\n  } // Rows\n\n\n  if (!hasAvatar && hasTitle) {\n    basicProps.rows = 3;\n  } else {\n    basicProps.rows = 2;\n  }\n\n  return basicProps;\n}\n\nvar Skeleton = function Skeleton(props) {\n  var customizePrefixCls = props.prefixCls,\n      loading = props.loading,\n      className = props.className,\n      style = props.style,\n      children = props.children,\n      avatar = props.avatar,\n      title = props.title,\n      paragraph = props.paragraph,\n      active = props.active,\n      round = props.round;\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n\n  if (loading || !('loading' in props)) {\n    var _classNames;\n\n    var hasAvatar = !!avatar;\n    var hasTitle = !!title;\n    var hasParagraph = !!paragraph; // Avatar\n\n    var avatarNode;\n\n    if (hasAvatar) {\n      var avatarProps = _extends(_extends({\n        prefixCls: \"\".concat(prefixCls, \"-avatar\")\n      }, getAvatarBasicProps(hasTitle, hasParagraph)), getComponentProps(avatar)); // We direct use SkeletonElement as avatar in skeleton internal.\n\n\n      avatarNode = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-header\")\n      }, /*#__PURE__*/React.createElement(Element, avatarProps));\n    }\n\n    var contentNode;\n\n    if (hasTitle || hasParagraph) {\n      // Title\n      var $title;\n\n      if (hasTitle) {\n        var titleProps = _extends(_extends({\n          prefixCls: \"\".concat(prefixCls, \"-title\")\n        }, getTitleBasicProps(hasAvatar, hasParagraph)), getComponentProps(title));\n\n        $title = /*#__PURE__*/React.createElement(Title, titleProps);\n      } // Paragraph\n\n\n      var paragraphNode;\n\n      if (hasParagraph) {\n        var paragraphProps = _extends(_extends({\n          prefixCls: \"\".concat(prefixCls, \"-paragraph\")\n        }, getParagraphBasicProps(hasAvatar, hasTitle)), getComponentProps(paragraph));\n\n        paragraphNode = /*#__PURE__*/React.createElement(Paragraph, paragraphProps);\n      }\n\n      contentNode = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-content\")\n      }, $title, paragraphNode);\n    }\n\n    var cls = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-with-avatar\"), hasAvatar), _defineProperty(_classNames, \"\".concat(prefixCls, \"-active\"), active), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-round\"), round), _classNames), className);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: cls,\n      style: style\n    }, avatarNode, contentNode);\n  }\n\n  return children;\n};\n\nSkeleton.defaultProps = {\n  avatar: false,\n  title: true,\n  paragraph: true\n};\nSkeleton.Button = SkeletonButton;\nSkeleton.Avatar = SkeletonAvatar;\nSkeleton.Input = SkeletonInput;\nSkeleton.Image = SkeletonImage;\nexport default Skeleton;"]},"metadata":{},"sourceType":"module"}