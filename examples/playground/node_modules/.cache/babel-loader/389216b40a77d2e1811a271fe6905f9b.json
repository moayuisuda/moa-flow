{"ast":null,"code":"import { vec3 } from 'gl-matrix';\nvar tmpVecA = vec3.create();\nvar tmpVecB = vec3.create();\nvar tmpVecC = vec3.create();\nvar tmpVecD = vec3.create();\nvar tmpVecE = vec3.create();\n/**\n * 包含求交方法：\n * * intersectsShape(Shape, intersection) 返回交点和求交结果\n * @see https://github.com/playcanvas/engine/blob/master/src/shape/bounding-box.js#L161\n * @see https://github.com/mrdoob/three.js/blob/dev/src/math/Ray.js\n */\n\nvar Ray =\n/** @class */\nfunction () {\n  function Ray(origin, direction) {\n    this.origin = origin || vec3.create();\n    this.direction = direction || vec3.fromValues(0, 0, -1);\n  }\n\n  Ray.prototype.intersectsAABB = function (aabb, intersection) {\n    return intersection ? this.intersectAABBWithIntersection(aabb, intersection) : this.intersectsAABBWithoutIntersection(aabb);\n  };\n\n  Ray.prototype.intersectsSphere = function (sphere, intersection) {\n    var m = vec3.sub(tmpVecA, this.origin, sphere.center);\n    vec3.normalize(tmpVecB, vec3.copy(tmpVecB, this.direction));\n    var b = vec3.dot(m, tmpVecB);\n    var c = vec3.dot(m, m) - sphere.radius * sphere.radius; // exit if ray's origin outside of sphere (c > 0) and ray pointing away from s (b > 0)\n\n    if (c > 0 && b > 0) {\n      return null;\n    }\n\n    var discr = b * b - c; // a negative discriminant corresponds to ray missing sphere\n\n    if (discr < 0) {\n      return false;\n    } // ray intersects sphere, compute smallest t value of intersection\n\n\n    var t = Math.abs(-b - Math.sqrt(discr)); // if t is negative, ray started inside sphere so clamp t to zero\n\n    if (intersection) {\n      vec3.copy(intersection, this.direction);\n      vec3.scaleAndAdd(intersection, this.origin, intersection, t);\n    }\n\n    return true;\n  };\n\n  Ray.prototype.intersectsPlane = function (plane, intersection) {\n    var t = (plane.distance - vec3.dot(plane.normal, this.origin)) / vec3.dot(plane.normal, this.direction);\n    var intersects = t >= 0;\n\n    if (intersects && intersection) {\n      vec3.scaleAndAdd(intersection, this.origin, this.direction, t);\n    }\n\n    return intersects;\n  };\n  /**\n   * faster than implements like Three.js\n   * @see https://github.com/playcanvas/engine/blob/master/src/shape/bounding-box.js#L161\n   */\n\n\n  Ray.prototype.intersectsAABBWithoutIntersection = function (aabb) {\n    var diff = tmpVecA;\n    var cross = tmpVecB;\n    var prod = tmpVecC;\n    var absDiff = tmpVecD;\n    var absDir = tmpVecE;\n    var rayDir = this.direction;\n    vec3.sub(diff, this.origin, aabb.center);\n    vec3.set(absDiff, Math.abs(diff[0]), Math.abs(diff[1]), Math.abs(diff[2]));\n    vec3.mul(prod, diff, rayDir);\n\n    if (absDiff[0] > aabb.halfExtents[0] && prod[0] >= 0 || absDiff[1] > aabb.halfExtents[1] && prod[1] >= 0 || absDiff[2] > aabb.halfExtents[2] && prod[2] >= 0) {\n      return false;\n    }\n\n    vec3.set(absDir, Math.abs(rayDir[0]), Math.abs(rayDir[1]), Math.abs(rayDir[2]));\n    vec3.cross(cross, rayDir, diff);\n    vec3.set(cross, Math.abs(cross[0]), Math.abs(cross[1]), Math.abs(cross[2]));\n    return !(cross[0] > aabb.halfExtents[1] * absDir[2] + aabb.halfExtents[2] * absDir[1] || cross[1] > aabb.halfExtents[0] * absDir[2] + aabb.halfExtents[2] * absDir[0] || cross[2] > aabb.halfExtents[0] * absDir[1] + aabb.halfExtents[1] * absDir[0]);\n  };\n\n  Ray.prototype.intersectAABBWithIntersection = function (aabb, intersection) {\n    var tMin = vec3.copy(vec3.create(), aabb.getMin());\n    vec3.sub(tMin, tMin, this.origin);\n    var tMax = vec3.copy(vec3.create(), aabb.getMax());\n    vec3.sub(tMax, tMax, this.origin);\n    var dir = this.direction; // Ensure that we are not dividing it by zero\n\n    if (dir[0] === 0) {\n      tMin[0] = tMin[0] < 0 ? -Number.MAX_VALUE : Number.MAX_VALUE;\n      tMax[0] = tMax[0] < 0 ? -Number.MAX_VALUE : Number.MAX_VALUE;\n    } else {\n      tMin[0] /= dir[0];\n      tMax[0] /= dir[0];\n    }\n\n    if (dir[1] === 0) {\n      tMin[1] = tMin[1] < 0 ? -Number.MAX_VALUE : Number.MAX_VALUE;\n      tMax[1] = tMax[1] < 0 ? -Number.MAX_VALUE : Number.MAX_VALUE;\n    } else {\n      tMin[1] /= dir[1];\n      tMax[1] /= dir[1];\n    }\n\n    if (dir[2] === 0) {\n      tMin[2] = tMin[2] < 0 ? -Number.MAX_VALUE : Number.MAX_VALUE;\n      tMax[2] = tMax[2] < 0 ? -Number.MAX_VALUE : Number.MAX_VALUE;\n    } else {\n      tMin[2] /= dir[2];\n      tMax[2] /= dir[2];\n    }\n\n    var realMin = vec3.set(tmpVecC, Math.min(tMin[0], tMax[0]), Math.min(tMin[1], tMax[1]), Math.min(tMin[2], tMax[2]));\n    var realMax = vec3.set(tmpVecD, Math.max(tMin[0], tMax[0]), Math.max(tMin[1], tMax[1]), Math.max(tMin[2], tMax[2]));\n    var minMax = Math.min(Math.min(realMax[0], realMax[1]), realMax[2]);\n    var maxMin = Math.max(Math.max(realMin[0], realMin[1]), realMin[2]);\n    var intersects = minMax >= maxMin && maxMin >= 0;\n\n    if (intersects) {\n      vec3.copy(intersection, this.direction);\n      vec3.scaleAndAdd(intersection, this.origin, intersection, maxMin);\n    }\n\n    return intersects;\n  };\n\n  return Ray;\n}();\n\nexport { Ray };","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/@antv/g/es/shapes/Ray.js"],"names":["vec3","tmpVecA","create","tmpVecB","tmpVecC","tmpVecD","tmpVecE","Ray","origin","direction","fromValues","prototype","intersectsAABB","aabb","intersection","intersectAABBWithIntersection","intersectsAABBWithoutIntersection","intersectsSphere","sphere","m","sub","center","normalize","copy","b","dot","c","radius","discr","t","Math","abs","sqrt","scaleAndAdd","intersectsPlane","plane","distance","normal","intersects","diff","cross","prod","absDiff","absDir","rayDir","set","mul","halfExtents","tMin","getMin","tMax","getMax","dir","Number","MAX_VALUE","realMin","min","realMax","max","minMax","maxMin"],"mappings":"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","sourcesContent":["import { vec3 } from 'gl-matrix';\nvar tmpVecA = vec3.create();\nvar tmpVecB = vec3.create();\nvar tmpVecC = vec3.create();\nvar tmpVecD = vec3.create();\nvar tmpVecE = vec3.create();\n/**\n * 包含求交方法：\n * * intersectsShape(Shape, intersection) 返回交点和求交结果\n * @see https://github.com/playcanvas/engine/blob/master/src/shape/bounding-box.js#L161\n * @see https://github.com/mrdoob/three.js/blob/dev/src/math/Ray.js\n */\n\nvar Ray =\n/** @class */\nfunction () {\n  function Ray(origin, direction) {\n    this.origin = origin || vec3.create();\n    this.direction = direction || vec3.fromValues(0, 0, -1);\n  }\n\n  Ray.prototype.intersectsAABB = function (aabb, intersection) {\n    return intersection ? this.intersectAABBWithIntersection(aabb, intersection) : this.intersectsAABBWithoutIntersection(aabb);\n  };\n\n  Ray.prototype.intersectsSphere = function (sphere, intersection) {\n    var m = vec3.sub(tmpVecA, this.origin, sphere.center);\n    vec3.normalize(tmpVecB, vec3.copy(tmpVecB, this.direction));\n    var b = vec3.dot(m, tmpVecB);\n    var c = vec3.dot(m, m) - sphere.radius * sphere.radius; // exit if ray's origin outside of sphere (c > 0) and ray pointing away from s (b > 0)\n\n    if (c > 0 && b > 0) {\n      return null;\n    }\n\n    var discr = b * b - c; // a negative discriminant corresponds to ray missing sphere\n\n    if (discr < 0) {\n      return false;\n    } // ray intersects sphere, compute smallest t value of intersection\n\n\n    var t = Math.abs(-b - Math.sqrt(discr)); // if t is negative, ray started inside sphere so clamp t to zero\n\n    if (intersection) {\n      vec3.copy(intersection, this.direction);\n      vec3.scaleAndAdd(intersection, this.origin, intersection, t);\n    }\n\n    return true;\n  };\n\n  Ray.prototype.intersectsPlane = function (plane, intersection) {\n    var t = (plane.distance - vec3.dot(plane.normal, this.origin)) / vec3.dot(plane.normal, this.direction);\n    var intersects = t >= 0;\n\n    if (intersects && intersection) {\n      vec3.scaleAndAdd(intersection, this.origin, this.direction, t);\n    }\n\n    return intersects;\n  };\n  /**\n   * faster than implements like Three.js\n   * @see https://github.com/playcanvas/engine/blob/master/src/shape/bounding-box.js#L161\n   */\n\n\n  Ray.prototype.intersectsAABBWithoutIntersection = function (aabb) {\n    var diff = tmpVecA;\n    var cross = tmpVecB;\n    var prod = tmpVecC;\n    var absDiff = tmpVecD;\n    var absDir = tmpVecE;\n    var rayDir = this.direction;\n    vec3.sub(diff, this.origin, aabb.center);\n    vec3.set(absDiff, Math.abs(diff[0]), Math.abs(diff[1]), Math.abs(diff[2]));\n    vec3.mul(prod, diff, rayDir);\n\n    if (absDiff[0] > aabb.halfExtents[0] && prod[0] >= 0 || absDiff[1] > aabb.halfExtents[1] && prod[1] >= 0 || absDiff[2] > aabb.halfExtents[2] && prod[2] >= 0) {\n      return false;\n    }\n\n    vec3.set(absDir, Math.abs(rayDir[0]), Math.abs(rayDir[1]), Math.abs(rayDir[2]));\n    vec3.cross(cross, rayDir, diff);\n    vec3.set(cross, Math.abs(cross[0]), Math.abs(cross[1]), Math.abs(cross[2]));\n    return !(cross[0] > aabb.halfExtents[1] * absDir[2] + aabb.halfExtents[2] * absDir[1] || cross[1] > aabb.halfExtents[0] * absDir[2] + aabb.halfExtents[2] * absDir[0] || cross[2] > aabb.halfExtents[0] * absDir[1] + aabb.halfExtents[1] * absDir[0]);\n  };\n\n  Ray.prototype.intersectAABBWithIntersection = function (aabb, intersection) {\n    var tMin = vec3.copy(vec3.create(), aabb.getMin());\n    vec3.sub(tMin, tMin, this.origin);\n    var tMax = vec3.copy(vec3.create(), aabb.getMax());\n    vec3.sub(tMax, tMax, this.origin);\n    var dir = this.direction; // Ensure that we are not dividing it by zero\n\n    if (dir[0] === 0) {\n      tMin[0] = tMin[0] < 0 ? -Number.MAX_VALUE : Number.MAX_VALUE;\n      tMax[0] = tMax[0] < 0 ? -Number.MAX_VALUE : Number.MAX_VALUE;\n    } else {\n      tMin[0] /= dir[0];\n      tMax[0] /= dir[0];\n    }\n\n    if (dir[1] === 0) {\n      tMin[1] = tMin[1] < 0 ? -Number.MAX_VALUE : Number.MAX_VALUE;\n      tMax[1] = tMax[1] < 0 ? -Number.MAX_VALUE : Number.MAX_VALUE;\n    } else {\n      tMin[1] /= dir[1];\n      tMax[1] /= dir[1];\n    }\n\n    if (dir[2] === 0) {\n      tMin[2] = tMin[2] < 0 ? -Number.MAX_VALUE : Number.MAX_VALUE;\n      tMax[2] = tMax[2] < 0 ? -Number.MAX_VALUE : Number.MAX_VALUE;\n    } else {\n      tMin[2] /= dir[2];\n      tMax[2] /= dir[2];\n    }\n\n    var realMin = vec3.set(tmpVecC, Math.min(tMin[0], tMax[0]), Math.min(tMin[1], tMax[1]), Math.min(tMin[2], tMax[2]));\n    var realMax = vec3.set(tmpVecD, Math.max(tMin[0], tMax[0]), Math.max(tMin[1], tMax[1]), Math.max(tMin[2], tMax[2]));\n    var minMax = Math.min(Math.min(realMax[0], realMax[1]), realMax[2]);\n    var maxMin = Math.max(Math.max(realMin[0], realMin[1]), realMin[2]);\n    var intersects = minMax >= maxMin && maxMin >= 0;\n\n    if (intersects) {\n      vec3.copy(intersection, this.direction);\n      vec3.scaleAndAdd(intersection, this.origin, intersection, maxMin);\n    }\n\n    return intersects;\n  };\n\n  return Ray;\n}();\n\nexport { Ray };"]},"metadata":{},"sourceType":"module"}