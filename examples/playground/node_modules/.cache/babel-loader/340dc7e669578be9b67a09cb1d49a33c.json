{"ast":null,"code":"import baseTimes from './_baseTimes.js';\nimport castFunction from './_castFunction.js';\nimport toInteger from './toInteger.js';\n/** Used as references for various `Number` constants. */\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/** Used as references for the maximum length and index of an array. */\n\nvar MAX_ARRAY_LENGTH = 4294967295;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeMin = Math.min;\n/**\n * Invokes the iteratee `n` times, returning an array of the results of\n * each invocation. The iteratee is invoked with one argument; (index).\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n * @example\n *\n * _.times(3, String);\n * // => ['0', '1', '2']\n *\n *  _.times(4, _.constant(0));\n * // => [0, 0, 0, 0]\n */\n\nfunction times(n, iteratee) {\n  n = toInteger(n);\n\n  if (n < 1 || n > MAX_SAFE_INTEGER) {\n    return [];\n  }\n\n  var index = MAX_ARRAY_LENGTH,\n      length = nativeMin(n, MAX_ARRAY_LENGTH);\n  iteratee = castFunction(iteratee);\n  n -= MAX_ARRAY_LENGTH;\n  var result = baseTimes(length, iteratee);\n\n  while (++index < n) {\n    iteratee(index);\n  }\n\n  return result;\n}\n\nexport default times;","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/lodash-es/times.js"],"names":["baseTimes","castFunction","toInteger","MAX_SAFE_INTEGER","MAX_ARRAY_LENGTH","nativeMin","Math","min","times","n","iteratee","index","length","result"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,iBAAtB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AAEA;;AACA,IAAIC,gBAAgB,GAAG,gBAAvB;AAEA;;AACA,IAAIC,gBAAgB,GAAG,UAAvB;AAEA;;AACA,IAAIC,SAAS,GAAGC,IAAI,CAACC,GAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,KAAT,CAAeC,CAAf,EAAkBC,QAAlB,EAA4B;AAC1BD,EAAAA,CAAC,GAAGP,SAAS,CAACO,CAAD,CAAb;;AACA,MAAIA,CAAC,GAAG,CAAJ,IAASA,CAAC,GAAGN,gBAAjB,EAAmC;AACjC,WAAO,EAAP;AACD;;AACD,MAAIQ,KAAK,GAAGP,gBAAZ;AAAA,MACIQ,MAAM,GAAGP,SAAS,CAACI,CAAD,EAAIL,gBAAJ,CADtB;AAGAM,EAAAA,QAAQ,GAAGT,YAAY,CAACS,QAAD,CAAvB;AACAD,EAAAA,CAAC,IAAIL,gBAAL;AAEA,MAAIS,MAAM,GAAGb,SAAS,CAACY,MAAD,EAASF,QAAT,CAAtB;;AACA,SAAO,EAAEC,KAAF,GAAUF,CAAjB,EAAoB;AAClBC,IAAAA,QAAQ,CAACC,KAAD,CAAR;AACD;;AACD,SAAOE,MAAP;AACD;;AAED,eAAeL,KAAf","sourcesContent":["import baseTimes from './_baseTimes.js';\nimport castFunction from './_castFunction.js';\nimport toInteger from './toInteger.js';\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used as references for the maximum length and index of an array. */\nvar MAX_ARRAY_LENGTH = 4294967295;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Invokes the iteratee `n` times, returning an array of the results of\n * each invocation. The iteratee is invoked with one argument; (index).\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n * @example\n *\n * _.times(3, String);\n * // => ['0', '1', '2']\n *\n *  _.times(4, _.constant(0));\n * // => [0, 0, 0, 0]\n */\nfunction times(n, iteratee) {\n  n = toInteger(n);\n  if (n < 1 || n > MAX_SAFE_INTEGER) {\n    return [];\n  }\n  var index = MAX_ARRAY_LENGTH,\n      length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n  iteratee = castFunction(iteratee);\n  n -= MAX_ARRAY_LENGTH;\n\n  var result = baseTimes(length, iteratee);\n  while (++index < n) {\n    iteratee(index);\n  }\n  return result;\n}\n\nexport default times;\n"]},"metadata":{},"sourceType":"module"}