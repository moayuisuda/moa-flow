{"ast":null,"code":"import { tuple } from './type'; // ================== Collapse Motion ==================\n\nvar getCollapsedHeight = function getCollapsedHeight() {\n  return {\n    height: 0,\n    opacity: 0\n  };\n};\n\nvar getRealHeight = function getRealHeight(node) {\n  var scrollHeight = node.scrollHeight;\n  return {\n    height: scrollHeight,\n    opacity: 1\n  };\n};\n\nvar getCurrentHeight = function getCurrentHeight(node) {\n  return {\n    height: node ? node.offsetHeight : 0\n  };\n};\n\nvar skipOpacityTransition = function skipOpacityTransition(_, event) {\n  return (event === null || event === void 0 ? void 0 : event.deadline) === true || event.propertyName === 'height';\n};\n\nvar collapseMotion = {\n  motionName: 'ant-motion-collapse',\n  onAppearStart: getCollapsedHeight,\n  onEnterStart: getCollapsedHeight,\n  onAppearActive: getRealHeight,\n  onEnterActive: getRealHeight,\n  onLeaveStart: getCurrentHeight,\n  onLeaveActive: getCollapsedHeight,\n  onAppearEnd: skipOpacityTransition,\n  onEnterEnd: skipOpacityTransition,\n  onLeaveEnd: skipOpacityTransition,\n  motionDeadline: 500\n};\nvar SelectPlacements = tuple('bottomLeft', 'bottomRight', 'topLeft', 'topRight');\n\nvar getTransitionDirection = function getTransitionDirection(placement) {\n  if (placement !== undefined && (placement === 'topLeft' || placement === 'topRight')) {\n    return \"slide-down\";\n  }\n\n  return \"slide-up\";\n};\n\nvar getTransitionName = function getTransitionName(rootPrefixCls, motion, transitionName) {\n  if (transitionName !== undefined) {\n    return transitionName;\n  }\n\n  return \"\".concat(rootPrefixCls, \"-\").concat(motion);\n};\n\nexport { getTransitionName, getTransitionDirection };\nexport default collapseMotion;","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/antd/es/_util/motion.js"],"names":["tuple","getCollapsedHeight","height","opacity","getRealHeight","node","scrollHeight","getCurrentHeight","offsetHeight","skipOpacityTransition","_","event","deadline","propertyName","collapseMotion","motionName","onAppearStart","onEnterStart","onAppearActive","onEnterActive","onLeaveStart","onLeaveActive","onAppearEnd","onEnterEnd","onLeaveEnd","motionDeadline","SelectPlacements","getTransitionDirection","placement","undefined","getTransitionName","rootPrefixCls","motion","transitionName","concat"],"mappings":"AAAA,SAASA,KAAT,QAAsB,QAAtB,C,CAAgC;;AAEhC,IAAIC,kBAAkB,GAAG,SAASA,kBAAT,GAA8B;AACrD,SAAO;AACLC,IAAAA,MAAM,EAAE,CADH;AAELC,IAAAA,OAAO,EAAE;AAFJ,GAAP;AAID,CALD;;AAOA,IAAIC,aAAa,GAAG,SAASA,aAAT,CAAuBC,IAAvB,EAA6B;AAC/C,MAAIC,YAAY,GAAGD,IAAI,CAACC,YAAxB;AACA,SAAO;AACLJ,IAAAA,MAAM,EAAEI,YADH;AAELH,IAAAA,OAAO,EAAE;AAFJ,GAAP;AAID,CAND;;AAQA,IAAII,gBAAgB,GAAG,SAASA,gBAAT,CAA0BF,IAA1B,EAAgC;AACrD,SAAO;AACLH,IAAAA,MAAM,EAAEG,IAAI,GAAGA,IAAI,CAACG,YAAR,GAAuB;AAD9B,GAAP;AAGD,CAJD;;AAMA,IAAIC,qBAAqB,GAAG,SAASA,qBAAT,CAA+BC,CAA/B,EAAkCC,KAAlC,EAAyC;AACnE,SAAO,CAACA,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK,KAAK,CAAjC,GAAqC,KAAK,CAA1C,GAA8CA,KAAK,CAACC,QAArD,MAAmE,IAAnE,IAA2ED,KAAK,CAACE,YAAN,KAAuB,QAAzG;AACD,CAFD;;AAIA,IAAIC,cAAc,GAAG;AACnBC,EAAAA,UAAU,EAAE,qBADO;AAEnBC,EAAAA,aAAa,EAAEf,kBAFI;AAGnBgB,EAAAA,YAAY,EAAEhB,kBAHK;AAInBiB,EAAAA,cAAc,EAAEd,aAJG;AAKnBe,EAAAA,aAAa,EAAEf,aALI;AAMnBgB,EAAAA,YAAY,EAAEb,gBANK;AAOnBc,EAAAA,aAAa,EAAEpB,kBAPI;AAQnBqB,EAAAA,WAAW,EAAEb,qBARM;AASnBc,EAAAA,UAAU,EAAEd,qBATO;AAUnBe,EAAAA,UAAU,EAAEf,qBAVO;AAWnBgB,EAAAA,cAAc,EAAE;AAXG,CAArB;AAaA,IAAIC,gBAAgB,GAAG1B,KAAK,CAAC,YAAD,EAAe,aAAf,EAA8B,SAA9B,EAAyC,UAAzC,CAA5B;;AAEA,IAAI2B,sBAAsB,GAAG,SAASA,sBAAT,CAAgCC,SAAhC,EAA2C;AACtE,MAAIA,SAAS,KAAKC,SAAd,KAA4BD,SAAS,KAAK,SAAd,IAA2BA,SAAS,KAAK,UAArE,CAAJ,EAAsF;AACpF,WAAO,YAAP;AACD;;AAED,SAAO,UAAP;AACD,CAND;;AAQA,IAAIE,iBAAiB,GAAG,SAASA,iBAAT,CAA2BC,aAA3B,EAA0CC,MAA1C,EAAkDC,cAAlD,EAAkE;AACxF,MAAIA,cAAc,KAAKJ,SAAvB,EAAkC;AAChC,WAAOI,cAAP;AACD;;AAED,SAAO,GAAGC,MAAH,CAAUH,aAAV,EAAyB,GAAzB,EAA8BG,MAA9B,CAAqCF,MAArC,CAAP;AACD,CAND;;AAQA,SAASF,iBAAT,EAA4BH,sBAA5B;AACA,eAAeb,cAAf","sourcesContent":["import { tuple } from './type'; // ================== Collapse Motion ==================\n\nvar getCollapsedHeight = function getCollapsedHeight() {\n  return {\n    height: 0,\n    opacity: 0\n  };\n};\n\nvar getRealHeight = function getRealHeight(node) {\n  var scrollHeight = node.scrollHeight;\n  return {\n    height: scrollHeight,\n    opacity: 1\n  };\n};\n\nvar getCurrentHeight = function getCurrentHeight(node) {\n  return {\n    height: node ? node.offsetHeight : 0\n  };\n};\n\nvar skipOpacityTransition = function skipOpacityTransition(_, event) {\n  return (event === null || event === void 0 ? void 0 : event.deadline) === true || event.propertyName === 'height';\n};\n\nvar collapseMotion = {\n  motionName: 'ant-motion-collapse',\n  onAppearStart: getCollapsedHeight,\n  onEnterStart: getCollapsedHeight,\n  onAppearActive: getRealHeight,\n  onEnterActive: getRealHeight,\n  onLeaveStart: getCurrentHeight,\n  onLeaveActive: getCollapsedHeight,\n  onAppearEnd: skipOpacityTransition,\n  onEnterEnd: skipOpacityTransition,\n  onLeaveEnd: skipOpacityTransition,\n  motionDeadline: 500\n};\nvar SelectPlacements = tuple('bottomLeft', 'bottomRight', 'topLeft', 'topRight');\n\nvar getTransitionDirection = function getTransitionDirection(placement) {\n  if (placement !== undefined && (placement === 'topLeft' || placement === 'topRight')) {\n    return \"slide-down\";\n  }\n\n  return \"slide-up\";\n};\n\nvar getTransitionName = function getTransitionName(rootPrefixCls, motion, transitionName) {\n  if (transitionName !== undefined) {\n    return transitionName;\n  }\n\n  return \"\".concat(rootPrefixCls, \"-\").concat(motion);\n};\n\nexport { getTransitionName, getTransitionDirection };\nexport default collapseMotion;"]},"metadata":{},"sourceType":"module"}