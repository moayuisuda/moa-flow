{"ast":null,"code":"import createPadding from './_createPadding.js';\nimport stringSize from './_stringSize.js';\nimport toInteger from './toInteger.js';\nimport toString from './toString.js';\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeCeil = Math.ceil,\n    nativeFloor = Math.floor;\n/**\n * Pads `string` on the left and right sides if it's shorter than `length`.\n * Padding characters are truncated if they can't be evenly divided by `length`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to pad.\n * @param {number} [length=0] The padding length.\n * @param {string} [chars=' '] The string used as padding.\n * @returns {string} Returns the padded string.\n * @example\n *\n * _.pad('abc', 8);\n * // => '  abc   '\n *\n * _.pad('abc', 8, '_-');\n * // => '_-abc_-_'\n *\n * _.pad('abc', 3);\n * // => 'abc'\n */\n\nfunction pad(string, length, chars) {\n  string = toString(string);\n  length = toInteger(length);\n  var strLength = length ? stringSize(string) : 0;\n\n  if (!length || strLength >= length) {\n    return string;\n  }\n\n  var mid = (length - strLength) / 2;\n  return createPadding(nativeFloor(mid), chars) + string + createPadding(nativeCeil(mid), chars);\n}\n\nexport default pad;","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/lodash-es/pad.js"],"names":["createPadding","stringSize","toInteger","toString","nativeCeil","Math","ceil","nativeFloor","floor","pad","string","length","chars","strLength","mid"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,qBAA1B;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAOC,QAAP,MAAqB,eAArB;AAEA;;AACA,IAAIC,UAAU,GAAGC,IAAI,CAACC,IAAtB;AAAA,IACIC,WAAW,GAAGF,IAAI,CAACG,KADvB;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,GAAT,CAAaC,MAAb,EAAqBC,MAArB,EAA6BC,KAA7B,EAAoC;AAClCF,EAAAA,MAAM,GAAGP,QAAQ,CAACO,MAAD,CAAjB;AACAC,EAAAA,MAAM,GAAGT,SAAS,CAACS,MAAD,CAAlB;AAEA,MAAIE,SAAS,GAAGF,MAAM,GAAGV,UAAU,CAACS,MAAD,CAAb,GAAwB,CAA9C;;AACA,MAAI,CAACC,MAAD,IAAWE,SAAS,IAAIF,MAA5B,EAAoC;AAClC,WAAOD,MAAP;AACD;;AACD,MAAII,GAAG,GAAG,CAACH,MAAM,GAAGE,SAAV,IAAuB,CAAjC;AACA,SACEb,aAAa,CAACO,WAAW,CAACO,GAAD,CAAZ,EAAmBF,KAAnB,CAAb,GACAF,MADA,GAEAV,aAAa,CAACI,UAAU,CAACU,GAAD,CAAX,EAAkBF,KAAlB,CAHf;AAKD;;AAED,eAAeH,GAAf","sourcesContent":["import createPadding from './_createPadding.js';\nimport stringSize from './_stringSize.js';\nimport toInteger from './toInteger.js';\nimport toString from './toString.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeFloor = Math.floor;\n\n/**\n * Pads `string` on the left and right sides if it's shorter than `length`.\n * Padding characters are truncated if they can't be evenly divided by `length`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to pad.\n * @param {number} [length=0] The padding length.\n * @param {string} [chars=' '] The string used as padding.\n * @returns {string} Returns the padded string.\n * @example\n *\n * _.pad('abc', 8);\n * // => '  abc   '\n *\n * _.pad('abc', 8, '_-');\n * // => '_-abc_-_'\n *\n * _.pad('abc', 3);\n * // => 'abc'\n */\nfunction pad(string, length, chars) {\n  string = toString(string);\n  length = toInteger(length);\n\n  var strLength = length ? stringSize(string) : 0;\n  if (!length || strLength >= length) {\n    return string;\n  }\n  var mid = (length - strLength) / 2;\n  return (\n    createPadding(nativeFloor(mid), chars) +\n    string +\n    createPadding(nativeCeil(mid), chars)\n  );\n}\n\nexport default pad;\n"]},"metadata":{},"sourceType":"module"}