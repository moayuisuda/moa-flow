{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { FederatedMouseEvent } from './FederatedMouseEvent';\n\nvar FederatedPointerEvent =\n/** @class */\nfunction (_super) {\n  __extends(FederatedPointerEvent, _super);\n\n  function FederatedPointerEvent() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\n     * The width of the pointer's contact along the x-axis, measured in CSS pixels.\n     * radiusX of TouchEvents will be represented by this value.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/width\n     */\n\n\n    _this.width = 0;\n    /**\n     * The height of the pointer's contact along the y-axis, measured in CSS pixels.\n     * radiusY of TouchEvents will be represented by this value.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/height\n     */\n\n    _this.height = 0;\n    /**\n     * Indicates whether or not the pointer device that created the event is the primary pointer.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/isPrimary\n     */\n\n    _this.isPrimary = false;\n    return _this;\n  }\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/getCoalescedEvents\n   */\n\n\n  FederatedPointerEvent.prototype.getCoalescedEvents = function () {\n    if (this.type === 'pointermove' || this.type === 'mousemove' || this.type === 'touchmove') {\n      return [this];\n    }\n\n    return [];\n  };\n  /**\n   * @see https://chromestatus.com/feature/5765569655603200\n   */\n\n\n  FederatedPointerEvent.prototype.getPredictedEvents = function () {\n    throw new Error('getPredictedEvents is not supported!');\n  };\n\n  return FederatedPointerEvent;\n}(FederatedMouseEvent);\n\nexport { FederatedPointerEvent };","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/@antv/g/es/dom/FederatedPointerEvent.js"],"names":["__extends","FederatedMouseEvent","FederatedPointerEvent","_super","_this","apply","arguments","width","height","isPrimary","prototype","getCoalescedEvents","type","getPredictedEvents","Error"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,mBAAT,QAAoC,uBAApC;;AAEA,IAAIC,qBAAqB;AACzB;AACA,UAAUC,MAAV,EAAkB;AAChBH,EAAAA,SAAS,CAACE,qBAAD,EAAwBC,MAAxB,CAAT;;AAEA,WAASD,qBAAT,GAAiC;AAC/B,QAAIE,KAAK,GAAGD,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACE,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAAhE;AACA;AACJ;AACA;AACA;AACA;AACA;;;AAGIF,IAAAA,KAAK,CAACG,KAAN,GAAc,CAAd;AACA;AACJ;AACA;AACA;AACA;AACA;;AAEIH,IAAAA,KAAK,CAACI,MAAN,GAAe,CAAf;AACA;AACJ;AACA;AACA;AACA;;AAEIJ,IAAAA,KAAK,CAACK,SAAN,GAAkB,KAAlB;AACA,WAAOL,KAAP;AACD;AACD;AACF;AACA;;;AAGEF,EAAAA,qBAAqB,CAACQ,SAAtB,CAAgCC,kBAAhC,GAAqD,YAAY;AAC/D,QAAI,KAAKC,IAAL,KAAc,aAAd,IAA+B,KAAKA,IAAL,KAAc,WAA7C,IAA4D,KAAKA,IAAL,KAAc,WAA9E,EAA2F;AACzF,aAAO,CAAC,IAAD,CAAP;AACD;;AAED,WAAO,EAAP;AACD,GAND;AAOA;AACF;AACA;;;AAGEV,EAAAA,qBAAqB,CAACQ,SAAtB,CAAgCG,kBAAhC,GAAqD,YAAY;AAC/D,UAAM,IAAIC,KAAJ,CAAU,sCAAV,CAAN;AACD,GAFD;;AAIA,SAAOZ,qBAAP;AACD,CArDD,CAqDED,mBArDF,CAFA;;AAyDA,SAASC,qBAAT","sourcesContent":["import { __extends } from \"tslib\";\nimport { FederatedMouseEvent } from './FederatedMouseEvent';\n\nvar FederatedPointerEvent =\n/** @class */\nfunction (_super) {\n  __extends(FederatedPointerEvent, _super);\n\n  function FederatedPointerEvent() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\n     * The width of the pointer's contact along the x-axis, measured in CSS pixels.\n     * radiusX of TouchEvents will be represented by this value.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/width\n     */\n\n\n    _this.width = 0;\n    /**\n     * The height of the pointer's contact along the y-axis, measured in CSS pixels.\n     * radiusY of TouchEvents will be represented by this value.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/height\n     */\n\n    _this.height = 0;\n    /**\n     * Indicates whether or not the pointer device that created the event is the primary pointer.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/isPrimary\n     */\n\n    _this.isPrimary = false;\n    return _this;\n  }\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/getCoalescedEvents\n   */\n\n\n  FederatedPointerEvent.prototype.getCoalescedEvents = function () {\n    if (this.type === 'pointermove' || this.type === 'mousemove' || this.type === 'touchmove') {\n      return [this];\n    }\n\n    return [];\n  };\n  /**\n   * @see https://chromestatus.com/feature/5765569655603200\n   */\n\n\n  FederatedPointerEvent.prototype.getPredictedEvents = function () {\n    throw new Error('getPredictedEvents is not supported!');\n  };\n\n  return FederatedPointerEvent;\n}(FederatedMouseEvent);\n\nexport { FederatedPointerEvent };"]},"metadata":{},"sourceType":"module"}