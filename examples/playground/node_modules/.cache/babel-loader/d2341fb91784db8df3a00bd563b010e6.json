{"ast":null,"code":"import assignValue from './_assignValue.js';\nimport castPath from './_castPath.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\nimport toKey from './_toKey.js';\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\n\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n\n  path = castPath(path, object);\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n      return object;\n    }\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n\n      if (newValue === undefined) {\n        newValue = isObject(objValue) ? objValue : isIndex(path[index + 1]) ? [] : {};\n      }\n    }\n\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n\n  return object;\n}\n\nexport default baseSet;","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/lodash-es/_baseSet.js"],"names":["assignValue","castPath","isIndex","isObject","toKey","baseSet","object","path","value","customizer","index","length","lastIndex","nested","key","newValue","objValue","undefined"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,mBAAxB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,OAAT,CAAiBC,MAAjB,EAAyBC,IAAzB,EAA+BC,KAA/B,EAAsCC,UAAtC,EAAkD;AAChD,MAAI,CAACN,QAAQ,CAACG,MAAD,CAAb,EAAuB;AACrB,WAAOA,MAAP;AACD;;AACDC,EAAAA,IAAI,GAAGN,QAAQ,CAACM,IAAD,EAAOD,MAAP,CAAf;AAEA,MAAII,KAAK,GAAG,CAAC,CAAb;AAAA,MACIC,MAAM,GAAGJ,IAAI,CAACI,MADlB;AAAA,MAEIC,SAAS,GAAGD,MAAM,GAAG,CAFzB;AAAA,MAGIE,MAAM,GAAGP,MAHb;;AAKA,SAAOO,MAAM,IAAI,IAAV,IAAkB,EAAEH,KAAF,GAAUC,MAAnC,EAA2C;AACzC,QAAIG,GAAG,GAAGV,KAAK,CAACG,IAAI,CAACG,KAAD,CAAL,CAAf;AAAA,QACIK,QAAQ,GAAGP,KADf;;AAGA,QAAIM,GAAG,KAAK,WAAR,IAAuBA,GAAG,KAAK,aAA/B,IAAgDA,GAAG,KAAK,WAA5D,EAAyE;AACvE,aAAOR,MAAP;AACD;;AAED,QAAII,KAAK,IAAIE,SAAb,EAAwB;AACtB,UAAII,QAAQ,GAAGH,MAAM,CAACC,GAAD,CAArB;AACAC,MAAAA,QAAQ,GAAGN,UAAU,GAAGA,UAAU,CAACO,QAAD,EAAWF,GAAX,EAAgBD,MAAhB,CAAb,GAAuCI,SAA5D;;AACA,UAAIF,QAAQ,KAAKE,SAAjB,EAA4B;AAC1BF,QAAAA,QAAQ,GAAGZ,QAAQ,CAACa,QAAD,CAAR,GACPA,QADO,GAENd,OAAO,CAACK,IAAI,CAACG,KAAK,GAAG,CAAT,CAAL,CAAP,GAA2B,EAA3B,GAAgC,EAFrC;AAGD;AACF;;AACDV,IAAAA,WAAW,CAACa,MAAD,EAASC,GAAT,EAAcC,QAAd,CAAX;AACAF,IAAAA,MAAM,GAAGA,MAAM,CAACC,GAAD,CAAf;AACD;;AACD,SAAOR,MAAP;AACD;;AAED,eAAeD,OAAf","sourcesContent":["import assignValue from './_assignValue.js';\nimport castPath from './_castPath.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n      return object;\n    }\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nexport default baseSet;\n"]},"metadata":{},"sourceType":"module"}