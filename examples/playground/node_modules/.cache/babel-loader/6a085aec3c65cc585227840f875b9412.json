{"ast":null,"code":"import { __read, __spreadArray } from \"tslib\";\nimport { distance, isNumberEqual, getBBoxByArray, piMod } from './util';\nimport line from './line';\nimport { snapLength, nearestPoint as _nearestPoint } from './bezier';\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t; // t * t * t 的性能大概是 Math.pow(t, 3) 的三倍\n\n  return onet * onet * onet * p0 + 3 * p1 * t * onet * onet + 3 * p2 * t * t * onet + p3 * t * t * t;\n}\n\nfunction derivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (onet * onet * (p1 - p0) + 2 * onet * t * (p2 - p1) + t * t * (p3 - p2));\n}\n\nfunction extrema(p0, p1, p2, p3) {\n  var a = -3 * p0 + 9 * p1 - 9 * p2 + 3 * p3;\n  var b = 6 * p0 - 12 * p1 + 6 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var extremas = [];\n  var t1;\n  var t2;\n  var discSqrt;\n\n  if (isNumberEqual(a, 0)) {\n    if (!isNumberEqual(b, 0)) {\n      t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extremas.push(t1);\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isNumberEqual(disc, 0)) {\n      extremas.push(-b / (2 * a));\n    } else if (disc > 0) {\n      discSqrt = Math.sqrt(disc);\n      t1 = (-b + discSqrt) / (2 * a);\n      t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extremas.push(t1);\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extremas.push(t2);\n      }\n    }\n  }\n\n  return extremas;\n} // 分割贝塞尔曲线\n\n\nfunction divideCubic(x1, y1, x2, y2, x3, y3, x4, y4, t) {\n  // 划分点\n  var xt = cubicAt(x1, x2, x3, x4, t);\n  var yt = cubicAt(y1, y2, y3, y4, t); // 计算两点之间的差值点\n\n  var c1 = line.pointAt(x1, y1, x2, y2, t);\n  var c2 = line.pointAt(x2, y2, x3, y3, t);\n  var c3 = line.pointAt(x3, y3, x4, y4, t);\n  var c12 = line.pointAt(c1.x, c1.y, c2.x, c2.y, t);\n  var c23 = line.pointAt(c2.x, c2.y, c3.x, c3.y, t);\n  return [[x1, y1, c1.x, c1.y, c12.x, c12.y, xt, yt], [xt, yt, c23.x, c23.y, c3.x, c3.y, x4, y4]];\n} // 使用迭代法取贝塞尔曲线的长度，二阶和三阶分开写，更清晰和便于调试\n\n\nfunction cubicLength(x1, y1, x2, y2, x3, y3, x4, y4, iterationCount) {\n  if (iterationCount === 0) {\n    return snapLength([x1, x2, x3, x4], [y1, y2, y3, y4]);\n  }\n\n  var cubics = divideCubic(x1, y1, x2, y2, x3, y3, x4, y4, 0.5);\n\n  var left = __spreadArray(__spreadArray([], __read(cubics[0]), false), [iterationCount - 1], false);\n\n  var right = __spreadArray(__spreadArray([], __read(cubics[1]), false), [iterationCount - 1], false);\n\n  return cubicLength.apply(void 0, __spreadArray([], __read(left), false)) + cubicLength.apply(void 0, __spreadArray([], __read(right), false));\n}\n\nexport default {\n  extrema: extrema,\n  box: function box(x1, y1, x2, y2, x3, y3, x4, y4) {\n    var xArr = [x1, x4];\n    var yArr = [y1, y4];\n    var xExtrema = extrema(x1, x2, x3, x4);\n    var yExtrema = extrema(y1, y2, y3, y4);\n\n    for (var i = 0; i < xExtrema.length; i++) {\n      xArr.push(cubicAt(x1, x2, x3, x4, xExtrema[i]));\n    }\n\n    for (var i = 0; i < yExtrema.length; i++) {\n      yArr.push(cubicAt(y1, y2, y3, y4, yExtrema[i]));\n    }\n\n    return getBBoxByArray(xArr, yArr);\n  },\n  length: function length(x1, y1, x2, y2, x3, y3, x4, y4) {\n    // 迭代三次，划分成 8 段求长度\n    return cubicLength(x1, y1, x2, y2, x3, y3, x4, y4, 3);\n  },\n  nearestPoint: function nearestPoint(x1, y1, x2, y2, x3, y3, x4, y4, x0, y0, length) {\n    return _nearestPoint([x1, x2, x3, x4], [y1, y2, y3, y4], x0, y0, cubicAt, length);\n  },\n  pointDistance: function pointDistance(x1, y1, x2, y2, x3, y3, x4, y4, x0, y0, length) {\n    var point = this.nearestPoint(x1, y1, x2, y2, x3, y3, x4, y4, x0, y0, length);\n    return distance(point.x, point.y, x0, y0);\n  },\n  interpolationAt: cubicAt,\n  pointAt: function pointAt(x1, y1, x2, y2, x3, y3, x4, y4, t) {\n    return {\n      x: cubicAt(x1, x2, x3, x4, t),\n      y: cubicAt(y1, y2, y3, y4, t)\n    };\n  },\n  divide: function divide(x1, y1, x2, y2, x3, y3, x4, y4, t) {\n    return divideCubic(x1, y1, x2, y2, x3, y3, x4, y4, t);\n  },\n  tangentAngle: function tangentAngle(x1, y1, x2, y2, x3, y3, x4, y4, t) {\n    var dx = derivativeAt(x1, x2, x3, x4, t);\n    var dy = derivativeAt(y1, y2, y3, y4, t);\n    return piMod(Math.atan2(dy, dx));\n  }\n};","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/@antv/g-math/es/cubic.js"],"names":["__read","__spreadArray","distance","isNumberEqual","getBBoxByArray","piMod","line","snapLength","nearestPoint","_nearestPoint","cubicAt","p0","p1","p2","p3","t","onet","derivativeAt","extrema","a","b","c","extremas","t1","t2","discSqrt","push","disc","Math","sqrt","divideCubic","x1","y1","x2","y2","x3","y3","x4","y4","xt","yt","c1","pointAt","c2","c3","c12","x","y","c23","cubicLength","iterationCount","cubics","left","right","apply","box","xArr","yArr","xExtrema","yExtrema","i","length","x0","y0","pointDistance","point","interpolationAt","divide","tangentAngle","dx","dy","atan2"],"mappings":"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","sourcesContent":["import { __read, __spreadArray } from \"tslib\";\nimport { distance, isNumberEqual, getBBoxByArray, piMod } from './util';\nimport line from './line';\nimport { snapLength, nearestPoint as _nearestPoint } from './bezier';\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t; // t * t * t 的性能大概是 Math.pow(t, 3) 的三倍\n\n  return onet * onet * onet * p0 + 3 * p1 * t * onet * onet + 3 * p2 * t * t * onet + p3 * t * t * t;\n}\n\nfunction derivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (onet * onet * (p1 - p0) + 2 * onet * t * (p2 - p1) + t * t * (p3 - p2));\n}\n\nfunction extrema(p0, p1, p2, p3) {\n  var a = -3 * p0 + 9 * p1 - 9 * p2 + 3 * p3;\n  var b = 6 * p0 - 12 * p1 + 6 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var extremas = [];\n  var t1;\n  var t2;\n  var discSqrt;\n\n  if (isNumberEqual(a, 0)) {\n    if (!isNumberEqual(b, 0)) {\n      t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extremas.push(t1);\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isNumberEqual(disc, 0)) {\n      extremas.push(-b / (2 * a));\n    } else if (disc > 0) {\n      discSqrt = Math.sqrt(disc);\n      t1 = (-b + discSqrt) / (2 * a);\n      t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extremas.push(t1);\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extremas.push(t2);\n      }\n    }\n  }\n\n  return extremas;\n} // 分割贝塞尔曲线\n\n\nfunction divideCubic(x1, y1, x2, y2, x3, y3, x4, y4, t) {\n  // 划分点\n  var xt = cubicAt(x1, x2, x3, x4, t);\n  var yt = cubicAt(y1, y2, y3, y4, t); // 计算两点之间的差值点\n\n  var c1 = line.pointAt(x1, y1, x2, y2, t);\n  var c2 = line.pointAt(x2, y2, x3, y3, t);\n  var c3 = line.pointAt(x3, y3, x4, y4, t);\n  var c12 = line.pointAt(c1.x, c1.y, c2.x, c2.y, t);\n  var c23 = line.pointAt(c2.x, c2.y, c3.x, c3.y, t);\n  return [[x1, y1, c1.x, c1.y, c12.x, c12.y, xt, yt], [xt, yt, c23.x, c23.y, c3.x, c3.y, x4, y4]];\n} // 使用迭代法取贝塞尔曲线的长度，二阶和三阶分开写，更清晰和便于调试\n\n\nfunction cubicLength(x1, y1, x2, y2, x3, y3, x4, y4, iterationCount) {\n  if (iterationCount === 0) {\n    return snapLength([x1, x2, x3, x4], [y1, y2, y3, y4]);\n  }\n\n  var cubics = divideCubic(x1, y1, x2, y2, x3, y3, x4, y4, 0.5);\n\n  var left = __spreadArray(__spreadArray([], __read(cubics[0]), false), [iterationCount - 1], false);\n\n  var right = __spreadArray(__spreadArray([], __read(cubics[1]), false), [iterationCount - 1], false);\n\n  return cubicLength.apply(void 0, __spreadArray([], __read(left), false)) + cubicLength.apply(void 0, __spreadArray([], __read(right), false));\n}\n\nexport default {\n  extrema: extrema,\n  box: function box(x1, y1, x2, y2, x3, y3, x4, y4) {\n    var xArr = [x1, x4];\n    var yArr = [y1, y4];\n    var xExtrema = extrema(x1, x2, x3, x4);\n    var yExtrema = extrema(y1, y2, y3, y4);\n\n    for (var i = 0; i < xExtrema.length; i++) {\n      xArr.push(cubicAt(x1, x2, x3, x4, xExtrema[i]));\n    }\n\n    for (var i = 0; i < yExtrema.length; i++) {\n      yArr.push(cubicAt(y1, y2, y3, y4, yExtrema[i]));\n    }\n\n    return getBBoxByArray(xArr, yArr);\n  },\n  length: function length(x1, y1, x2, y2, x3, y3, x4, y4) {\n    // 迭代三次，划分成 8 段求长度\n    return cubicLength(x1, y1, x2, y2, x3, y3, x4, y4, 3);\n  },\n  nearestPoint: function nearestPoint(x1, y1, x2, y2, x3, y3, x4, y4, x0, y0, length) {\n    return _nearestPoint([x1, x2, x3, x4], [y1, y2, y3, y4], x0, y0, cubicAt, length);\n  },\n  pointDistance: function pointDistance(x1, y1, x2, y2, x3, y3, x4, y4, x0, y0, length) {\n    var point = this.nearestPoint(x1, y1, x2, y2, x3, y3, x4, y4, x0, y0, length);\n    return distance(point.x, point.y, x0, y0);\n  },\n  interpolationAt: cubicAt,\n  pointAt: function pointAt(x1, y1, x2, y2, x3, y3, x4, y4, t) {\n    return {\n      x: cubicAt(x1, x2, x3, x4, t),\n      y: cubicAt(y1, y2, y3, y4, t)\n    };\n  },\n  divide: function divide(x1, y1, x2, y2, x3, y3, x4, y4, t) {\n    return divideCubic(x1, y1, x2, y2, x3, y3, x4, y4, t);\n  },\n  tangentAngle: function tangentAngle(x1, y1, x2, y2, x3, y3, x4, y4, t) {\n    var dx = derivativeAt(x1, x2, x3, x4, t);\n    var dy = derivativeAt(y1, y2, y3, y4, t);\n    return piMod(Math.atan2(dy, dx));\n  }\n};"]},"metadata":{},"sourceType":"module"}