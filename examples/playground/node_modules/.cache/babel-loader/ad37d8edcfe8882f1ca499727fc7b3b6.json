{"ast":null,"code":"import isSymbol from './isSymbol.js';\n/** Used as references for the maximum length and index of an array. */\n\nvar MAX_ARRAY_LENGTH = 4294967295,\n    MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeFloor = Math.floor,\n    nativeMin = Math.min;\n/**\n * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n * which invokes `iteratee` for `value` and each element of `array` to compute\n * their sort ranking. The iteratee is invoked with one argument; (value).\n *\n * @private\n * @param {Array} array The sorted array to inspect.\n * @param {*} value The value to evaluate.\n * @param {Function} iteratee The iteratee invoked per element.\n * @param {boolean} [retHighest] Specify returning the highest qualified index.\n * @returns {number} Returns the index at which `value` should be inserted\n *  into `array`.\n */\n\nfunction baseSortedIndexBy(array, value, iteratee, retHighest) {\n  var low = 0,\n      high = array == null ? 0 : array.length;\n\n  if (high === 0) {\n    return 0;\n  }\n\n  value = iteratee(value);\n  var valIsNaN = value !== value,\n      valIsNull = value === null,\n      valIsSymbol = isSymbol(value),\n      valIsUndefined = value === undefined;\n\n  while (low < high) {\n    var mid = nativeFloor((low + high) / 2),\n        computed = iteratee(array[mid]),\n        othIsDefined = computed !== undefined,\n        othIsNull = computed === null,\n        othIsReflexive = computed === computed,\n        othIsSymbol = isSymbol(computed);\n\n    if (valIsNaN) {\n      var setLow = retHighest || othIsReflexive;\n    } else if (valIsUndefined) {\n      setLow = othIsReflexive && (retHighest || othIsDefined);\n    } else if (valIsNull) {\n      setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n    } else if (valIsSymbol) {\n      setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n    } else if (othIsNull || othIsSymbol) {\n      setLow = false;\n    } else {\n      setLow = retHighest ? computed <= value : computed < value;\n    }\n\n    if (setLow) {\n      low = mid + 1;\n    } else {\n      high = mid;\n    }\n  }\n\n  return nativeMin(high, MAX_ARRAY_INDEX);\n}\n\nexport default baseSortedIndexBy;","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/lodash-es/_baseSortedIndexBy.js"],"names":["isSymbol","MAX_ARRAY_LENGTH","MAX_ARRAY_INDEX","nativeFloor","Math","floor","nativeMin","min","baseSortedIndexBy","array","value","iteratee","retHighest","low","high","length","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","undefined","mid","computed","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,eAArB;AAEA;;AACA,IAAIC,gBAAgB,GAAG,UAAvB;AAAA,IACIC,eAAe,GAAGD,gBAAgB,GAAG,CADzC;AAGA;;AACA,IAAIE,WAAW,GAAGC,IAAI,CAACC,KAAvB;AAAA,IACIC,SAAS,GAAGF,IAAI,CAACG,GADrB;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,iBAAT,CAA2BC,KAA3B,EAAkCC,KAAlC,EAAyCC,QAAzC,EAAmDC,UAAnD,EAA+D;AAC7D,MAAIC,GAAG,GAAG,CAAV;AAAA,MACIC,IAAI,GAAGL,KAAK,IAAI,IAAT,GAAgB,CAAhB,GAAoBA,KAAK,CAACM,MADrC;;AAEA,MAAID,IAAI,KAAK,CAAb,EAAgB;AACd,WAAO,CAAP;AACD;;AAEDJ,EAAAA,KAAK,GAAGC,QAAQ,CAACD,KAAD,CAAhB;AACA,MAAIM,QAAQ,GAAGN,KAAK,KAAKA,KAAzB;AAAA,MACIO,SAAS,GAAGP,KAAK,KAAK,IAD1B;AAAA,MAEIQ,WAAW,GAAGlB,QAAQ,CAACU,KAAD,CAF1B;AAAA,MAGIS,cAAc,GAAGT,KAAK,KAAKU,SAH/B;;AAKA,SAAOP,GAAG,GAAGC,IAAb,EAAmB;AACjB,QAAIO,GAAG,GAAGlB,WAAW,CAAC,CAACU,GAAG,GAAGC,IAAP,IAAe,CAAhB,CAArB;AAAA,QACIQ,QAAQ,GAAGX,QAAQ,CAACF,KAAK,CAACY,GAAD,CAAN,CADvB;AAAA,QAEIE,YAAY,GAAGD,QAAQ,KAAKF,SAFhC;AAAA,QAGII,SAAS,GAAGF,QAAQ,KAAK,IAH7B;AAAA,QAIIG,cAAc,GAAGH,QAAQ,KAAKA,QAJlC;AAAA,QAKII,WAAW,GAAG1B,QAAQ,CAACsB,QAAD,CAL1B;;AAOA,QAAIN,QAAJ,EAAc;AACZ,UAAIW,MAAM,GAAGf,UAAU,IAAIa,cAA3B;AACD,KAFD,MAEO,IAAIN,cAAJ,EAAoB;AACzBQ,MAAAA,MAAM,GAAGF,cAAc,KAAKb,UAAU,IAAIW,YAAnB,CAAvB;AACD,KAFM,MAEA,IAAIN,SAAJ,EAAe;AACpBU,MAAAA,MAAM,GAAGF,cAAc,IAAIF,YAAlB,KAAmCX,UAAU,IAAI,CAACY,SAAlD,CAAT;AACD,KAFM,MAEA,IAAIN,WAAJ,EAAiB;AACtBS,MAAAA,MAAM,GAAGF,cAAc,IAAIF,YAAlB,IAAkC,CAACC,SAAnC,KAAiDZ,UAAU,IAAI,CAACc,WAAhE,CAAT;AACD,KAFM,MAEA,IAAIF,SAAS,IAAIE,WAAjB,EAA8B;AACnCC,MAAAA,MAAM,GAAG,KAAT;AACD,KAFM,MAEA;AACLA,MAAAA,MAAM,GAAGf,UAAU,GAAIU,QAAQ,IAAIZ,KAAhB,GAA0BY,QAAQ,GAAGZ,KAAxD;AACD;;AACD,QAAIiB,MAAJ,EAAY;AACVd,MAAAA,GAAG,GAAGQ,GAAG,GAAG,CAAZ;AACD,KAFD,MAEO;AACLP,MAAAA,IAAI,GAAGO,GAAP;AACD;AACF;;AACD,SAAOf,SAAS,CAACQ,IAAD,EAAOZ,eAAP,CAAhB;AACD;;AAED,eAAeM,iBAAf","sourcesContent":["import isSymbol from './isSymbol.js';\n\n/** Used as references for the maximum length and index of an array. */\nvar MAX_ARRAY_LENGTH = 4294967295,\n    MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeMin = Math.min;\n\n/**\n * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n * which invokes `iteratee` for `value` and each element of `array` to compute\n * their sort ranking. The iteratee is invoked with one argument; (value).\n *\n * @private\n * @param {Array} array The sorted array to inspect.\n * @param {*} value The value to evaluate.\n * @param {Function} iteratee The iteratee invoked per element.\n * @param {boolean} [retHighest] Specify returning the highest qualified index.\n * @returns {number} Returns the index at which `value` should be inserted\n *  into `array`.\n */\nfunction baseSortedIndexBy(array, value, iteratee, retHighest) {\n  var low = 0,\n      high = array == null ? 0 : array.length;\n  if (high === 0) {\n    return 0;\n  }\n\n  value = iteratee(value);\n  var valIsNaN = value !== value,\n      valIsNull = value === null,\n      valIsSymbol = isSymbol(value),\n      valIsUndefined = value === undefined;\n\n  while (low < high) {\n    var mid = nativeFloor((low + high) / 2),\n        computed = iteratee(array[mid]),\n        othIsDefined = computed !== undefined,\n        othIsNull = computed === null,\n        othIsReflexive = computed === computed,\n        othIsSymbol = isSymbol(computed);\n\n    if (valIsNaN) {\n      var setLow = retHighest || othIsReflexive;\n    } else if (valIsUndefined) {\n      setLow = othIsReflexive && (retHighest || othIsDefined);\n    } else if (valIsNull) {\n      setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n    } else if (valIsSymbol) {\n      setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n    } else if (othIsNull || othIsSymbol) {\n      setLow = false;\n    } else {\n      setLow = retHighest ? (computed <= value) : (computed < value);\n    }\n    if (setLow) {\n      low = mid + 1;\n    } else {\n      high = mid;\n    }\n  }\n  return nativeMin(high, MAX_ARRAY_INDEX);\n}\n\nexport default baseSortedIndexBy;\n"]},"metadata":{},"sourceType":"module"}