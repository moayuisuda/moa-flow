{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Hook = require(\"./Hook\");\n\nconst HookCodeFactory = require(\"./HookCodeFactory\");\n\nclass AsyncSeriesBailHookCodeFactory extends HookCodeFactory {\n  content(_ref) {\n    let {\n      onError,\n      onResult,\n      resultReturns,\n      onDone\n    } = _ref;\n    return this.callTapsSeries({\n      onError: (i, err, next, doneBreak) => onError(err) + doneBreak(true),\n      onResult: (i, result, next) => `if(${result} !== undefined) {\\n${onResult(result)}\\n} else {\\n${next()}}\\n`,\n      resultReturns,\n      onDone\n    });\n  }\n\n}\n\nconst factory = new AsyncSeriesBailHookCodeFactory();\n\nconst COMPILE = function (options) {\n  factory.setup(this, options);\n  return factory.create(options);\n};\n\nfunction AsyncSeriesBailHook() {\n  let args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n  const hook = new Hook(args, name);\n  hook.constructor = AsyncSeriesBailHook;\n  hook.compile = COMPILE;\n  hook._call = undefined;\n  hook.call = undefined;\n  return hook;\n}\n\nAsyncSeriesBailHook.prototype = null;\nmodule.exports = AsyncSeriesBailHook;","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/tapable/lib/AsyncSeriesBailHook.js"],"names":["Hook","require","HookCodeFactory","AsyncSeriesBailHookCodeFactory","content","onError","onResult","resultReturns","onDone","callTapsSeries","i","err","next","doneBreak","result","factory","COMPILE","options","setup","create","AsyncSeriesBailHook","args","name","undefined","hook","constructor","compile","_call","call","prototype","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,MAAMC,eAAe,GAAGD,OAAO,CAAC,mBAAD,CAA/B;;AAEA,MAAME,8BAAN,SAA6CD,eAA7C,CAA6D;AAC5DE,EAAAA,OAAO,OAA+C;AAAA,QAA9C;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,QAAX;AAAqBC,MAAAA,aAArB;AAAoCC,MAAAA;AAApC,KAA8C;AACrD,WAAO,KAAKC,cAAL,CAAoB;AAC1BJ,MAAAA,OAAO,EAAE,CAACK,CAAD,EAAIC,GAAJ,EAASC,IAAT,EAAeC,SAAf,KAA6BR,OAAO,CAACM,GAAD,CAAP,GAAeE,SAAS,CAAC,IAAD,CADpC;AAE1BP,MAAAA,QAAQ,EAAE,CAACI,CAAD,EAAII,MAAJ,EAAYF,IAAZ,KACR,MAAKE,MAAO,sBAAqBR,QAAQ,CACzCQ,MADyC,CAExC,eAAcF,IAAI,EAAG,KALE;AAM1BL,MAAAA,aAN0B;AAO1BC,MAAAA;AAP0B,KAApB,CAAP;AASA;;AAX2D;;AAc7D,MAAMO,OAAO,GAAG,IAAIZ,8BAAJ,EAAhB;;AAEA,MAAMa,OAAO,GAAG,UAASC,OAAT,EAAkB;AACjCF,EAAAA,OAAO,CAACG,KAAR,CAAc,IAAd,EAAoBD,OAApB;AACA,SAAOF,OAAO,CAACI,MAAR,CAAeF,OAAf,CAAP;AACA,CAHD;;AAKA,SAASG,mBAAT,GAA0D;AAAA,MAA7BC,IAA6B,uEAAtB,EAAsB;AAAA,MAAlBC,IAAkB,uEAAXC,SAAW;AACzD,QAAMC,IAAI,GAAG,IAAIxB,IAAJ,CAASqB,IAAT,EAAeC,IAAf,CAAb;AACAE,EAAAA,IAAI,CAACC,WAAL,GAAmBL,mBAAnB;AACAI,EAAAA,IAAI,CAACE,OAAL,GAAeV,OAAf;AACAQ,EAAAA,IAAI,CAACG,KAAL,GAAaJ,SAAb;AACAC,EAAAA,IAAI,CAACI,IAAL,GAAYL,SAAZ;AACA,SAAOC,IAAP;AACA;;AAEDJ,mBAAmB,CAACS,SAApB,GAAgC,IAAhC;AAEAC,MAAM,CAACC,OAAP,GAAiBX,mBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Hook = require(\"./Hook\");\nconst HookCodeFactory = require(\"./HookCodeFactory\");\n\nclass AsyncSeriesBailHookCodeFactory extends HookCodeFactory {\n\tcontent({ onError, onResult, resultReturns, onDone }) {\n\t\treturn this.callTapsSeries({\n\t\t\tonError: (i, err, next, doneBreak) => onError(err) + doneBreak(true),\n\t\t\tonResult: (i, result, next) =>\n\t\t\t\t`if(${result} !== undefined) {\\n${onResult(\n\t\t\t\t\tresult\n\t\t\t\t)}\\n} else {\\n${next()}}\\n`,\n\t\t\tresultReturns,\n\t\t\tonDone\n\t\t});\n\t}\n}\n\nconst factory = new AsyncSeriesBailHookCodeFactory();\n\nconst COMPILE = function(options) {\n\tfactory.setup(this, options);\n\treturn factory.create(options);\n};\n\nfunction AsyncSeriesBailHook(args = [], name = undefined) {\n\tconst hook = new Hook(args, name);\n\thook.constructor = AsyncSeriesBailHook;\n\thook.compile = COMPILE;\n\thook._call = undefined;\n\thook.call = undefined;\n\treturn hook;\n}\n\nAsyncSeriesBailHook.prototype = null;\n\nmodule.exports = AsyncSeriesBailHook;\n"]},"metadata":{},"sourceType":"script"}