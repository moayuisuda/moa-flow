{"ast":null,"code":"import { __decorate, __metadata, __read, __spreadArray } from \"tslib\";\nimport { singleton, inject } from 'mana-syringe';\nimport { toFontString } from '../utils';\nimport { Rectangle } from '../shapes';\nimport { OffscreenCanvasCreator } from './OffscreenCanvasCreator';\nvar TEXT_METRICS = {\n  MetricsString: '|ÉqÅ',\n  BaselineSymbol: 'M',\n  BaselineMultiplier: 1.4,\n  HeightMultiplier: 2,\n  Newlines: [0x000a, 0x000d // carriage return\n  ],\n  BreakingSpaces: [0x0009, 0x0020, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2008, 0x2009, 0x200a, 0x205f, 0x3000 // ideographic space\n  ]\n};\nvar LATIN_REGEX = /[a-zA-Z0-9\\u00C0-\\u00D6\\u00D8-\\u00f6\\u00f8-\\u00ff!\"#$%&'()*+,-./:;]/; // Line breaking rules in CJK (Kinsoku Shori)\n// Refer from https://en.wikipedia.org/wiki/Line_breaking_rules_in_East_Asian_languages\n\nvar regexCannotStartZhCn = /[!%),.:;?\\]}¢°·'\"\"†‡›℃∶、。〃〆〕〗〞﹚﹜！＂％＇），．：；？！］｝～]/;\nvar regexCannotEndZhCn = /[$(£¥·'\"〈《「『【〔〖〝﹙﹛＄（．［｛￡￥]/;\nvar regexCannotStartZhTw = /[!),.:;?\\]}¢·–—'\"•\"、。〆〞〕〉》」︰︱︲︳﹐﹑﹒﹓﹔﹕﹖﹘﹚﹜！），．：；？︶︸︺︼︾﹀﹂﹗］｜｝､]/;\nvar regexCannotEndZhTw = /[([{£¥'\"‵〈《「『〔〝︴﹙﹛（｛︵︷︹︻︽︿﹁﹃﹏]/;\nvar regexCannotStartJaJp = /[)\\]｝〕〉》」』】〙〗〟'\"｠»ヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻‐゠–〜?!‼⁇⁈⁉・、:;,。.]/;\nvar regexCannotEndJaJp = /[([｛〔〈《「『【〘〖〝'\"｟«—...‥〳〴〵]/;\nvar regexCannotStartKoKr = /[!%),.:;?\\]}¢°'\"†‡℃〆〈《「『〕！％），．：；？］｝]/;\nvar regexCannotEndKoKr = /[$([{£¥'\"々〇〉》」〔＄（［｛｠￥￦#]/;\nvar regexCannotStart = new RegExp(\"\".concat(regexCannotStartZhCn.source, \"|\").concat(regexCannotStartZhTw.source, \"|\").concat(regexCannotStartJaJp.source, \"|\").concat(regexCannotStartKoKr.source));\nvar regexCannotEnd = new RegExp(\"\".concat(regexCannotEndZhCn.source, \"|\").concat(regexCannotEndZhTw.source, \"|\").concat(regexCannotEndJaJp.source, \"|\").concat(regexCannotEndKoKr.source));\n\nvar TextService =\n/** @class */\nfunction () {\n  function TextService() {\n    var _this = this;\n\n    this.cache = {};\n\n    this.shouldBreakByKinsokuShorui = function (char, nextChar) {\n      if (_this.isBreakingSpace(nextChar)) return false;\n\n      if (char) {\n        // Line breaking rules in CJK (Kinsoku Shori)\n        if (regexCannotEnd.exec(nextChar) || regexCannotStart.exec(char)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    this.trimByKinsokuShorui = function (prev) {\n      var next = __spreadArray([], __read(prev), false);\n\n      var prevLine = next[next.length - 2];\n\n      if (!prevLine) {\n        return prev;\n      }\n\n      var lastChar = prevLine[prevLine.length - 1];\n      next[next.length - 2] = prevLine.slice(0, -1);\n      next[next.length - 1] = lastChar + next[next.length - 1];\n      return next;\n    };\n  }\n\n  TextService.prototype.measureFont = function (font, offscreenCanvas) {\n    // as this method is used for preparing assets, don't recalculate things if we don't need to\n    if (this.cache[font]) {\n      return this.cache[font];\n    }\n\n    var properties = {\n      ascent: 0,\n      descent: 0,\n      fontSize: 0\n    };\n    var canvas = this.offscreenCanvas.getOrCreateCanvas(offscreenCanvas);\n    var context = this.offscreenCanvas.getOrCreateContext(offscreenCanvas);\n    context.font = font;\n    var metricsString = TEXT_METRICS.MetricsString + TEXT_METRICS.BaselineSymbol;\n    var width = Math.ceil(context.measureText(metricsString).width);\n    var baseline = Math.ceil(context.measureText(TEXT_METRICS.BaselineSymbol).width);\n    var height = TEXT_METRICS.HeightMultiplier * baseline;\n    baseline = baseline * TEXT_METRICS.BaselineMultiplier | 0; // @ts-ignore\n\n    canvas.width = width; // @ts-ignore\n\n    canvas.height = height;\n    context.fillStyle = '#f00';\n    context.fillRect(0, 0, width, height);\n    context.font = font;\n    context.textBaseline = 'alphabetic';\n    context.fillStyle = '#000';\n    context.fillText(metricsString, 0, baseline);\n    var imagedata = context.getImageData(0, 0, width || 1, height || 1).data;\n    var pixels = imagedata.length;\n    var line = width * 4;\n    var i = 0;\n    var idx = 0;\n    var stop = false; // ascent. scan from top to bottom until we find a non red pixel\n\n    for (i = 0; i < baseline; ++i) {\n      for (var j = 0; j < line; j += 4) {\n        if (imagedata[idx + j] !== 255) {\n          stop = true;\n          break;\n        }\n      }\n\n      if (!stop) {\n        idx += line;\n      } else {\n        break;\n      }\n    }\n\n    properties.ascent = baseline - i;\n    idx = pixels - line;\n    stop = false; // descent. scan from bottom to top until we find a non red pixel\n\n    for (i = height; i > baseline; --i) {\n      for (var j = 0; j < line; j += 4) {\n        if (imagedata[idx + j] !== 255) {\n          stop = true;\n          break;\n        }\n      }\n\n      if (!stop) {\n        idx -= line;\n      } else {\n        break;\n      }\n    }\n\n    properties.descent = i - baseline;\n    properties.fontSize = properties.ascent + properties.descent;\n    this.cache[font] = properties;\n    return properties;\n  };\n\n  TextService.prototype.measureText = function (text, parsedStyle, offscreenCanvas) {\n    var fontSize = parsedStyle.fontSize,\n        wordWrap = parsedStyle.wordWrap,\n        _a = parsedStyle.lineHeight,\n        strokeHeight = _a === void 0 ? 0 : _a,\n        lineWidth = parsedStyle.lineWidth,\n        textBaseline = parsedStyle.textBaseline,\n        textAlign = parsedStyle.textAlign,\n        _b = parsedStyle.letterSpacing,\n        letterSpacing = _b === void 0 ? 0 : _b,\n        // dropShadow = 0,\n    // dropShadowDistance = 0,\n    _c = parsedStyle.leading,\n        // dropShadow = 0,\n    // dropShadowDistance = 0,\n    leading = _c === void 0 ? 0 : _c;\n    var font = toFontString(parsedStyle);\n    var fontProperties = this.measureFont(font, offscreenCanvas); // fallback in case UA disallow canvas data extraction\n    // (toDataURI, getImageData functions)\n\n    if (fontProperties.fontSize === 0) {\n      fontProperties.fontSize = fontSize.value;\n      fontProperties.ascent = fontSize.value;\n    }\n\n    var context = this.offscreenCanvas.getOrCreateContext(offscreenCanvas);\n    context.font = font;\n    var outputText = wordWrap ? this.wordWrap(text, parsedStyle, offscreenCanvas) : text;\n    var lines = outputText.split(/(?:\\r\\n|\\r|\\n)/);\n    var lineWidths = new Array(lines.length);\n    var maxLineWidth = 0;\n\n    for (var i = 0; i < lines.length; i++) {\n      var lineWidth_1 = context.measureText(lines[i]).width + (lines[i].length - 1) * letterSpacing;\n      lineWidths[i] = lineWidth_1;\n      maxLineWidth = Math.max(maxLineWidth, lineWidth_1);\n    }\n\n    var width = maxLineWidth + lineWidth.value; // if (dropShadow) {\n    //   width += dropShadowDistance;\n    // }\n\n    var lineHeight = strokeHeight || fontProperties.fontSize + lineWidth.value;\n    var height = Math.max(lineHeight, fontProperties.fontSize + lineWidth.value) + (lines.length - 1) * (lineHeight + leading); // if (dropShadow) {\n    //   height += dropShadowDistance;\n    // }\n\n    lineHeight += leading; // handle vertical text baseline\n\n    var offsetY = 0;\n\n    if (textBaseline.value === 'middle') {\n      offsetY = -height / 2;\n    } else if (textBaseline.value === 'bottom' || textBaseline.value === 'alphabetic' || textBaseline.value === 'ideographic') {\n      offsetY = -height;\n    } else if (textBaseline.value === 'top' || textBaseline.value === 'hanging') {\n      offsetY = 0;\n    }\n\n    return {\n      font: font,\n      width: width,\n      height: height,\n      lines: lines,\n      lineWidths: lineWidths,\n      lineHeight: lineHeight,\n      maxLineWidth: maxLineWidth,\n      fontProperties: fontProperties,\n      lineMetrics: lineWidths.map(function (width, i) {\n        var offsetX = 0; // handle horizontal text align\n\n        if (textAlign.value === 'center') {\n          offsetX -= width / 2;\n        } else if (textAlign.value === 'right' || textAlign.value === 'end') {\n          offsetX -= width;\n        }\n\n        return new Rectangle(offsetX - lineWidth.value / 2, offsetY + i * lineHeight, width + lineWidth.value, lineHeight);\n      })\n    };\n  };\n\n  TextService.prototype.wordWrap = function (text, _a, offscreenCanvas) {\n    var _this = this;\n\n    var _b = _a.wordWrapWidth,\n        wordWrapWidth = _b === void 0 ? 0 : _b,\n        _c = _a.letterSpacing,\n        letterSpacing = _c === void 0 ? 0 : _c;\n    var context = this.offscreenCanvas.getOrCreateContext(offscreenCanvas);\n    var maxWidth = wordWrapWidth + letterSpacing;\n    var lines = [];\n    var currentIndex = 0;\n    var currentWidth = 0;\n    var cache = {};\n\n    var calcWidth = function calcWidth(char) {\n      return _this.getFromCache(char, letterSpacing, cache, context);\n    };\n\n    Array.from(text).forEach(function (char, i) {\n      var prevChar = text[i - 1];\n      var nextChar = text[i + 1];\n      var width = calcWidth(char);\n\n      if (_this.isNewline(char)) {\n        currentIndex++;\n        currentWidth = 0;\n        lines[currentIndex] = '';\n        return;\n      }\n\n      if (currentWidth > 0 && currentWidth + width > maxWidth) {\n        currentIndex++;\n        currentWidth = 0;\n        lines[currentIndex] = '';\n\n        if (_this.isBreakingSpace(char)) {\n          return;\n        }\n\n        if (!_this.canBreakInLastChar(char)) {\n          lines = _this.trimToBreakable(lines);\n          currentWidth = _this.sumTextWidthByCache(lines[currentIndex] || '', cache);\n        }\n\n        if (_this.shouldBreakByKinsokuShorui(char, nextChar)) {\n          lines = _this.trimByKinsokuShorui(lines);\n          currentWidth += calcWidth(prevChar || '');\n        }\n      }\n\n      currentWidth += width;\n      lines[currentIndex] = (lines[currentIndex] || '') + char;\n    });\n    return lines.join('\\n');\n  };\n\n  TextService.prototype.isBreakingSpace = function (char) {\n    if (typeof char !== 'string') {\n      return false;\n    }\n\n    return TEXT_METRICS.BreakingSpaces.indexOf(char.charCodeAt(0)) >= 0;\n  };\n\n  TextService.prototype.isNewline = function (char) {\n    if (typeof char !== 'string') {\n      return false;\n    }\n\n    return TEXT_METRICS.Newlines.indexOf(char.charCodeAt(0)) >= 0;\n  };\n\n  TextService.prototype.trimToBreakable = function (prev) {\n    var next = __spreadArray([], __read(prev), false);\n\n    var prevLine = next[next.length - 2];\n    var index = this.findBreakableIndex(prevLine);\n    if (index === -1 || !prevLine) return next;\n    var trimmedChar = prevLine.slice(index, index + 1);\n    var isTrimmedWithSpace = this.isBreakingSpace(trimmedChar);\n    var trimFrom = index + 1;\n    var trimTo = index + (isTrimmedWithSpace ? 0 : 1);\n    next[next.length - 1] += prevLine.slice(trimFrom, prevLine.length);\n    next[next.length - 2] = prevLine.slice(0, trimTo);\n    return next;\n  };\n\n  TextService.prototype.canBreakInLastChar = function (char) {\n    if (char && LATIN_REGEX.test(char)) return false;\n    return true;\n  };\n\n  TextService.prototype.sumTextWidthByCache = function (text, cache) {\n    return text.split('').reduce(function (sum, c) {\n      if (!cache[c]) throw Error('cannot count the word without cache');\n      return sum + cache[c];\n    }, 0);\n  };\n\n  TextService.prototype.findBreakableIndex = function (line) {\n    for (var i = line.length - 1; i >= 0; i--) {\n      if (!LATIN_REGEX.test(line[i])) return i;\n    }\n\n    return -1;\n  };\n\n  TextService.prototype.getFromCache = function (key, letterSpacing, cache, context) {\n    var width = cache[key];\n\n    if (typeof width !== 'number') {\n      var spacing = key.length * letterSpacing;\n      width = context.measureText(key).width + spacing;\n      cache[key] = width;\n    }\n\n    return width;\n  };\n\n  __decorate([inject(OffscreenCanvasCreator), __metadata(\"design:type\", OffscreenCanvasCreator)], TextService.prototype, \"offscreenCanvas\", void 0);\n\n  TextService = __decorate([singleton()], TextService);\n  return TextService;\n}();\n\nexport { TextService };","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/@antv/g/es/services/TextService.js"],"names":["__decorate","__metadata","__read","__spreadArray","singleton","inject","toFontString","Rectangle","OffscreenCanvasCreator","TEXT_METRICS","MetricsString","BaselineSymbol","BaselineMultiplier","HeightMultiplier","Newlines","BreakingSpaces","LATIN_REGEX","regexCannotStartZhCn","regexCannotEndZhCn","regexCannotStartZhTw","regexCannotEndZhTw","regexCannotStartJaJp","regexCannotEndJaJp","regexCannotStartKoKr","regexCannotEndKoKr","regexCannotStart","RegExp","concat","source","regexCannotEnd","TextService","_this","cache","shouldBreakByKinsokuShorui","char","nextChar","isBreakingSpace","exec","trimByKinsokuShorui","prev","next","prevLine","length","lastChar","slice","prototype","measureFont","font","offscreenCanvas","properties","ascent","descent","fontSize","canvas","getOrCreateCanvas","context","getOrCreateContext","metricsString","width","Math","ceil","measureText","baseline","height","fillStyle","fillRect","textBaseline","fillText","imagedata","getImageData","data","pixels","line","i","idx","stop","j","text","parsedStyle","wordWrap","_a","lineHeight","strokeHeight","lineWidth","textAlign","_b","letterSpacing","_c","leading","fontProperties","value","outputText","lines","split","lineWidths","Array","maxLineWidth","lineWidth_1","max","offsetY","lineMetrics","map","offsetX","wordWrapWidth","maxWidth","currentIndex","currentWidth","calcWidth","getFromCache","from","forEach","prevChar","isNewline","canBreakInLastChar","trimToBreakable","sumTextWidthByCache","join","indexOf","charCodeAt","index","findBreakableIndex","trimmedChar","isTrimmedWithSpace","trimFrom","trimTo","test","reduce","sum","c","Error","key","spacing"],"mappings":"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","sourcesContent":["import { __decorate, __metadata, __read, __spreadArray } from \"tslib\";\nimport { singleton, inject } from 'mana-syringe';\nimport { toFontString } from '../utils';\nimport { Rectangle } from '../shapes';\nimport { OffscreenCanvasCreator } from './OffscreenCanvasCreator';\nvar TEXT_METRICS = {\n  MetricsString: '|ÉqÅ',\n  BaselineSymbol: 'M',\n  BaselineMultiplier: 1.4,\n  HeightMultiplier: 2,\n  Newlines: [0x000a, 0x000d // carriage return\n  ],\n  BreakingSpaces: [0x0009, 0x0020, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2008, 0x2009, 0x200a, 0x205f, 0x3000 // ideographic space\n  ]\n};\nvar LATIN_REGEX = /[a-zA-Z0-9\\u00C0-\\u00D6\\u00D8-\\u00f6\\u00f8-\\u00ff!\"#$%&'()*+,-./:;]/; // Line breaking rules in CJK (Kinsoku Shori)\n// Refer from https://en.wikipedia.org/wiki/Line_breaking_rules_in_East_Asian_languages\n\nvar regexCannotStartZhCn = /[!%),.:;?\\]}¢°·'\"\"†‡›℃∶、。〃〆〕〗〞﹚﹜！＂％＇），．：；？！］｝～]/;\nvar regexCannotEndZhCn = /[$(£¥·'\"〈《「『【〔〖〝﹙﹛＄（．［｛￡￥]/;\nvar regexCannotStartZhTw = /[!),.:;?\\]}¢·–—'\"•\"、。〆〞〕〉》」︰︱︲︳﹐﹑﹒﹓﹔﹕﹖﹘﹚﹜！），．：；？︶︸︺︼︾﹀﹂﹗］｜｝､]/;\nvar regexCannotEndZhTw = /[([{£¥'\"‵〈《「『〔〝︴﹙﹛（｛︵︷︹︻︽︿﹁﹃﹏]/;\nvar regexCannotStartJaJp = /[)\\]｝〕〉》」』】〙〗〟'\"｠»ヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻‐゠–〜?!‼⁇⁈⁉・、:;,。.]/;\nvar regexCannotEndJaJp = /[([｛〔〈《「『【〘〖〝'\"｟«—...‥〳〴〵]/;\nvar regexCannotStartKoKr = /[!%),.:;?\\]}¢°'\"†‡℃〆〈《「『〕！％），．：；？］｝]/;\nvar regexCannotEndKoKr = /[$([{£¥'\"々〇〉》」〔＄（［｛｠￥￦#]/;\nvar regexCannotStart = new RegExp(\"\".concat(regexCannotStartZhCn.source, \"|\").concat(regexCannotStartZhTw.source, \"|\").concat(regexCannotStartJaJp.source, \"|\").concat(regexCannotStartKoKr.source));\nvar regexCannotEnd = new RegExp(\"\".concat(regexCannotEndZhCn.source, \"|\").concat(regexCannotEndZhTw.source, \"|\").concat(regexCannotEndJaJp.source, \"|\").concat(regexCannotEndKoKr.source));\n\nvar TextService =\n/** @class */\nfunction () {\n  function TextService() {\n    var _this = this;\n\n    this.cache = {};\n\n    this.shouldBreakByKinsokuShorui = function (char, nextChar) {\n      if (_this.isBreakingSpace(nextChar)) return false;\n\n      if (char) {\n        // Line breaking rules in CJK (Kinsoku Shori)\n        if (regexCannotEnd.exec(nextChar) || regexCannotStart.exec(char)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    this.trimByKinsokuShorui = function (prev) {\n      var next = __spreadArray([], __read(prev), false);\n\n      var prevLine = next[next.length - 2];\n\n      if (!prevLine) {\n        return prev;\n      }\n\n      var lastChar = prevLine[prevLine.length - 1];\n      next[next.length - 2] = prevLine.slice(0, -1);\n      next[next.length - 1] = lastChar + next[next.length - 1];\n      return next;\n    };\n  }\n\n  TextService.prototype.measureFont = function (font, offscreenCanvas) {\n    // as this method is used for preparing assets, don't recalculate things if we don't need to\n    if (this.cache[font]) {\n      return this.cache[font];\n    }\n\n    var properties = {\n      ascent: 0,\n      descent: 0,\n      fontSize: 0\n    };\n    var canvas = this.offscreenCanvas.getOrCreateCanvas(offscreenCanvas);\n    var context = this.offscreenCanvas.getOrCreateContext(offscreenCanvas);\n    context.font = font;\n    var metricsString = TEXT_METRICS.MetricsString + TEXT_METRICS.BaselineSymbol;\n    var width = Math.ceil(context.measureText(metricsString).width);\n    var baseline = Math.ceil(context.measureText(TEXT_METRICS.BaselineSymbol).width);\n    var height = TEXT_METRICS.HeightMultiplier * baseline;\n    baseline = baseline * TEXT_METRICS.BaselineMultiplier | 0; // @ts-ignore\n\n    canvas.width = width; // @ts-ignore\n\n    canvas.height = height;\n    context.fillStyle = '#f00';\n    context.fillRect(0, 0, width, height);\n    context.font = font;\n    context.textBaseline = 'alphabetic';\n    context.fillStyle = '#000';\n    context.fillText(metricsString, 0, baseline);\n    var imagedata = context.getImageData(0, 0, width || 1, height || 1).data;\n    var pixels = imagedata.length;\n    var line = width * 4;\n    var i = 0;\n    var idx = 0;\n    var stop = false; // ascent. scan from top to bottom until we find a non red pixel\n\n    for (i = 0; i < baseline; ++i) {\n      for (var j = 0; j < line; j += 4) {\n        if (imagedata[idx + j] !== 255) {\n          stop = true;\n          break;\n        }\n      }\n\n      if (!stop) {\n        idx += line;\n      } else {\n        break;\n      }\n    }\n\n    properties.ascent = baseline - i;\n    idx = pixels - line;\n    stop = false; // descent. scan from bottom to top until we find a non red pixel\n\n    for (i = height; i > baseline; --i) {\n      for (var j = 0; j < line; j += 4) {\n        if (imagedata[idx + j] !== 255) {\n          stop = true;\n          break;\n        }\n      }\n\n      if (!stop) {\n        idx -= line;\n      } else {\n        break;\n      }\n    }\n\n    properties.descent = i - baseline;\n    properties.fontSize = properties.ascent + properties.descent;\n    this.cache[font] = properties;\n    return properties;\n  };\n\n  TextService.prototype.measureText = function (text, parsedStyle, offscreenCanvas) {\n    var fontSize = parsedStyle.fontSize,\n        wordWrap = parsedStyle.wordWrap,\n        _a = parsedStyle.lineHeight,\n        strokeHeight = _a === void 0 ? 0 : _a,\n        lineWidth = parsedStyle.lineWidth,\n        textBaseline = parsedStyle.textBaseline,\n        textAlign = parsedStyle.textAlign,\n        _b = parsedStyle.letterSpacing,\n        letterSpacing = _b === void 0 ? 0 : _b,\n        // dropShadow = 0,\n    // dropShadowDistance = 0,\n    _c = parsedStyle.leading,\n        // dropShadow = 0,\n    // dropShadowDistance = 0,\n    leading = _c === void 0 ? 0 : _c;\n    var font = toFontString(parsedStyle);\n    var fontProperties = this.measureFont(font, offscreenCanvas); // fallback in case UA disallow canvas data extraction\n    // (toDataURI, getImageData functions)\n\n    if (fontProperties.fontSize === 0) {\n      fontProperties.fontSize = fontSize.value;\n      fontProperties.ascent = fontSize.value;\n    }\n\n    var context = this.offscreenCanvas.getOrCreateContext(offscreenCanvas);\n    context.font = font;\n    var outputText = wordWrap ? this.wordWrap(text, parsedStyle, offscreenCanvas) : text;\n    var lines = outputText.split(/(?:\\r\\n|\\r|\\n)/);\n    var lineWidths = new Array(lines.length);\n    var maxLineWidth = 0;\n\n    for (var i = 0; i < lines.length; i++) {\n      var lineWidth_1 = context.measureText(lines[i]).width + (lines[i].length - 1) * letterSpacing;\n      lineWidths[i] = lineWidth_1;\n      maxLineWidth = Math.max(maxLineWidth, lineWidth_1);\n    }\n\n    var width = maxLineWidth + lineWidth.value; // if (dropShadow) {\n    //   width += dropShadowDistance;\n    // }\n\n    var lineHeight = strokeHeight || fontProperties.fontSize + lineWidth.value;\n    var height = Math.max(lineHeight, fontProperties.fontSize + lineWidth.value) + (lines.length - 1) * (lineHeight + leading); // if (dropShadow) {\n    //   height += dropShadowDistance;\n    // }\n\n    lineHeight += leading; // handle vertical text baseline\n\n    var offsetY = 0;\n\n    if (textBaseline.value === 'middle') {\n      offsetY = -height / 2;\n    } else if (textBaseline.value === 'bottom' || textBaseline.value === 'alphabetic' || textBaseline.value === 'ideographic') {\n      offsetY = -height;\n    } else if (textBaseline.value === 'top' || textBaseline.value === 'hanging') {\n      offsetY = 0;\n    }\n\n    return {\n      font: font,\n      width: width,\n      height: height,\n      lines: lines,\n      lineWidths: lineWidths,\n      lineHeight: lineHeight,\n      maxLineWidth: maxLineWidth,\n      fontProperties: fontProperties,\n      lineMetrics: lineWidths.map(function (width, i) {\n        var offsetX = 0; // handle horizontal text align\n\n        if (textAlign.value === 'center') {\n          offsetX -= width / 2;\n        } else if (textAlign.value === 'right' || textAlign.value === 'end') {\n          offsetX -= width;\n        }\n\n        return new Rectangle(offsetX - lineWidth.value / 2, offsetY + i * lineHeight, width + lineWidth.value, lineHeight);\n      })\n    };\n  };\n\n  TextService.prototype.wordWrap = function (text, _a, offscreenCanvas) {\n    var _this = this;\n\n    var _b = _a.wordWrapWidth,\n        wordWrapWidth = _b === void 0 ? 0 : _b,\n        _c = _a.letterSpacing,\n        letterSpacing = _c === void 0 ? 0 : _c;\n    var context = this.offscreenCanvas.getOrCreateContext(offscreenCanvas);\n    var maxWidth = wordWrapWidth + letterSpacing;\n    var lines = [];\n    var currentIndex = 0;\n    var currentWidth = 0;\n    var cache = {};\n\n    var calcWidth = function calcWidth(char) {\n      return _this.getFromCache(char, letterSpacing, cache, context);\n    };\n\n    Array.from(text).forEach(function (char, i) {\n      var prevChar = text[i - 1];\n      var nextChar = text[i + 1];\n      var width = calcWidth(char);\n\n      if (_this.isNewline(char)) {\n        currentIndex++;\n        currentWidth = 0;\n        lines[currentIndex] = '';\n        return;\n      }\n\n      if (currentWidth > 0 && currentWidth + width > maxWidth) {\n        currentIndex++;\n        currentWidth = 0;\n        lines[currentIndex] = '';\n\n        if (_this.isBreakingSpace(char)) {\n          return;\n        }\n\n        if (!_this.canBreakInLastChar(char)) {\n          lines = _this.trimToBreakable(lines);\n          currentWidth = _this.sumTextWidthByCache(lines[currentIndex] || '', cache);\n        }\n\n        if (_this.shouldBreakByKinsokuShorui(char, nextChar)) {\n          lines = _this.trimByKinsokuShorui(lines);\n          currentWidth += calcWidth(prevChar || '');\n        }\n      }\n\n      currentWidth += width;\n      lines[currentIndex] = (lines[currentIndex] || '') + char;\n    });\n    return lines.join('\\n');\n  };\n\n  TextService.prototype.isBreakingSpace = function (char) {\n    if (typeof char !== 'string') {\n      return false;\n    }\n\n    return TEXT_METRICS.BreakingSpaces.indexOf(char.charCodeAt(0)) >= 0;\n  };\n\n  TextService.prototype.isNewline = function (char) {\n    if (typeof char !== 'string') {\n      return false;\n    }\n\n    return TEXT_METRICS.Newlines.indexOf(char.charCodeAt(0)) >= 0;\n  };\n\n  TextService.prototype.trimToBreakable = function (prev) {\n    var next = __spreadArray([], __read(prev), false);\n\n    var prevLine = next[next.length - 2];\n    var index = this.findBreakableIndex(prevLine);\n    if (index === -1 || !prevLine) return next;\n    var trimmedChar = prevLine.slice(index, index + 1);\n    var isTrimmedWithSpace = this.isBreakingSpace(trimmedChar);\n    var trimFrom = index + 1;\n    var trimTo = index + (isTrimmedWithSpace ? 0 : 1);\n    next[next.length - 1] += prevLine.slice(trimFrom, prevLine.length);\n    next[next.length - 2] = prevLine.slice(0, trimTo);\n    return next;\n  };\n\n  TextService.prototype.canBreakInLastChar = function (char) {\n    if (char && LATIN_REGEX.test(char)) return false;\n    return true;\n  };\n\n  TextService.prototype.sumTextWidthByCache = function (text, cache) {\n    return text.split('').reduce(function (sum, c) {\n      if (!cache[c]) throw Error('cannot count the word without cache');\n      return sum + cache[c];\n    }, 0);\n  };\n\n  TextService.prototype.findBreakableIndex = function (line) {\n    for (var i = line.length - 1; i >= 0; i--) {\n      if (!LATIN_REGEX.test(line[i])) return i;\n    }\n\n    return -1;\n  };\n\n  TextService.prototype.getFromCache = function (key, letterSpacing, cache, context) {\n    var width = cache[key];\n\n    if (typeof width !== 'number') {\n      var spacing = key.length * letterSpacing;\n      width = context.measureText(key).width + spacing;\n      cache[key] = width;\n    }\n\n    return width;\n  };\n\n  __decorate([inject(OffscreenCanvasCreator), __metadata(\"design:type\", OffscreenCanvasCreator)], TextService.prototype, \"offscreenCanvas\", void 0);\n\n  TextService = __decorate([singleton()], TextService);\n  return TextService;\n}();\n\nexport { TextService };"]},"metadata":{},"sourceType":"module"}