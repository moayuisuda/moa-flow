{"ast":null,"code":"import { rgbaToArgbHex } from './conversion';\nimport { TinyColor } from './index';\n/**\n * Returns the color represented as a Microsoft filter for use in old versions of IE.\n */\n\nexport function toMsFilter(firstColor, secondColor) {\n  var color = new TinyColor(firstColor);\n  var hex8String = '#' + rgbaToArgbHex(color.r, color.g, color.b, color.a);\n  var secondHex8String = hex8String;\n  var gradientType = color.gradientType ? 'GradientType = 1, ' : '';\n\n  if (secondColor) {\n    var s = new TinyColor(secondColor);\n    secondHex8String = '#' + rgbaToArgbHex(s.r, s.g, s.b, s.a);\n  }\n\n  return \"progid:DXImageTransform.Microsoft.gradient(\".concat(gradientType, \"startColorstr=\").concat(hex8String, \",endColorstr=\").concat(secondHex8String, \")\");\n}","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/@ctrl/tinycolor/dist/module/to-ms-filter.js"],"names":["rgbaToArgbHex","TinyColor","toMsFilter","firstColor","secondColor","color","hex8String","r","g","b","a","secondHex8String","gradientType","s","concat"],"mappings":"AAAA,SAASA,aAAT,QAA8B,cAA9B;AACA,SAASC,SAAT,QAA0B,SAA1B;AACA;AACA;AACA;;AACA,OAAO,SAASC,UAAT,CAAoBC,UAApB,EAAgCC,WAAhC,EAA6C;AAChD,MAAIC,KAAK,GAAG,IAAIJ,SAAJ,CAAcE,UAAd,CAAZ;AACA,MAAIG,UAAU,GAAG,MAAMN,aAAa,CAACK,KAAK,CAACE,CAAP,EAAUF,KAAK,CAACG,CAAhB,EAAmBH,KAAK,CAACI,CAAzB,EAA4BJ,KAAK,CAACK,CAAlC,CAApC;AACA,MAAIC,gBAAgB,GAAGL,UAAvB;AACA,MAAIM,YAAY,GAAGP,KAAK,CAACO,YAAN,GAAqB,oBAArB,GAA4C,EAA/D;;AACA,MAAIR,WAAJ,EAAiB;AACb,QAAIS,CAAC,GAAG,IAAIZ,SAAJ,CAAcG,WAAd,CAAR;AACAO,IAAAA,gBAAgB,GAAG,MAAMX,aAAa,CAACa,CAAC,CAACN,CAAH,EAAMM,CAAC,CAACL,CAAR,EAAWK,CAAC,CAACJ,CAAb,EAAgBI,CAAC,CAACH,CAAlB,CAAtC;AACH;;AACD,SAAO,8CAA8CI,MAA9C,CAAqDF,YAArD,EAAmE,gBAAnE,EAAqFE,MAArF,CAA4FR,UAA5F,EAAwG,eAAxG,EAAyHQ,MAAzH,CAAgIH,gBAAhI,EAAkJ,GAAlJ,CAAP;AACH","sourcesContent":["import { rgbaToArgbHex } from './conversion';\nimport { TinyColor } from './index';\n/**\n * Returns the color represented as a Microsoft filter for use in old versions of IE.\n */\nexport function toMsFilter(firstColor, secondColor) {\n    var color = new TinyColor(firstColor);\n    var hex8String = '#' + rgbaToArgbHex(color.r, color.g, color.b, color.a);\n    var secondHex8String = hex8String;\n    var gradientType = color.gradientType ? 'GradientType = 1, ' : '';\n    if (secondColor) {\n        var s = new TinyColor(secondColor);\n        secondHex8String = '#' + rgbaToArgbHex(s.r, s.g, s.b, s.a);\n    }\n    return \"progid:DXImageTransform.Microsoft.gradient(\".concat(gradientType, \"startColorstr=\").concat(hex8String, \",endColorstr=\").concat(secondHex8String, \")\");\n}\n"]},"metadata":{},"sourceType":"module"}