{"ast":null,"code":"import LazyWrapper from './_LazyWrapper.js';\nimport arrayPush from './_arrayPush.js';\nimport arrayReduce from './_arrayReduce.js';\n/**\n * The base implementation of `wrapperValue` which returns the result of\n * performing a sequence of actions on the unwrapped `value`, where each\n * successive action is supplied the return value of the previous.\n *\n * @private\n * @param {*} value The unwrapped value.\n * @param {Array} actions Actions to perform to resolve the unwrapped value.\n * @returns {*} Returns the resolved value.\n */\n\nfunction baseWrapperValue(value, actions) {\n  var result = value;\n\n  if (result instanceof LazyWrapper) {\n    result = result.value();\n  }\n\n  return arrayReduce(actions, function (result, action) {\n    return action.func.apply(action.thisArg, arrayPush([result], action.args));\n  }, result);\n}\n\nexport default baseWrapperValue;","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/lodash-es/_baseWrapperValue.js"],"names":["LazyWrapper","arrayPush","arrayReduce","baseWrapperValue","value","actions","result","action","func","apply","thisArg","args"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,mBAAxB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiCC,OAAjC,EAA0C;AACxC,MAAIC,MAAM,GAAGF,KAAb;;AACA,MAAIE,MAAM,YAAYN,WAAtB,EAAmC;AACjCM,IAAAA,MAAM,GAAGA,MAAM,CAACF,KAAP,EAAT;AACD;;AACD,SAAOF,WAAW,CAACG,OAAD,EAAU,UAASC,MAAT,EAAiBC,MAAjB,EAAyB;AACnD,WAAOA,MAAM,CAACC,IAAP,CAAYC,KAAZ,CAAkBF,MAAM,CAACG,OAAzB,EAAkCT,SAAS,CAAC,CAACK,MAAD,CAAD,EAAWC,MAAM,CAACI,IAAlB,CAA3C,CAAP;AACD,GAFiB,EAEfL,MAFe,CAAlB;AAGD;;AAED,eAAeH,gBAAf","sourcesContent":["import LazyWrapper from './_LazyWrapper.js';\nimport arrayPush from './_arrayPush.js';\nimport arrayReduce from './_arrayReduce.js';\n\n/**\n * The base implementation of `wrapperValue` which returns the result of\n * performing a sequence of actions on the unwrapped `value`, where each\n * successive action is supplied the return value of the previous.\n *\n * @private\n * @param {*} value The unwrapped value.\n * @param {Array} actions Actions to perform to resolve the unwrapped value.\n * @returns {*} Returns the resolved value.\n */\nfunction baseWrapperValue(value, actions) {\n  var result = value;\n  if (result instanceof LazyWrapper) {\n    result = result.value();\n  }\n  return arrayReduce(actions, function(result, action) {\n    return action.func.apply(action.thisArg, arrayPush([result], action.args));\n  }, result);\n}\n\nexport default baseWrapperValue;\n"]},"metadata":{},"sourceType":"module"}