{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Hook = require(\"./Hook\");\n\nconst HookCodeFactory = require(\"./HookCodeFactory\");\n\nclass SyncWaterfallHookCodeFactory extends HookCodeFactory {\n  content(_ref) {\n    let {\n      onError,\n      onResult,\n      resultReturns,\n      rethrowIfPossible\n    } = _ref;\n    return this.callTapsSeries({\n      onError: (i, err) => onError(err),\n      onResult: (i, result, next) => {\n        let code = \"\";\n        code += `if(${result} !== undefined) {\\n`;\n        code += `${this._args[0]} = ${result};\\n`;\n        code += `}\\n`;\n        code += next();\n        return code;\n      },\n      onDone: () => onResult(this._args[0]),\n      doneReturns: resultReturns,\n      rethrowIfPossible\n    });\n  }\n\n}\n\nconst factory = new SyncWaterfallHookCodeFactory();\n\nconst TAP_ASYNC = () => {\n  throw new Error(\"tapAsync is not supported on a SyncWaterfallHook\");\n};\n\nconst TAP_PROMISE = () => {\n  throw new Error(\"tapPromise is not supported on a SyncWaterfallHook\");\n};\n\nconst COMPILE = function (options) {\n  factory.setup(this, options);\n  return factory.create(options);\n};\n\nfunction SyncWaterfallHook() {\n  let args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n  if (args.length < 1) throw new Error(\"Waterfall hooks must have at least one argument\");\n  const hook = new Hook(args, name);\n  hook.constructor = SyncWaterfallHook;\n  hook.tapAsync = TAP_ASYNC;\n  hook.tapPromise = TAP_PROMISE;\n  hook.compile = COMPILE;\n  return hook;\n}\n\nSyncWaterfallHook.prototype = null;\nmodule.exports = SyncWaterfallHook;","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/tapable/lib/SyncWaterfallHook.js"],"names":["Hook","require","HookCodeFactory","SyncWaterfallHookCodeFactory","content","onError","onResult","resultReturns","rethrowIfPossible","callTapsSeries","i","err","result","next","code","_args","onDone","doneReturns","factory","TAP_ASYNC","Error","TAP_PROMISE","COMPILE","options","setup","create","SyncWaterfallHook","args","name","undefined","length","hook","constructor","tapAsync","tapPromise","compile","prototype","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,MAAMC,eAAe,GAAGD,OAAO,CAAC,mBAAD,CAA/B;;AAEA,MAAME,4BAAN,SAA2CD,eAA3C,CAA2D;AAC1DE,EAAAA,OAAO,OAA0D;AAAA,QAAzD;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,QAAX;AAAqBC,MAAAA,aAArB;AAAoCC,MAAAA;AAApC,KAAyD;AAChE,WAAO,KAAKC,cAAL,CAAoB;AAC1BJ,MAAAA,OAAO,EAAE,CAACK,CAAD,EAAIC,GAAJ,KAAYN,OAAO,CAACM,GAAD,CADF;AAE1BL,MAAAA,QAAQ,EAAE,CAACI,CAAD,EAAIE,MAAJ,EAAYC,IAAZ,KAAqB;AAC9B,YAAIC,IAAI,GAAG,EAAX;AACAA,QAAAA,IAAI,IAAK,MAAKF,MAAO,qBAArB;AACAE,QAAAA,IAAI,IAAK,GAAE,KAAKC,KAAL,CAAW,CAAX,CAAc,MAAKH,MAAO,KAArC;AACAE,QAAAA,IAAI,IAAK,KAAT;AACAA,QAAAA,IAAI,IAAID,IAAI,EAAZ;AACA,eAAOC,IAAP;AACA,OATyB;AAU1BE,MAAAA,MAAM,EAAE,MAAMV,QAAQ,CAAC,KAAKS,KAAL,CAAW,CAAX,CAAD,CAVI;AAW1BE,MAAAA,WAAW,EAAEV,aAXa;AAY1BC,MAAAA;AAZ0B,KAApB,CAAP;AAcA;;AAhByD;;AAmB3D,MAAMU,OAAO,GAAG,IAAIf,4BAAJ,EAAhB;;AAEA,MAAMgB,SAAS,GAAG,MAAM;AACvB,QAAM,IAAIC,KAAJ,CAAU,kDAAV,CAAN;AACA,CAFD;;AAIA,MAAMC,WAAW,GAAG,MAAM;AACzB,QAAM,IAAID,KAAJ,CAAU,oDAAV,CAAN;AACA,CAFD;;AAIA,MAAME,OAAO,GAAG,UAASC,OAAT,EAAkB;AACjCL,EAAAA,OAAO,CAACM,KAAR,CAAc,IAAd,EAAoBD,OAApB;AACA,SAAOL,OAAO,CAACO,MAAR,CAAeF,OAAf,CAAP;AACA,CAHD;;AAKA,SAASG,iBAAT,GAAwD;AAAA,MAA7BC,IAA6B,uEAAtB,EAAsB;AAAA,MAAlBC,IAAkB,uEAAXC,SAAW;AACvD,MAAIF,IAAI,CAACG,MAAL,GAAc,CAAlB,EACC,MAAM,IAAIV,KAAJ,CAAU,iDAAV,CAAN;AACD,QAAMW,IAAI,GAAG,IAAI/B,IAAJ,CAAS2B,IAAT,EAAeC,IAAf,CAAb;AACAG,EAAAA,IAAI,CAACC,WAAL,GAAmBN,iBAAnB;AACAK,EAAAA,IAAI,CAACE,QAAL,GAAgBd,SAAhB;AACAY,EAAAA,IAAI,CAACG,UAAL,GAAkBb,WAAlB;AACAU,EAAAA,IAAI,CAACI,OAAL,GAAeb,OAAf;AACA,SAAOS,IAAP;AACA;;AAEDL,iBAAiB,CAACU,SAAlB,GAA8B,IAA9B;AAEAC,MAAM,CAACC,OAAP,GAAiBZ,iBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Hook = require(\"./Hook\");\nconst HookCodeFactory = require(\"./HookCodeFactory\");\n\nclass SyncWaterfallHookCodeFactory extends HookCodeFactory {\n\tcontent({ onError, onResult, resultReturns, rethrowIfPossible }) {\n\t\treturn this.callTapsSeries({\n\t\t\tonError: (i, err) => onError(err),\n\t\t\tonResult: (i, result, next) => {\n\t\t\t\tlet code = \"\";\n\t\t\t\tcode += `if(${result} !== undefined) {\\n`;\n\t\t\t\tcode += `${this._args[0]} = ${result};\\n`;\n\t\t\t\tcode += `}\\n`;\n\t\t\t\tcode += next();\n\t\t\t\treturn code;\n\t\t\t},\n\t\t\tonDone: () => onResult(this._args[0]),\n\t\t\tdoneReturns: resultReturns,\n\t\t\trethrowIfPossible\n\t\t});\n\t}\n}\n\nconst factory = new SyncWaterfallHookCodeFactory();\n\nconst TAP_ASYNC = () => {\n\tthrow new Error(\"tapAsync is not supported on a SyncWaterfallHook\");\n};\n\nconst TAP_PROMISE = () => {\n\tthrow new Error(\"tapPromise is not supported on a SyncWaterfallHook\");\n};\n\nconst COMPILE = function(options) {\n\tfactory.setup(this, options);\n\treturn factory.create(options);\n};\n\nfunction SyncWaterfallHook(args = [], name = undefined) {\n\tif (args.length < 1)\n\t\tthrow new Error(\"Waterfall hooks must have at least one argument\");\n\tconst hook = new Hook(args, name);\n\thook.constructor = SyncWaterfallHook;\n\thook.tapAsync = TAP_ASYNC;\n\thook.tapPromise = TAP_PROMISE;\n\thook.compile = COMPILE;\n\treturn hook;\n}\n\nSyncWaterfallHook.prototype = null;\n\nmodule.exports = SyncWaterfallHook;\n"]},"metadata":{},"sourceType":"script"}