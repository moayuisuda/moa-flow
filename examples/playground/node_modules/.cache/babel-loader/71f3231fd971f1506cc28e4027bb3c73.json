{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { isNumber, isString } from 'lodash-es';\nimport { Syringe } from 'mana-syringe';\nimport { EventEmitter } from 'eventemitter3';\nimport { mat3, mat4, quat, vec3, vec4 } from 'gl-matrix';\nimport { Frustum } from '../shapes';\nimport { createVec3, getAngle, makePerspective } from '../utils/math';\nimport { parseEasingFunction } from '../utils/animation'; // import { DisplayObject } from '../display-objects';\n\nexport var DefaultCamera = Syringe.defineToken('DefaultCamera');\nexport var CameraType;\n\n(function (CameraType) {\n  /**\n   * Performs all the rotational operations with the focal point instead of the camera position.\n   * This type of camera is useful in applications(like CAD) where 3D objects are being designed or explored.\n   * Camera cannot orbits over the north & south poles.\n   * @see http://voxelent.com/tutorial-cameras/\n   *\n   * In Three.js it's used in OrbitControls.\n   * @see https://threejs.org/docs/#examples/zh/controls/OrbitControls\n   */\n  CameraType[CameraType[\"ORBITING\"] = 0] = \"ORBITING\";\n  /**\n   * It's similar to the ORBITING camera, but it allows the camera to orbit over the north or south poles.\n   *\n   * In Three.js it's used in OrbitControls.\n   * @see https://threejs.org/docs/#examples/en/controls/TrackballControls\n   */\n\n  CameraType[CameraType[\"EXPLORING\"] = 1] = \"EXPLORING\";\n  /**\n   * Performs all the rotational operations with the camera position.\n   * It's useful in first person shooting games.\n   * Camera cannot orbits over the north & south poles.\n   *\n   * In Three.js it's used in FirstPersonControls.\n   * @see https://threejs.org/docs/#examples/en/controls/FirstPersonControls\n   */\n\n  CameraType[CameraType[\"TRACKING\"] = 2] = \"TRACKING\";\n})(CameraType || (CameraType = {}));\n/**\n * CameraType must be TRACKING\n */\n\n\nexport var CameraTrackingMode;\n\n(function (CameraTrackingMode) {\n  CameraTrackingMode[CameraTrackingMode[\"DEFAULT\"] = 0] = \"DEFAULT\";\n  CameraTrackingMode[CameraTrackingMode[\"ROTATIONAL\"] = 1] = \"ROTATIONAL\";\n  CameraTrackingMode[CameraTrackingMode[\"TRANSLATIONAL\"] = 2] = \"TRANSLATIONAL\";\n  CameraTrackingMode[CameraTrackingMode[\"CINEMATIC\"] = 3] = \"CINEMATIC\";\n})(CameraTrackingMode || (CameraTrackingMode = {}));\n\nexport var CameraProjectionMode;\n\n(function (CameraProjectionMode) {\n  CameraProjectionMode[CameraProjectionMode[\"ORTHOGRAPHIC\"] = 0] = \"ORTHOGRAPHIC\";\n  CameraProjectionMode[CameraProjectionMode[\"PERSPECTIVE\"] = 1] = \"PERSPECTIVE\";\n})(CameraProjectionMode || (CameraProjectionMode = {}));\n\nexport var CameraEvent = {\n  UPDATED: 'updated'\n};\nvar DEG_2_RAD = Math.PI / 180;\nvar RAD_2_DEG = 180 / Math.PI;\nvar MIN_DISTANCE = 0.0002;\n/**\n * 参考「WebGL Insights - 23.Designing Cameras for WebGL Applications」，基于 Responsible Camera 思路设计\n * @see https://github.com/d13g0/nucleo.js/blob/master/source/camera/Camera.js\n *\n * 保存相机参数，定义相机动作：\n * 1. dolly 沿 n 轴移动\n * 2. pan 沿 u v 轴移动\n * 3. rotate 以方位角旋转\n * 4. 移动到 Landmark，具有平滑的动画效果，其间禁止其他用户交互\n */\n\nvar Camera =\n/** @class */\nfunction (_super) {\n  __extends(Camera, _super);\n\n  function Camera(type, trackingMode) {\n    if (type === void 0) {\n      type = CameraType.EXPLORING;\n    }\n\n    if (trackingMode === void 0) {\n      trackingMode = CameraTrackingMode.DEFAULT;\n    }\n\n    var _this = _super.call(this) || this;\n    /**\n     * 相机矩阵\n     */\n\n\n    _this.matrix = mat4.create();\n    /**\n     * u 轴\n     * @see http://learnwebgl.brown37.net/07_cameras/camera_introduction.html#a-camera-definition\n     */\n\n    _this.right = vec3.fromValues(1, 0, 0);\n    /**\n     * v 轴 +Y is down\n     */\n\n    _this.up = vec3.fromValues(0, 1, 0);\n    /**\n     * n 轴 +Z is inside\n     */\n\n    _this.forward = vec3.fromValues(0, 0, 1);\n    /**\n     * 相机位置\n     */\n\n    _this.position = vec3.fromValues(0, 0, 1);\n    /**\n     * 视点位置\n     */\n\n    _this.focalPoint = vec3.fromValues(0, 0, 0);\n    /**\n     * 视点到相机位置的向量\n     * focalPoint - position\n     */\n\n    _this.distanceVector = vec3.fromValues(0, 0, -1);\n    /**\n     * 相机位置到视点距离\n     * length(focalPoint - position)\n     */\n\n    _this.distance = 1;\n    /**\n     * @see https://en.wikipedia.org/wiki/Azimuth\n     */\n\n    _this.azimuth = 0;\n    _this.elevation = 0;\n    _this.roll = 0;\n    _this.relAzimuth = 0;\n    _this.relElevation = 0;\n    _this.relRoll = 0;\n    /**\n     * 沿 n 轴移动时，保证移动速度从快到慢\n     */\n\n    _this.dollyingStep = 0;\n    _this.maxDistance = Infinity;\n    _this.minDistance = -Infinity;\n    /**\n     * zoom factor of the camera, default is 1\n     * eg. https://threejs.org/docs/#api/en/cameras/OrthographicCamera.zoom\n     */\n\n    _this.zoom = 1;\n    /**\n     * invert the horizontal coordinate system HCS\n     */\n\n    _this.rotateWorld = false;\n    /**\n     * 投影矩阵参数\n     */\n\n    /**\n     * field of view [0-360]\n     * @see http://en.wikipedia.org/wiki/Angle_of_view\n     */\n\n    _this.fov = 30;\n    _this.near = 0.1;\n    _this.far = 1000;\n    _this.aspect = 1;\n    _this.projectionMatrix = mat4.create();\n    _this.projectionMatrixInverse = mat4.create();\n    _this.jitteredProjectionMatrix = undefined;\n    _this.enableUpdate = true; // private following = undefined;\n\n    _this.type = CameraType.EXPLORING;\n    _this.trackingMode = CameraTrackingMode.DEFAULT;\n    _this.projectionMode = CameraProjectionMode.PERSPECTIVE;\n    /**\n     * for culling use\n     */\n\n    _this.frustum = new Frustum();\n    /**\n     * switch between multiple landmarks\n     */\n\n    _this.landmarks = [];\n    /**\n     * ortho matrix for Canvas2D & SVG\n     */\n\n    _this.orthoMatrix = mat4.create();\n\n    _this.setType(type, trackingMode);\n\n    return _this;\n  }\n\n  Camera.prototype.isOrtho = function () {\n    return this.projectionMode === CameraProjectionMode.ORTHOGRAPHIC;\n  };\n\n  Camera.prototype.getProjectionMode = function () {\n    return this.projectionMode;\n  };\n\n  Camera.prototype.getPerspective = function () {\n    // account for TAA\n    return this.jitteredProjectionMatrix || this.projectionMatrix;\n  };\n\n  Camera.prototype.getPerspectiveInverse = function () {\n    return this.projectionMatrixInverse;\n  };\n\n  Camera.prototype.getFrustum = function () {\n    return this.frustum;\n  };\n\n  Camera.prototype.getPosition = function () {\n    return this.position;\n  };\n\n  Camera.prototype.getFocalPoint = function () {\n    return this.focalPoint;\n  };\n\n  Camera.prototype.getDollyingStep = function () {\n    return this.dollyingStep;\n  };\n\n  Camera.prototype.getNear = function () {\n    return this.near;\n  };\n\n  Camera.prototype.getFar = function () {\n    return this.far;\n  };\n\n  Camera.prototype.getZoom = function () {\n    return this.zoom;\n  };\n\n  Camera.prototype.getOrthoMatrix = function () {\n    return this.orthoMatrix;\n  };\n\n  Camera.prototype.getView = function () {\n    return this.view;\n  };\n\n  Camera.prototype.setEnableUpdate = function (enabled) {\n    this.enableUpdate = enabled;\n  };\n\n  Camera.prototype.setType = function (type, trackingMode) {\n    this.type = type;\n\n    if (this.type === CameraType.EXPLORING) {\n      this.setWorldRotation(true);\n    } else {\n      this.setWorldRotation(false);\n    }\n\n    this._getAngles();\n\n    if (this.type === CameraType.TRACKING && trackingMode !== undefined) {\n      this.setTrackingMode(trackingMode);\n    }\n\n    return this;\n  };\n\n  Camera.prototype.setProjectionMode = function (projectionMode) {\n    this.projectionMode = projectionMode;\n    return this;\n  };\n\n  Camera.prototype.setTrackingMode = function (trackingMode) {\n    if (this.type !== CameraType.TRACKING) {\n      throw new Error('Impossible to set a tracking mode if the camera is not of tracking type');\n    }\n\n    this.trackingMode = trackingMode;\n    return this;\n  };\n  /**\n   * If flag is true, it reverses the azimuth and elevation angles.\n   * Subsequent calls to rotate, setAzimuth, setElevation,\n   * changeAzimuth or changeElevation will cause the inverted effect.\n   * setRoll or changeRoll is not affected by this method.\n   *\n   * This inversion is useful when one wants to simulate that the world\n   * is moving, instead of the camera.\n   *\n   * By default the camera angles are not reversed.\n   * @param {Boolean} flag the boolean flag to reverse the angles.\n   */\n\n\n  Camera.prototype.setWorldRotation = function (flag) {\n    this.rotateWorld = flag;\n\n    this._getAngles();\n\n    return this;\n  };\n  /**\n   * 计算 MV 矩阵，为相机矩阵的逆矩阵\n   */\n\n\n  Camera.prototype.getViewTransform = function () {\n    return mat4.invert(mat4.create(), this.matrix);\n  };\n\n  Camera.prototype.getWorldTransform = function () {\n    return this.matrix;\n  };\n\n  Camera.prototype.jitterProjectionMatrix = function (x, y) {\n    var translation = mat4.fromTranslation(mat4.create(), [x, y, 0]);\n    this.jitteredProjectionMatrix = mat4.multiply(mat4.create(), translation, this.projectionMatrix);\n  };\n\n  Camera.prototype.clearJitterProjectionMatrix = function () {\n    this.jitteredProjectionMatrix = undefined;\n  };\n  /**\n   * 设置相机矩阵\n   */\n\n\n  Camera.prototype.setMatrix = function (matrix) {\n    this.matrix = matrix;\n\n    this._update();\n\n    return this;\n  };\n\n  Camera.prototype.setFov = function (fov) {\n    this.setPerspective(this.near, this.far, fov, this.aspect);\n    return this;\n  };\n\n  Camera.prototype.setAspect = function (aspect) {\n    this.setPerspective(this.near, this.far, this.fov, aspect);\n    return this;\n  };\n\n  Camera.prototype.setNear = function (near) {\n    if (this.projectionMode === CameraProjectionMode.PERSPECTIVE) {\n      this.setPerspective(near, this.far, this.fov, this.aspect);\n    } else {\n      this.setOrthographic(this.left, this.rright, this.top, this.bottom, near, this.far);\n    }\n\n    return this;\n  };\n\n  Camera.prototype.setFar = function (far) {\n    if (this.projectionMode === CameraProjectionMode.PERSPECTIVE) {\n      this.setPerspective(this.near, far, this.fov, this.aspect);\n    } else {\n      this.setOrthographic(this.left, this.rright, this.top, this.bottom, this.near, far);\n    }\n\n    return this;\n  };\n  /**\n   * Sets an offset in a larger frustum, used in PixelPicking\n   */\n\n\n  Camera.prototype.setViewOffset = function (fullWidth, fullHeight, x, y, width, height) {\n    this.aspect = fullWidth / fullHeight;\n\n    if (this.view === undefined) {\n      this.view = {\n        enabled: true,\n        fullWidth: 1,\n        fullHeight: 1,\n        offsetX: 0,\n        offsetY: 0,\n        width: 1,\n        height: 1\n      };\n    }\n\n    this.view.enabled = true;\n    this.view.fullWidth = fullWidth;\n    this.view.fullHeight = fullHeight;\n    this.view.offsetX = x;\n    this.view.offsetY = y;\n    this.view.width = width;\n    this.view.height = height;\n\n    if (this.projectionMode === CameraProjectionMode.PERSPECTIVE) {\n      this.setPerspective(this.near, this.far, this.fov, this.aspect);\n    } else {\n      this.setOrthographic(this.left, this.rright, this.top, this.bottom, this.near, this.far);\n    }\n\n    return this;\n  };\n\n  Camera.prototype.clearViewOffset = function () {\n    if (this.view !== undefined) {\n      this.view.enabled = false;\n    }\n\n    if (this.projectionMode === CameraProjectionMode.PERSPECTIVE) {\n      this.setPerspective(this.near, this.far, this.fov, this.aspect);\n    } else {\n      this.setOrthographic(this.left, this.rright, this.top, this.bottom, this.near, this.far);\n    }\n\n    return this;\n  };\n\n  Camera.prototype.setZoom = function (zoom) {\n    this.zoom = zoom;\n\n    if (this.projectionMode === CameraProjectionMode.ORTHOGRAPHIC) {\n      this.setOrthographic(this.left, this.rright, this.top, this.bottom, this.near, this.far);\n    } else if (this.projectionMode === CameraProjectionMode.PERSPECTIVE) {\n      this.setPerspective(this.near, this.far, this.fov, this.aspect);\n    }\n\n    return this;\n  };\n\n  Camera.prototype.setPerspective = function (near, far, fov, aspect) {\n    var _a;\n\n    this.projectionMode = CameraProjectionMode.PERSPECTIVE;\n    this.fov = fov;\n    this.near = near;\n    this.far = far;\n    this.aspect = aspect;\n    var top = this.near * Math.tan(DEG_2_RAD * 0.5 * this.fov) / this.zoom;\n    var height = 2 * top;\n    var width = this.aspect * height;\n    var left = -0.5 * width;\n\n    if ((_a = this.view) === null || _a === void 0 ? void 0 : _a.enabled) {\n      var fullWidth = this.view.fullWidth;\n      var fullHeight = this.view.fullHeight;\n      left += this.view.offsetX * width / fullWidth;\n      top -= this.view.offsetY * height / fullHeight;\n      width *= this.view.width / fullWidth;\n      height *= this.view.height / fullHeight;\n    }\n\n    makePerspective(this.projectionMatrix, left, left + width, top, top - height, near, this.far); // flipY since the origin of OpenGL/WebGL is bottom-left compared with top-left in Canvas2D\n\n    mat4.scale(this.projectionMatrix, this.projectionMatrix, vec3.fromValues(1, -1, 1));\n    mat4.invert(this.projectionMatrixInverse, this.projectionMatrix);\n    this.triggerUpdate();\n    return this;\n  };\n\n  Camera.prototype.setOrthographic = function (l, r, t, b, near, far) {\n    var _a;\n\n    this.projectionMode = CameraProjectionMode.ORTHOGRAPHIC;\n    this.rright = r;\n    this.left = l;\n    this.top = t;\n    this.bottom = b;\n    this.near = near;\n    this.far = far;\n    var dx = (this.rright - this.left) / (2 * this.zoom);\n    var dy = (this.top - this.bottom) / (2 * this.zoom);\n    var cx = (this.rright + this.left) / 2;\n    var cy = (this.top + this.bottom) / 2;\n    var left = cx - dx;\n    var right = cx + dx;\n    var top = cy + dy;\n    var bottom = cy - dy;\n\n    if ((_a = this.view) === null || _a === void 0 ? void 0 : _a.enabled) {\n      var scaleW = (this.rright - this.left) / this.view.fullWidth / this.zoom;\n      var scaleH = (this.top - this.bottom) / this.view.fullHeight / this.zoom;\n      left += scaleW * this.view.offsetX;\n      right = left + scaleW * this.view.width;\n      top -= scaleH * this.view.offsetY;\n      bottom = top - scaleH * this.view.height;\n    }\n\n    mat4.ortho(this.projectionMatrix, left, right, bottom, top, near, far); // flipY since the origin of OpenGL/WebGL is bottom-left compared with top-left in Canvas2D\n\n    mat4.scale(this.projectionMatrix, this.projectionMatrix, vec3.fromValues(1, -1, 1));\n    mat4.invert(this.projectionMatrixInverse, this.projectionMatrix);\n\n    this._getOrthoMatrix();\n\n    this.triggerUpdate();\n    return this;\n  };\n  /**\n   * Move the camera in world coordinates.\n   * It will keep looking at the current focal point.\n   *\n   * support scalars or vectors.\n   * @example\n   * setPosition(1, 2, 3);\n   * setPosition([1, 2, 3]);\n   */\n\n\n  Camera.prototype.setPosition = function (x, y, z) {\n    if (y === void 0) {\n      y = this.position[1];\n    }\n\n    if (z === void 0) {\n      z = this.position[2];\n    }\n\n    var position = createVec3(x, y, z);\n\n    this._setPosition(position);\n\n    this.setFocalPoint(this.focalPoint);\n    this.triggerUpdate();\n    return this;\n  };\n  /**\n   * Sets the focal point of this camera in world coordinates.\n   *\n   * support scalars or vectors.\n   * @example\n   * setFocalPoint(1, 2, 3);\n   * setFocalPoint([1, 2, 3]);\n   */\n\n\n  Camera.prototype.setFocalPoint = function (x, y, z) {\n    if (y === void 0) {\n      y = this.focalPoint[1];\n    }\n\n    if (z === void 0) {\n      z = this.focalPoint[2];\n    }\n\n    var up = vec3.fromValues(0, 1, 0);\n    this.focalPoint = createVec3(x, y, z);\n\n    if (this.trackingMode === CameraTrackingMode.CINEMATIC) {\n      var d = vec3.subtract(vec3.create(), this.focalPoint, this.position);\n      x = d[0];\n      y = d[1];\n      z = d[2];\n      var r = vec3.length(d);\n      var el = Math.asin(y / r) * RAD_2_DEG;\n      var az = 90 + Math.atan2(z, x) * RAD_2_DEG;\n      var m = mat4.create();\n      mat4.rotateY(m, m, az * DEG_2_RAD);\n      mat4.rotateX(m, m, el * DEG_2_RAD);\n      up = vec3.transformMat4(vec3.create(), [0, 1, 0], m);\n    }\n\n    mat4.invert(this.matrix, mat4.lookAt(mat4.create(), this.position, this.focalPoint, up));\n\n    this._getAxes();\n\n    this._getDistance();\n\n    this._getAngles();\n\n    this.triggerUpdate();\n    return this;\n  };\n\n  Camera.prototype.getDistance = function () {\n    return this.distance;\n  };\n  /**\n   * Moves the camera towards/from the focal point.\n   */\n\n\n  Camera.prototype.setDistance = function (d) {\n    if (this.distance === d || d < 0) {\n      return this;\n    }\n\n    this.distance = d;\n\n    if (this.distance < MIN_DISTANCE) {\n      this.distance = MIN_DISTANCE;\n    }\n\n    this.dollyingStep = this.distance / 100;\n    var pos = vec3.create();\n    d = this.distance;\n    var n = this.forward;\n    var f = this.focalPoint;\n    pos[0] = d * n[0] + f[0];\n    pos[1] = d * n[1] + f[1];\n    pos[2] = d * n[2] + f[2];\n\n    this._setPosition(pos);\n\n    this.triggerUpdate();\n    return this;\n  };\n\n  Camera.prototype.setMaxDistance = function (d) {\n    this.maxDistance = d;\n    return this;\n  };\n\n  Camera.prototype.setMinDistance = function (d) {\n    this.minDistance = d;\n    return this;\n  }; // /**\n  //  * Changes the initial azimuth of the camera\n  //  */\n  // changeAzimuth(az: number) {\n  //   this.setAzimuth(this.azimuth + az);\n  //   this.triggerUpdate();\n  //   return this;\n  // }\n  // /**\n  //  * Changes the initial elevation of the camera\n  //  */\n  // changeElevation(el: number) {\n  //   this.setElevation(this.elevation + el);\n  //   this.triggerUpdate();\n  //   return this;\n  // }\n  // /**\n  //  * Changes the initial roll of the camera\n  //  */\n  // changeRoll(rl: number) {\n  //   this.setRoll(this.roll + rl);\n  //   this.triggerUpdate();\n  //   return this;\n  // }\n\n  /**\n   * 设置相机方位角，不同相机模式下需要重新计算相机位置或者是视点位置\n   * the azimuth in degrees\n   */\n\n\n  Camera.prototype.setAzimuth = function (az) {\n    this.azimuth = getAngle(az);\n    this.computeMatrix();\n\n    this._getAxes();\n\n    if (this.type === CameraType.ORBITING || this.type === CameraType.EXPLORING) {\n      this._getPosition();\n    } else if (this.type === CameraType.TRACKING) {\n      this._getFocalPoint();\n    }\n\n    this.triggerUpdate();\n    return this;\n  };\n\n  Camera.prototype.getAzimuth = function () {\n    return this.azimuth;\n  };\n  /**\n   * 设置相机方位角，不同相机模式下需要重新计算相机位置或者是视点位置\n   */\n\n\n  Camera.prototype.setElevation = function (el) {\n    this.elevation = getAngle(el);\n    this.computeMatrix();\n\n    this._getAxes();\n\n    if (this.type === CameraType.ORBITING || this.type === CameraType.EXPLORING) {\n      this._getPosition();\n    } else if (this.type === CameraType.TRACKING) {\n      this._getFocalPoint();\n    }\n\n    this.triggerUpdate();\n    return this;\n  };\n\n  Camera.prototype.getElevation = function () {\n    return this.elevation;\n  };\n  /**\n   * 设置相机方位角，不同相机模式下需要重新计算相机位置或者是视点位置\n   */\n\n\n  Camera.prototype.setRoll = function (angle) {\n    this.roll = getAngle(angle);\n    this.computeMatrix();\n\n    this._getAxes();\n\n    if (this.type === CameraType.ORBITING || this.type === CameraType.EXPLORING) {\n      this._getPosition();\n    } else if (this.type === CameraType.TRACKING) {\n      this._getFocalPoint();\n    }\n\n    this.triggerUpdate();\n    return this;\n  };\n\n  Camera.prototype.getRoll = function () {\n    return this.roll;\n  };\n  /**\n   * Changes the azimuth and elevation with respect to the current camera axes\n   * @param {Number} azimuth the relative azimuth\n   * @param {Number} elevation the relative elevation\n   * @param {Number} roll the relative roll\n   */\n\n\n  Camera.prototype.rotate = function (azimuth, elevation, roll) {\n    this.relElevation = getAngle(elevation);\n    this.relAzimuth = getAngle(azimuth);\n    this.relRoll = getAngle(roll);\n    this.elevation += this.relElevation;\n    this.azimuth += this.relAzimuth;\n    this.roll += this.relRoll;\n\n    if (this.type === CameraType.EXPLORING) {\n      var rotX = quat.setAxisAngle(quat.create(), [1, 0, 0], (this.rotateWorld ? 1 : -1) * this.relElevation * DEG_2_RAD);\n      var rotY = quat.setAxisAngle(quat.create(), [0, 1, 0], (this.rotateWorld ? 1 : -1) * this.relAzimuth * DEG_2_RAD);\n      var rotZ = quat.setAxisAngle(quat.create(), [0, 0, 1], this.relRoll * DEG_2_RAD);\n      var rotQ = quat.multiply(quat.create(), rotY, rotX);\n      rotQ = quat.multiply(quat.create(), rotQ, rotZ);\n      var rotMatrix = mat4.fromQuat(mat4.create(), rotQ);\n      mat4.translate(this.matrix, this.matrix, [0, 0, -this.distance]);\n      mat4.multiply(this.matrix, this.matrix, rotMatrix);\n      mat4.translate(this.matrix, this.matrix, [0, 0, this.distance]);\n    } else {\n      if (Math.abs(this.elevation) > 90) {\n        return this;\n      }\n\n      this.computeMatrix();\n    }\n\n    this._getAxes();\n\n    if (this.type === CameraType.ORBITING || this.type === CameraType.EXPLORING) {\n      this._getPosition();\n    } else if (this.type === CameraType.TRACKING) {\n      this._getFocalPoint();\n    }\n\n    this._update();\n\n    return this;\n  };\n  /**\n   * 沿水平(right) & 垂直(up)平移相机\n   */\n\n\n  Camera.prototype.pan = function (tx, ty) {\n    var coords = createVec3(tx, ty, 0);\n    var pos = vec3.clone(this.position);\n    vec3.add(pos, pos, vec3.scale(vec3.create(), this.right, coords[0]));\n    vec3.add(pos, pos, vec3.scale(vec3.create(), this.up, coords[1]));\n\n    this._setPosition(pos);\n\n    this.triggerUpdate();\n    return this;\n  };\n  /**\n   * 沿 n 轴移动，当距离视点远时移动速度较快，离视点越近速度越慢\n   */\n\n\n  Camera.prototype.dolly = function (value) {\n    var n = this.forward;\n    var pos = vec3.clone(this.position);\n    var step = value * this.dollyingStep;\n    var updatedDistance = this.distance + value * this.dollyingStep; // 限制视点距离范围\n\n    step = Math.max(Math.min(updatedDistance, this.maxDistance), this.minDistance) - this.distance;\n    pos[0] += step * n[0];\n    pos[1] += step * n[1];\n    pos[2] += step * n[2];\n\n    this._setPosition(pos);\n\n    if (this.type === CameraType.ORBITING || this.type === CameraType.EXPLORING) {\n      // 重新计算视点距离\n      this._getDistance();\n    } else if (this.type === CameraType.TRACKING) {\n      // 保持视距，移动视点位置\n      vec3.add(this.focalPoint, pos, this.distanceVector);\n    }\n\n    this.triggerUpdate();\n    return this;\n  };\n\n  Camera.prototype.createLandmark = function (name, params) {\n    if (params === void 0) {\n      params = {};\n    }\n\n    var _a = params.position,\n        position = _a === void 0 ? this.position : _a,\n        _b = params.focalPoint,\n        focalPoint = _b === void 0 ? this.focalPoint : _b,\n        roll = params.roll,\n        zoom = params.zoom;\n    var camera = new Camera();\n    camera.setType(this.type, undefined);\n    camera.setPosition(position[0], position[1] || this.position[1], position[2] || this.position[2]);\n    camera.setFocalPoint(focalPoint[0], focalPoint[1] || this.focalPoint[1], focalPoint[2] || this.focalPoint[2]);\n    camera.setRoll(roll || this.roll);\n    camera.setZoom(zoom || this.zoom);\n    var landmark = {\n      name: name,\n      matrix: mat4.clone(camera.matrix),\n      right: vec3.clone(camera.right),\n      up: vec3.clone(camera.up),\n      forward: vec3.clone(camera.forward),\n      position: vec3.clone(camera.position),\n      focalPoint: vec3.clone(camera.focalPoint),\n      distanceVector: vec3.clone(camera.distanceVector),\n      distance: camera.distance,\n      dollyingStep: camera.dollyingStep,\n      azimuth: camera.azimuth,\n      elevation: camera.elevation,\n      roll: camera.roll,\n      relAzimuth: camera.relAzimuth,\n      relElevation: camera.relElevation,\n      relRoll: camera.relRoll,\n      zoom: camera.zoom\n    };\n    this.landmarks.push(landmark);\n    return landmark;\n  };\n\n  Camera.prototype.gotoLandmark = function (name, options) {\n    var _this = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var landmark = isString(name) ? this.landmarks.find(function (l) {\n      return l.name === name;\n    }) : name;\n\n    if (landmark) {\n      var _a = isNumber(options) ? {\n        duration: options\n      } : options,\n          _b = _a.easing,\n          easing = _b === void 0 ? 'linear' : _b,\n          _c = _a.duration,\n          duration_1 = _c === void 0 ? 100 : _c,\n          _d = _a.easingFunction,\n          easingFunction = _d === void 0 ? undefined : _d,\n          _e = _a.onfinish,\n          onfinish_1 = _e === void 0 ? undefined : _e;\n\n      var epsilon_1 = 0.01;\n\n      if (duration_1 === 0) {\n        this.syncFromLandmark(landmark);\n\n        if (onfinish_1) {\n          onfinish_1();\n        }\n\n        return;\n      } // cancel ongoing animation\n\n\n      if (this.landmarkAnimationID !== undefined) {\n        this.canvas.cancelAnimationFrame(this.landmarkAnimationID);\n      }\n\n      var destPosition_1 = landmark.position;\n      var destFocalPoint_1 = landmark.focalPoint;\n      var destZoom_1 = landmark.zoom;\n      var destRoll_1 = landmark.roll;\n      var easingFunc_1 = easingFunction || parseEasingFunction(easing);\n      var timeStart_1;\n\n      var endAnimation_1 = function endAnimation_1() {\n        _this.setFocalPoint(destFocalPoint_1);\n\n        _this.setPosition(destPosition_1);\n\n        _this.setRoll(destRoll_1);\n\n        _this.setZoom(destZoom_1);\n\n        _this.computeMatrix();\n\n        _this.triggerUpdate();\n\n        if (onfinish_1) {\n          onfinish_1();\n        }\n      };\n\n      var animate_1 = function animate_1(timestamp) {\n        if (timeStart_1 === undefined) {\n          timeStart_1 = timestamp;\n        }\n\n        var elapsed = timestamp - timeStart_1;\n\n        if (elapsed > duration_1) {\n          endAnimation_1();\n          return;\n        } // use the same ease function in animation system\n\n\n        var t = easingFunc_1(elapsed / duration_1);\n        var interFocalPoint = vec3.create();\n        var interPosition = vec3.create();\n        var interZoom = 1;\n        var interRoll = 0;\n        vec3.lerp(interFocalPoint, _this.focalPoint, destFocalPoint_1, t);\n        vec3.lerp(interPosition, _this.position, destPosition_1, t);\n        interRoll = _this.roll * (1 - t) + destRoll_1 * t;\n        interZoom = _this.zoom * (1 - t) + destZoom_1 * t;\n\n        _this.setFocalPoint(interFocalPoint);\n\n        _this.setPosition(interPosition);\n\n        _this.setRoll(interRoll);\n\n        _this.setZoom(interZoom);\n\n        var dist = vec3.dist(interFocalPoint, destFocalPoint_1) + vec3.dist(interPosition, destPosition_1);\n\n        if (dist <= epsilon_1) {\n          endAnimation_1();\n          return;\n        }\n\n        _this.computeMatrix();\n\n        _this.triggerUpdate();\n\n        if (elapsed < duration_1) {\n          _this.landmarkAnimationID = _this.canvas.requestAnimationFrame(animate_1);\n        }\n      };\n\n      this.canvas.requestAnimationFrame(animate_1);\n    }\n  };\n  /**\n   * 根据相机矩阵重新计算各种相机参数\n   */\n\n\n  Camera.prototype._update = function () {\n    this._getAxes();\n\n    this._getPosition();\n\n    this._getDistance();\n\n    this._getAngles();\n\n    this._getOrthoMatrix();\n\n    this.triggerUpdate();\n  };\n  /**\n   * 计算相机矩阵\n   */\n\n\n  Camera.prototype.computeMatrix = function () {\n    // 使用四元数描述 3D 旋转\n    // @see https://xiaoiver.github.io/coding/2018/12/28/Camera-%E8%AE%BE%E8%AE%A1-%E4%B8%80.html\n    var rotZ = quat.setAxisAngle(quat.create(), [0, 0, 1], this.roll * DEG_2_RAD);\n    mat4.identity(this.matrix); // only consider HCS for EXPLORING and ORBITING cameras\n\n    var rotX = quat.setAxisAngle(quat.create(), [1, 0, 0], (this.rotateWorld && this.type !== CameraType.TRACKING || this.type === CameraType.TRACKING ? 1 : -1) * this.elevation * DEG_2_RAD);\n    var rotY = quat.setAxisAngle(quat.create(), [0, 1, 0], (this.rotateWorld && this.type !== CameraType.TRACKING || this.type === CameraType.TRACKING ? 1 : -1) * this.azimuth * DEG_2_RAD);\n    var rotQ = quat.multiply(quat.create(), rotY, rotX);\n    rotQ = quat.multiply(quat.create(), rotQ, rotZ);\n    var rotMatrix = mat4.fromQuat(mat4.create(), rotQ);\n\n    if (this.type === CameraType.ORBITING || this.type === CameraType.EXPLORING) {\n      mat4.translate(this.matrix, this.matrix, this.focalPoint);\n      mat4.multiply(this.matrix, this.matrix, rotMatrix);\n      mat4.translate(this.matrix, this.matrix, [0, 0, this.distance]);\n    } else if (this.type === CameraType.TRACKING) {\n      mat4.translate(this.matrix, this.matrix, this.position);\n      mat4.multiply(this.matrix, this.matrix, rotMatrix);\n    }\n  };\n  /**\n   * Sets the camera position in the camera matrix\n   */\n\n\n  Camera.prototype._setPosition = function (x, y, z) {\n    this.position = createVec3(x, y, z);\n    var m = this.matrix;\n    m[12] = this.position[0];\n    m[13] = this.position[1];\n    m[14] = this.position[2];\n    m[15] = 1;\n\n    this._getOrthoMatrix();\n  };\n  /**\n   * Recalculates axes based on the current matrix\n   */\n\n\n  Camera.prototype._getAxes = function () {\n    vec3.copy(this.right, createVec3(vec4.transformMat4(vec4.create(), [1, 0, 0, 0], this.matrix)));\n    vec3.copy(this.up, createVec3(vec4.transformMat4(vec4.create(), [0, 1, 0, 0], this.matrix)));\n    vec3.copy(this.forward, createVec3(vec4.transformMat4(vec4.create(), [0, 0, 1, 0], this.matrix)));\n    vec3.normalize(this.right, this.right);\n    vec3.normalize(this.up, this.up);\n    vec3.normalize(this.forward, this.forward);\n  };\n  /**\n   * Recalculates euler angles based on the current state\n   */\n\n\n  Camera.prototype._getAngles = function () {\n    // Recalculates angles\n    var x = this.distanceVector[0];\n    var y = this.distanceVector[1];\n    var z = this.distanceVector[2];\n    var r = vec3.length(this.distanceVector); // FAST FAIL: If there is no distance we cannot compute angles\n\n    if (r === 0) {\n      this.elevation = 0;\n      this.azimuth = 0;\n      return;\n    }\n\n    if (this.type === CameraType.TRACKING) {\n      this.elevation = Math.asin(y / r) * RAD_2_DEG;\n      this.azimuth = Math.atan2(-x, -z) * RAD_2_DEG;\n    } else {\n      if (this.rotateWorld) {\n        this.elevation = Math.asin(y / r) * RAD_2_DEG;\n        this.azimuth = Math.atan2(-x, -z) * RAD_2_DEG;\n      } else {\n        this.elevation = -Math.asin(y / r) * RAD_2_DEG;\n        this.azimuth = -Math.atan2(-x, -z) * RAD_2_DEG;\n      }\n    }\n  };\n  /**\n   * 重新计算相机位置，只有 ORBITING 模式相机位置才会发生变化\n   */\n\n\n  Camera.prototype._getPosition = function () {\n    vec3.copy(this.position, createVec3(vec4.transformMat4(vec4.create(), [0, 0, 0, 1], this.matrix))); // 相机位置变化，需要重新计算视距\n\n    this._getDistance();\n  };\n  /**\n   * 重新计算视点，只有 TRACKING 模式视点才会发生变化\n   */\n\n\n  Camera.prototype._getFocalPoint = function () {\n    vec3.transformMat3(this.distanceVector, [0, 0, -this.distance], mat3.fromMat4(mat3.create(), this.matrix));\n    vec3.add(this.focalPoint, this.position, this.distanceVector); // 视点变化，需要重新计算视距\n\n    this._getDistance();\n  };\n  /**\n   * 重新计算视距\n   */\n\n\n  Camera.prototype._getDistance = function () {\n    this.distanceVector = vec3.subtract(vec3.create(), this.focalPoint, this.position);\n    this.distance = vec3.length(this.distanceVector);\n    this.dollyingStep = this.distance / 100;\n  };\n\n  Camera.prototype._getOrthoMatrix = function () {\n    if (this.projectionMode !== CameraProjectionMode.ORTHOGRAPHIC) {\n      return;\n    }\n\n    var position = this.position;\n    var rotZ = quat.setAxisAngle(quat.create(), [0, 0, 1], -this.roll * Math.PI / 180);\n    mat4.fromRotationTranslationScaleOrigin(this.orthoMatrix, rotZ, vec3.fromValues((this.rright - this.left) / 2 - position[0], (this.top - this.bottom) / 2 - position[1], 0), vec3.fromValues(this.zoom, this.zoom, 1), position);\n  };\n\n  Camera.prototype.triggerUpdate = function () {\n    if (this.enableUpdate) {\n      // update frustum\n      var viewMatrix = this.getViewTransform();\n      var vpMatrix = mat4.multiply(mat4.create(), this.getPerspective(), viewMatrix);\n      this.getFrustum().extractFromVPMatrix(vpMatrix);\n      this.emit(CameraEvent.UPDATED);\n    }\n  };\n\n  Camera.prototype.syncFromLandmark = function (landmark) {\n    this.matrix = mat4.copy(this.matrix, landmark.matrix);\n    this.right = vec3.copy(this.right, landmark.right);\n    this.up = vec3.copy(this.up, landmark.up);\n    this.forward = vec3.copy(this.forward, landmark.forward);\n    this.position = vec3.copy(this.position, landmark.position);\n    this.focalPoint = vec3.copy(this.focalPoint, landmark.focalPoint);\n    this.distanceVector = vec3.copy(this.distanceVector, landmark.distanceVector);\n    this.azimuth = landmark.azimuth;\n    this.elevation = landmark.elevation;\n    this.roll = landmark.roll;\n    this.relAzimuth = landmark.relAzimuth;\n    this.relElevation = landmark.relElevation;\n    this.relRoll = landmark.relRoll;\n    this.dollyingStep = landmark.dollyingStep;\n    this.distance = landmark.distance;\n    this.zoom = landmark.zoom;\n  };\n\n  return Camera;\n}(EventEmitter);\n\nexport { Camera };","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/@antv/g/es/camera/Camera.js"],"names":["__extends","isNumber","isString","Syringe","EventEmitter","mat3","mat4","quat","vec3","vec4","Frustum","createVec3","getAngle","makePerspective","parseEasingFunction","DefaultCamera","defineToken","CameraType","CameraTrackingMode","CameraProjectionMode","CameraEvent","UPDATED","DEG_2_RAD","Math","PI","RAD_2_DEG","MIN_DISTANCE","Camera","_super","type","trackingMode","EXPLORING","DEFAULT","_this","call","matrix","create","right","fromValues","up","forward","position","focalPoint","distanceVector","distance","azimuth","elevation","roll","relAzimuth","relElevation","relRoll","dollyingStep","maxDistance","Infinity","minDistance","zoom","rotateWorld","fov","near","far","aspect","projectionMatrix","projectionMatrixInverse","jitteredProjectionMatrix","undefined","enableUpdate","projectionMode","PERSPECTIVE","frustum","landmarks","orthoMatrix","setType","prototype","isOrtho","ORTHOGRAPHIC","getProjectionMode","getPerspective","getPerspectiveInverse","getFrustum","getPosition","getFocalPoint","getDollyingStep","getNear","getFar","getZoom","getOrthoMatrix","getView","view","setEnableUpdate","enabled","setWorldRotation","_getAngles","TRACKING","setTrackingMode","setProjectionMode","Error","flag","getViewTransform","invert","getWorldTransform","jitterProjectionMatrix","x","y","translation","fromTranslation","multiply","clearJitterProjectionMatrix","setMatrix","_update","setFov","setPerspective","setAspect","setNear","setOrthographic","left","rright","top","bottom","setFar","setViewOffset","fullWidth","fullHeight","width","height","offsetX","offsetY","clearViewOffset","setZoom","_a","tan","scale","triggerUpdate","l","r","t","b","dx","dy","cx","cy","scaleW","scaleH","ortho","_getOrthoMatrix","setPosition","z","_setPosition","setFocalPoint","CINEMATIC","d","subtract","length","el","asin","az","atan2","m","rotateY","rotateX","transformMat4","lookAt","_getAxes","_getDistance","getDistance","setDistance","pos","n","f","setMaxDistance","setMinDistance","setAzimuth","computeMatrix","ORBITING","_getPosition","_getFocalPoint","getAzimuth","setElevation","getElevation","setRoll","angle","getRoll","rotate","rotX","setAxisAngle","rotY","rotZ","rotQ","rotMatrix","fromQuat","translate","abs","pan","tx","ty","coords","clone","add","dolly","value","step","updatedDistance","max","min","createLandmark","name","params","_b","camera","landmark","push","gotoLandmark","options","find","duration","easing","_c","duration_1","_d","easingFunction","_e","onfinish","onfinish_1","epsilon_1","syncFromLandmark","landmarkAnimationID","canvas","cancelAnimationFrame","destPosition_1","destFocalPoint_1","destZoom_1","destRoll_1","easingFunc_1","timeStart_1","endAnimation_1","animate_1","timestamp","elapsed","interFocalPoint","interPosition","interZoom","interRoll","lerp","dist","requestAnimationFrame","identity","copy","normalize","transformMat3","fromMat4","fromRotationTranslationScaleOrigin","viewMatrix","vpMatrix","extractFromVPMatrix","emit"],"mappings":"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","sourcesContent":["import { __extends } from \"tslib\";\nimport { isNumber, isString } from 'lodash-es';\nimport { Syringe } from 'mana-syringe';\nimport { EventEmitter } from 'eventemitter3';\nimport { mat3, mat4, quat, vec3, vec4 } from 'gl-matrix';\nimport { Frustum } from '../shapes';\nimport { createVec3, getAngle, makePerspective } from '../utils/math';\nimport { parseEasingFunction } from '../utils/animation'; // import { DisplayObject } from '../display-objects';\n\nexport var DefaultCamera = Syringe.defineToken('DefaultCamera');\nexport var CameraType;\n\n(function (CameraType) {\n  /**\n   * Performs all the rotational operations with the focal point instead of the camera position.\n   * This type of camera is useful in applications(like CAD) where 3D objects are being designed or explored.\n   * Camera cannot orbits over the north & south poles.\n   * @see http://voxelent.com/tutorial-cameras/\n   *\n   * In Three.js it's used in OrbitControls.\n   * @see https://threejs.org/docs/#examples/zh/controls/OrbitControls\n   */\n  CameraType[CameraType[\"ORBITING\"] = 0] = \"ORBITING\";\n  /**\n   * It's similar to the ORBITING camera, but it allows the camera to orbit over the north or south poles.\n   *\n   * In Three.js it's used in OrbitControls.\n   * @see https://threejs.org/docs/#examples/en/controls/TrackballControls\n   */\n\n  CameraType[CameraType[\"EXPLORING\"] = 1] = \"EXPLORING\";\n  /**\n   * Performs all the rotational operations with the camera position.\n   * It's useful in first person shooting games.\n   * Camera cannot orbits over the north & south poles.\n   *\n   * In Three.js it's used in FirstPersonControls.\n   * @see https://threejs.org/docs/#examples/en/controls/FirstPersonControls\n   */\n\n  CameraType[CameraType[\"TRACKING\"] = 2] = \"TRACKING\";\n})(CameraType || (CameraType = {}));\n/**\n * CameraType must be TRACKING\n */\n\n\nexport var CameraTrackingMode;\n\n(function (CameraTrackingMode) {\n  CameraTrackingMode[CameraTrackingMode[\"DEFAULT\"] = 0] = \"DEFAULT\";\n  CameraTrackingMode[CameraTrackingMode[\"ROTATIONAL\"] = 1] = \"ROTATIONAL\";\n  CameraTrackingMode[CameraTrackingMode[\"TRANSLATIONAL\"] = 2] = \"TRANSLATIONAL\";\n  CameraTrackingMode[CameraTrackingMode[\"CINEMATIC\"] = 3] = \"CINEMATIC\";\n})(CameraTrackingMode || (CameraTrackingMode = {}));\n\nexport var CameraProjectionMode;\n\n(function (CameraProjectionMode) {\n  CameraProjectionMode[CameraProjectionMode[\"ORTHOGRAPHIC\"] = 0] = \"ORTHOGRAPHIC\";\n  CameraProjectionMode[CameraProjectionMode[\"PERSPECTIVE\"] = 1] = \"PERSPECTIVE\";\n})(CameraProjectionMode || (CameraProjectionMode = {}));\n\nexport var CameraEvent = {\n  UPDATED: 'updated'\n};\nvar DEG_2_RAD = Math.PI / 180;\nvar RAD_2_DEG = 180 / Math.PI;\nvar MIN_DISTANCE = 0.0002;\n/**\n * 参考「WebGL Insights - 23.Designing Cameras for WebGL Applications」，基于 Responsible Camera 思路设计\n * @see https://github.com/d13g0/nucleo.js/blob/master/source/camera/Camera.js\n *\n * 保存相机参数，定义相机动作：\n * 1. dolly 沿 n 轴移动\n * 2. pan 沿 u v 轴移动\n * 3. rotate 以方位角旋转\n * 4. 移动到 Landmark，具有平滑的动画效果，其间禁止其他用户交互\n */\n\nvar Camera =\n/** @class */\nfunction (_super) {\n  __extends(Camera, _super);\n\n  function Camera(type, trackingMode) {\n    if (type === void 0) {\n      type = CameraType.EXPLORING;\n    }\n\n    if (trackingMode === void 0) {\n      trackingMode = CameraTrackingMode.DEFAULT;\n    }\n\n    var _this = _super.call(this) || this;\n    /**\n     * 相机矩阵\n     */\n\n\n    _this.matrix = mat4.create();\n    /**\n     * u 轴\n     * @see http://learnwebgl.brown37.net/07_cameras/camera_introduction.html#a-camera-definition\n     */\n\n    _this.right = vec3.fromValues(1, 0, 0);\n    /**\n     * v 轴 +Y is down\n     */\n\n    _this.up = vec3.fromValues(0, 1, 0);\n    /**\n     * n 轴 +Z is inside\n     */\n\n    _this.forward = vec3.fromValues(0, 0, 1);\n    /**\n     * 相机位置\n     */\n\n    _this.position = vec3.fromValues(0, 0, 1);\n    /**\n     * 视点位置\n     */\n\n    _this.focalPoint = vec3.fromValues(0, 0, 0);\n    /**\n     * 视点到相机位置的向量\n     * focalPoint - position\n     */\n\n    _this.distanceVector = vec3.fromValues(0, 0, -1);\n    /**\n     * 相机位置到视点距离\n     * length(focalPoint - position)\n     */\n\n    _this.distance = 1;\n    /**\n     * @see https://en.wikipedia.org/wiki/Azimuth\n     */\n\n    _this.azimuth = 0;\n    _this.elevation = 0;\n    _this.roll = 0;\n    _this.relAzimuth = 0;\n    _this.relElevation = 0;\n    _this.relRoll = 0;\n    /**\n     * 沿 n 轴移动时，保证移动速度从快到慢\n     */\n\n    _this.dollyingStep = 0;\n    _this.maxDistance = Infinity;\n    _this.minDistance = -Infinity;\n    /**\n     * zoom factor of the camera, default is 1\n     * eg. https://threejs.org/docs/#api/en/cameras/OrthographicCamera.zoom\n     */\n\n    _this.zoom = 1;\n    /**\n     * invert the horizontal coordinate system HCS\n     */\n\n    _this.rotateWorld = false;\n    /**\n     * 投影矩阵参数\n     */\n\n    /**\n     * field of view [0-360]\n     * @see http://en.wikipedia.org/wiki/Angle_of_view\n     */\n\n    _this.fov = 30;\n    _this.near = 0.1;\n    _this.far = 1000;\n    _this.aspect = 1;\n    _this.projectionMatrix = mat4.create();\n    _this.projectionMatrixInverse = mat4.create();\n    _this.jitteredProjectionMatrix = undefined;\n    _this.enableUpdate = true; // private following = undefined;\n\n    _this.type = CameraType.EXPLORING;\n    _this.trackingMode = CameraTrackingMode.DEFAULT;\n    _this.projectionMode = CameraProjectionMode.PERSPECTIVE;\n    /**\n     * for culling use\n     */\n\n    _this.frustum = new Frustum();\n    /**\n     * switch between multiple landmarks\n     */\n\n    _this.landmarks = [];\n    /**\n     * ortho matrix for Canvas2D & SVG\n     */\n\n    _this.orthoMatrix = mat4.create();\n\n    _this.setType(type, trackingMode);\n\n    return _this;\n  }\n\n  Camera.prototype.isOrtho = function () {\n    return this.projectionMode === CameraProjectionMode.ORTHOGRAPHIC;\n  };\n\n  Camera.prototype.getProjectionMode = function () {\n    return this.projectionMode;\n  };\n\n  Camera.prototype.getPerspective = function () {\n    // account for TAA\n    return this.jitteredProjectionMatrix || this.projectionMatrix;\n  };\n\n  Camera.prototype.getPerspectiveInverse = function () {\n    return this.projectionMatrixInverse;\n  };\n\n  Camera.prototype.getFrustum = function () {\n    return this.frustum;\n  };\n\n  Camera.prototype.getPosition = function () {\n    return this.position;\n  };\n\n  Camera.prototype.getFocalPoint = function () {\n    return this.focalPoint;\n  };\n\n  Camera.prototype.getDollyingStep = function () {\n    return this.dollyingStep;\n  };\n\n  Camera.prototype.getNear = function () {\n    return this.near;\n  };\n\n  Camera.prototype.getFar = function () {\n    return this.far;\n  };\n\n  Camera.prototype.getZoom = function () {\n    return this.zoom;\n  };\n\n  Camera.prototype.getOrthoMatrix = function () {\n    return this.orthoMatrix;\n  };\n\n  Camera.prototype.getView = function () {\n    return this.view;\n  };\n\n  Camera.prototype.setEnableUpdate = function (enabled) {\n    this.enableUpdate = enabled;\n  };\n\n  Camera.prototype.setType = function (type, trackingMode) {\n    this.type = type;\n\n    if (this.type === CameraType.EXPLORING) {\n      this.setWorldRotation(true);\n    } else {\n      this.setWorldRotation(false);\n    }\n\n    this._getAngles();\n\n    if (this.type === CameraType.TRACKING && trackingMode !== undefined) {\n      this.setTrackingMode(trackingMode);\n    }\n\n    return this;\n  };\n\n  Camera.prototype.setProjectionMode = function (projectionMode) {\n    this.projectionMode = projectionMode;\n    return this;\n  };\n\n  Camera.prototype.setTrackingMode = function (trackingMode) {\n    if (this.type !== CameraType.TRACKING) {\n      throw new Error('Impossible to set a tracking mode if the camera is not of tracking type');\n    }\n\n    this.trackingMode = trackingMode;\n    return this;\n  };\n  /**\n   * If flag is true, it reverses the azimuth and elevation angles.\n   * Subsequent calls to rotate, setAzimuth, setElevation,\n   * changeAzimuth or changeElevation will cause the inverted effect.\n   * setRoll or changeRoll is not affected by this method.\n   *\n   * This inversion is useful when one wants to simulate that the world\n   * is moving, instead of the camera.\n   *\n   * By default the camera angles are not reversed.\n   * @param {Boolean} flag the boolean flag to reverse the angles.\n   */\n\n\n  Camera.prototype.setWorldRotation = function (flag) {\n    this.rotateWorld = flag;\n\n    this._getAngles();\n\n    return this;\n  };\n  /**\n   * 计算 MV 矩阵，为相机矩阵的逆矩阵\n   */\n\n\n  Camera.prototype.getViewTransform = function () {\n    return mat4.invert(mat4.create(), this.matrix);\n  };\n\n  Camera.prototype.getWorldTransform = function () {\n    return this.matrix;\n  };\n\n  Camera.prototype.jitterProjectionMatrix = function (x, y) {\n    var translation = mat4.fromTranslation(mat4.create(), [x, y, 0]);\n    this.jitteredProjectionMatrix = mat4.multiply(mat4.create(), translation, this.projectionMatrix);\n  };\n\n  Camera.prototype.clearJitterProjectionMatrix = function () {\n    this.jitteredProjectionMatrix = undefined;\n  };\n  /**\n   * 设置相机矩阵\n   */\n\n\n  Camera.prototype.setMatrix = function (matrix) {\n    this.matrix = matrix;\n\n    this._update();\n\n    return this;\n  };\n\n  Camera.prototype.setFov = function (fov) {\n    this.setPerspective(this.near, this.far, fov, this.aspect);\n    return this;\n  };\n\n  Camera.prototype.setAspect = function (aspect) {\n    this.setPerspective(this.near, this.far, this.fov, aspect);\n    return this;\n  };\n\n  Camera.prototype.setNear = function (near) {\n    if (this.projectionMode === CameraProjectionMode.PERSPECTIVE) {\n      this.setPerspective(near, this.far, this.fov, this.aspect);\n    } else {\n      this.setOrthographic(this.left, this.rright, this.top, this.bottom, near, this.far);\n    }\n\n    return this;\n  };\n\n  Camera.prototype.setFar = function (far) {\n    if (this.projectionMode === CameraProjectionMode.PERSPECTIVE) {\n      this.setPerspective(this.near, far, this.fov, this.aspect);\n    } else {\n      this.setOrthographic(this.left, this.rright, this.top, this.bottom, this.near, far);\n    }\n\n    return this;\n  };\n  /**\n   * Sets an offset in a larger frustum, used in PixelPicking\n   */\n\n\n  Camera.prototype.setViewOffset = function (fullWidth, fullHeight, x, y, width, height) {\n    this.aspect = fullWidth / fullHeight;\n\n    if (this.view === undefined) {\n      this.view = {\n        enabled: true,\n        fullWidth: 1,\n        fullHeight: 1,\n        offsetX: 0,\n        offsetY: 0,\n        width: 1,\n        height: 1\n      };\n    }\n\n    this.view.enabled = true;\n    this.view.fullWidth = fullWidth;\n    this.view.fullHeight = fullHeight;\n    this.view.offsetX = x;\n    this.view.offsetY = y;\n    this.view.width = width;\n    this.view.height = height;\n\n    if (this.projectionMode === CameraProjectionMode.PERSPECTIVE) {\n      this.setPerspective(this.near, this.far, this.fov, this.aspect);\n    } else {\n      this.setOrthographic(this.left, this.rright, this.top, this.bottom, this.near, this.far);\n    }\n\n    return this;\n  };\n\n  Camera.prototype.clearViewOffset = function () {\n    if (this.view !== undefined) {\n      this.view.enabled = false;\n    }\n\n    if (this.projectionMode === CameraProjectionMode.PERSPECTIVE) {\n      this.setPerspective(this.near, this.far, this.fov, this.aspect);\n    } else {\n      this.setOrthographic(this.left, this.rright, this.top, this.bottom, this.near, this.far);\n    }\n\n    return this;\n  };\n\n  Camera.prototype.setZoom = function (zoom) {\n    this.zoom = zoom;\n\n    if (this.projectionMode === CameraProjectionMode.ORTHOGRAPHIC) {\n      this.setOrthographic(this.left, this.rright, this.top, this.bottom, this.near, this.far);\n    } else if (this.projectionMode === CameraProjectionMode.PERSPECTIVE) {\n      this.setPerspective(this.near, this.far, this.fov, this.aspect);\n    }\n\n    return this;\n  };\n\n  Camera.prototype.setPerspective = function (near, far, fov, aspect) {\n    var _a;\n\n    this.projectionMode = CameraProjectionMode.PERSPECTIVE;\n    this.fov = fov;\n    this.near = near;\n    this.far = far;\n    this.aspect = aspect;\n    var top = this.near * Math.tan(DEG_2_RAD * 0.5 * this.fov) / this.zoom;\n    var height = 2 * top;\n    var width = this.aspect * height;\n    var left = -0.5 * width;\n\n    if ((_a = this.view) === null || _a === void 0 ? void 0 : _a.enabled) {\n      var fullWidth = this.view.fullWidth;\n      var fullHeight = this.view.fullHeight;\n      left += this.view.offsetX * width / fullWidth;\n      top -= this.view.offsetY * height / fullHeight;\n      width *= this.view.width / fullWidth;\n      height *= this.view.height / fullHeight;\n    }\n\n    makePerspective(this.projectionMatrix, left, left + width, top, top - height, near, this.far); // flipY since the origin of OpenGL/WebGL is bottom-left compared with top-left in Canvas2D\n\n    mat4.scale(this.projectionMatrix, this.projectionMatrix, vec3.fromValues(1, -1, 1));\n    mat4.invert(this.projectionMatrixInverse, this.projectionMatrix);\n    this.triggerUpdate();\n    return this;\n  };\n\n  Camera.prototype.setOrthographic = function (l, r, t, b, near, far) {\n    var _a;\n\n    this.projectionMode = CameraProjectionMode.ORTHOGRAPHIC;\n    this.rright = r;\n    this.left = l;\n    this.top = t;\n    this.bottom = b;\n    this.near = near;\n    this.far = far;\n    var dx = (this.rright - this.left) / (2 * this.zoom);\n    var dy = (this.top - this.bottom) / (2 * this.zoom);\n    var cx = (this.rright + this.left) / 2;\n    var cy = (this.top + this.bottom) / 2;\n    var left = cx - dx;\n    var right = cx + dx;\n    var top = cy + dy;\n    var bottom = cy - dy;\n\n    if ((_a = this.view) === null || _a === void 0 ? void 0 : _a.enabled) {\n      var scaleW = (this.rright - this.left) / this.view.fullWidth / this.zoom;\n      var scaleH = (this.top - this.bottom) / this.view.fullHeight / this.zoom;\n      left += scaleW * this.view.offsetX;\n      right = left + scaleW * this.view.width;\n      top -= scaleH * this.view.offsetY;\n      bottom = top - scaleH * this.view.height;\n    }\n\n    mat4.ortho(this.projectionMatrix, left, right, bottom, top, near, far); // flipY since the origin of OpenGL/WebGL is bottom-left compared with top-left in Canvas2D\n\n    mat4.scale(this.projectionMatrix, this.projectionMatrix, vec3.fromValues(1, -1, 1));\n    mat4.invert(this.projectionMatrixInverse, this.projectionMatrix);\n\n    this._getOrthoMatrix();\n\n    this.triggerUpdate();\n    return this;\n  };\n  /**\n   * Move the camera in world coordinates.\n   * It will keep looking at the current focal point.\n   *\n   * support scalars or vectors.\n   * @example\n   * setPosition(1, 2, 3);\n   * setPosition([1, 2, 3]);\n   */\n\n\n  Camera.prototype.setPosition = function (x, y, z) {\n    if (y === void 0) {\n      y = this.position[1];\n    }\n\n    if (z === void 0) {\n      z = this.position[2];\n    }\n\n    var position = createVec3(x, y, z);\n\n    this._setPosition(position);\n\n    this.setFocalPoint(this.focalPoint);\n    this.triggerUpdate();\n    return this;\n  };\n  /**\n   * Sets the focal point of this camera in world coordinates.\n   *\n   * support scalars or vectors.\n   * @example\n   * setFocalPoint(1, 2, 3);\n   * setFocalPoint([1, 2, 3]);\n   */\n\n\n  Camera.prototype.setFocalPoint = function (x, y, z) {\n    if (y === void 0) {\n      y = this.focalPoint[1];\n    }\n\n    if (z === void 0) {\n      z = this.focalPoint[2];\n    }\n\n    var up = vec3.fromValues(0, 1, 0);\n    this.focalPoint = createVec3(x, y, z);\n\n    if (this.trackingMode === CameraTrackingMode.CINEMATIC) {\n      var d = vec3.subtract(vec3.create(), this.focalPoint, this.position);\n      x = d[0];\n      y = d[1];\n      z = d[2];\n      var r = vec3.length(d);\n      var el = Math.asin(y / r) * RAD_2_DEG;\n      var az = 90 + Math.atan2(z, x) * RAD_2_DEG;\n      var m = mat4.create();\n      mat4.rotateY(m, m, az * DEG_2_RAD);\n      mat4.rotateX(m, m, el * DEG_2_RAD);\n      up = vec3.transformMat4(vec3.create(), [0, 1, 0], m);\n    }\n\n    mat4.invert(this.matrix, mat4.lookAt(mat4.create(), this.position, this.focalPoint, up));\n\n    this._getAxes();\n\n    this._getDistance();\n\n    this._getAngles();\n\n    this.triggerUpdate();\n    return this;\n  };\n\n  Camera.prototype.getDistance = function () {\n    return this.distance;\n  };\n  /**\n   * Moves the camera towards/from the focal point.\n   */\n\n\n  Camera.prototype.setDistance = function (d) {\n    if (this.distance === d || d < 0) {\n      return this;\n    }\n\n    this.distance = d;\n\n    if (this.distance < MIN_DISTANCE) {\n      this.distance = MIN_DISTANCE;\n    }\n\n    this.dollyingStep = this.distance / 100;\n    var pos = vec3.create();\n    d = this.distance;\n    var n = this.forward;\n    var f = this.focalPoint;\n    pos[0] = d * n[0] + f[0];\n    pos[1] = d * n[1] + f[1];\n    pos[2] = d * n[2] + f[2];\n\n    this._setPosition(pos);\n\n    this.triggerUpdate();\n    return this;\n  };\n\n  Camera.prototype.setMaxDistance = function (d) {\n    this.maxDistance = d;\n    return this;\n  };\n\n  Camera.prototype.setMinDistance = function (d) {\n    this.minDistance = d;\n    return this;\n  }; // /**\n  //  * Changes the initial azimuth of the camera\n  //  */\n  // changeAzimuth(az: number) {\n  //   this.setAzimuth(this.azimuth + az);\n  //   this.triggerUpdate();\n  //   return this;\n  // }\n  // /**\n  //  * Changes the initial elevation of the camera\n  //  */\n  // changeElevation(el: number) {\n  //   this.setElevation(this.elevation + el);\n  //   this.triggerUpdate();\n  //   return this;\n  // }\n  // /**\n  //  * Changes the initial roll of the camera\n  //  */\n  // changeRoll(rl: number) {\n  //   this.setRoll(this.roll + rl);\n  //   this.triggerUpdate();\n  //   return this;\n  // }\n\n  /**\n   * 设置相机方位角，不同相机模式下需要重新计算相机位置或者是视点位置\n   * the azimuth in degrees\n   */\n\n\n  Camera.prototype.setAzimuth = function (az) {\n    this.azimuth = getAngle(az);\n    this.computeMatrix();\n\n    this._getAxes();\n\n    if (this.type === CameraType.ORBITING || this.type === CameraType.EXPLORING) {\n      this._getPosition();\n    } else if (this.type === CameraType.TRACKING) {\n      this._getFocalPoint();\n    }\n\n    this.triggerUpdate();\n    return this;\n  };\n\n  Camera.prototype.getAzimuth = function () {\n    return this.azimuth;\n  };\n  /**\n   * 设置相机方位角，不同相机模式下需要重新计算相机位置或者是视点位置\n   */\n\n\n  Camera.prototype.setElevation = function (el) {\n    this.elevation = getAngle(el);\n    this.computeMatrix();\n\n    this._getAxes();\n\n    if (this.type === CameraType.ORBITING || this.type === CameraType.EXPLORING) {\n      this._getPosition();\n    } else if (this.type === CameraType.TRACKING) {\n      this._getFocalPoint();\n    }\n\n    this.triggerUpdate();\n    return this;\n  };\n\n  Camera.prototype.getElevation = function () {\n    return this.elevation;\n  };\n  /**\n   * 设置相机方位角，不同相机模式下需要重新计算相机位置或者是视点位置\n   */\n\n\n  Camera.prototype.setRoll = function (angle) {\n    this.roll = getAngle(angle);\n    this.computeMatrix();\n\n    this._getAxes();\n\n    if (this.type === CameraType.ORBITING || this.type === CameraType.EXPLORING) {\n      this._getPosition();\n    } else if (this.type === CameraType.TRACKING) {\n      this._getFocalPoint();\n    }\n\n    this.triggerUpdate();\n    return this;\n  };\n\n  Camera.prototype.getRoll = function () {\n    return this.roll;\n  };\n  /**\n   * Changes the azimuth and elevation with respect to the current camera axes\n   * @param {Number} azimuth the relative azimuth\n   * @param {Number} elevation the relative elevation\n   * @param {Number} roll the relative roll\n   */\n\n\n  Camera.prototype.rotate = function (azimuth, elevation, roll) {\n    this.relElevation = getAngle(elevation);\n    this.relAzimuth = getAngle(azimuth);\n    this.relRoll = getAngle(roll);\n    this.elevation += this.relElevation;\n    this.azimuth += this.relAzimuth;\n    this.roll += this.relRoll;\n\n    if (this.type === CameraType.EXPLORING) {\n      var rotX = quat.setAxisAngle(quat.create(), [1, 0, 0], (this.rotateWorld ? 1 : -1) * this.relElevation * DEG_2_RAD);\n      var rotY = quat.setAxisAngle(quat.create(), [0, 1, 0], (this.rotateWorld ? 1 : -1) * this.relAzimuth * DEG_2_RAD);\n      var rotZ = quat.setAxisAngle(quat.create(), [0, 0, 1], this.relRoll * DEG_2_RAD);\n      var rotQ = quat.multiply(quat.create(), rotY, rotX);\n      rotQ = quat.multiply(quat.create(), rotQ, rotZ);\n      var rotMatrix = mat4.fromQuat(mat4.create(), rotQ);\n      mat4.translate(this.matrix, this.matrix, [0, 0, -this.distance]);\n      mat4.multiply(this.matrix, this.matrix, rotMatrix);\n      mat4.translate(this.matrix, this.matrix, [0, 0, this.distance]);\n    } else {\n      if (Math.abs(this.elevation) > 90) {\n        return this;\n      }\n\n      this.computeMatrix();\n    }\n\n    this._getAxes();\n\n    if (this.type === CameraType.ORBITING || this.type === CameraType.EXPLORING) {\n      this._getPosition();\n    } else if (this.type === CameraType.TRACKING) {\n      this._getFocalPoint();\n    }\n\n    this._update();\n\n    return this;\n  };\n  /**\n   * 沿水平(right) & 垂直(up)平移相机\n   */\n\n\n  Camera.prototype.pan = function (tx, ty) {\n    var coords = createVec3(tx, ty, 0);\n    var pos = vec3.clone(this.position);\n    vec3.add(pos, pos, vec3.scale(vec3.create(), this.right, coords[0]));\n    vec3.add(pos, pos, vec3.scale(vec3.create(), this.up, coords[1]));\n\n    this._setPosition(pos);\n\n    this.triggerUpdate();\n    return this;\n  };\n  /**\n   * 沿 n 轴移动，当距离视点远时移动速度较快，离视点越近速度越慢\n   */\n\n\n  Camera.prototype.dolly = function (value) {\n    var n = this.forward;\n    var pos = vec3.clone(this.position);\n    var step = value * this.dollyingStep;\n    var updatedDistance = this.distance + value * this.dollyingStep; // 限制视点距离范围\n\n    step = Math.max(Math.min(updatedDistance, this.maxDistance), this.minDistance) - this.distance;\n    pos[0] += step * n[0];\n    pos[1] += step * n[1];\n    pos[2] += step * n[2];\n\n    this._setPosition(pos);\n\n    if (this.type === CameraType.ORBITING || this.type === CameraType.EXPLORING) {\n      // 重新计算视点距离\n      this._getDistance();\n    } else if (this.type === CameraType.TRACKING) {\n      // 保持视距，移动视点位置\n      vec3.add(this.focalPoint, pos, this.distanceVector);\n    }\n\n    this.triggerUpdate();\n    return this;\n  };\n\n  Camera.prototype.createLandmark = function (name, params) {\n    if (params === void 0) {\n      params = {};\n    }\n\n    var _a = params.position,\n        position = _a === void 0 ? this.position : _a,\n        _b = params.focalPoint,\n        focalPoint = _b === void 0 ? this.focalPoint : _b,\n        roll = params.roll,\n        zoom = params.zoom;\n    var camera = new Camera();\n    camera.setType(this.type, undefined);\n    camera.setPosition(position[0], position[1] || this.position[1], position[2] || this.position[2]);\n    camera.setFocalPoint(focalPoint[0], focalPoint[1] || this.focalPoint[1], focalPoint[2] || this.focalPoint[2]);\n    camera.setRoll(roll || this.roll);\n    camera.setZoom(zoom || this.zoom);\n    var landmark = {\n      name: name,\n      matrix: mat4.clone(camera.matrix),\n      right: vec3.clone(camera.right),\n      up: vec3.clone(camera.up),\n      forward: vec3.clone(camera.forward),\n      position: vec3.clone(camera.position),\n      focalPoint: vec3.clone(camera.focalPoint),\n      distanceVector: vec3.clone(camera.distanceVector),\n      distance: camera.distance,\n      dollyingStep: camera.dollyingStep,\n      azimuth: camera.azimuth,\n      elevation: camera.elevation,\n      roll: camera.roll,\n      relAzimuth: camera.relAzimuth,\n      relElevation: camera.relElevation,\n      relRoll: camera.relRoll,\n      zoom: camera.zoom\n    };\n    this.landmarks.push(landmark);\n    return landmark;\n  };\n\n  Camera.prototype.gotoLandmark = function (name, options) {\n    var _this = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var landmark = isString(name) ? this.landmarks.find(function (l) {\n      return l.name === name;\n    }) : name;\n\n    if (landmark) {\n      var _a = isNumber(options) ? {\n        duration: options\n      } : options,\n          _b = _a.easing,\n          easing = _b === void 0 ? 'linear' : _b,\n          _c = _a.duration,\n          duration_1 = _c === void 0 ? 100 : _c,\n          _d = _a.easingFunction,\n          easingFunction = _d === void 0 ? undefined : _d,\n          _e = _a.onfinish,\n          onfinish_1 = _e === void 0 ? undefined : _e;\n\n      var epsilon_1 = 0.01;\n\n      if (duration_1 === 0) {\n        this.syncFromLandmark(landmark);\n\n        if (onfinish_1) {\n          onfinish_1();\n        }\n\n        return;\n      } // cancel ongoing animation\n\n\n      if (this.landmarkAnimationID !== undefined) {\n        this.canvas.cancelAnimationFrame(this.landmarkAnimationID);\n      }\n\n      var destPosition_1 = landmark.position;\n      var destFocalPoint_1 = landmark.focalPoint;\n      var destZoom_1 = landmark.zoom;\n      var destRoll_1 = landmark.roll;\n      var easingFunc_1 = easingFunction || parseEasingFunction(easing);\n      var timeStart_1;\n\n      var endAnimation_1 = function endAnimation_1() {\n        _this.setFocalPoint(destFocalPoint_1);\n\n        _this.setPosition(destPosition_1);\n\n        _this.setRoll(destRoll_1);\n\n        _this.setZoom(destZoom_1);\n\n        _this.computeMatrix();\n\n        _this.triggerUpdate();\n\n        if (onfinish_1) {\n          onfinish_1();\n        }\n      };\n\n      var animate_1 = function animate_1(timestamp) {\n        if (timeStart_1 === undefined) {\n          timeStart_1 = timestamp;\n        }\n\n        var elapsed = timestamp - timeStart_1;\n\n        if (elapsed > duration_1) {\n          endAnimation_1();\n          return;\n        } // use the same ease function in animation system\n\n\n        var t = easingFunc_1(elapsed / duration_1);\n        var interFocalPoint = vec3.create();\n        var interPosition = vec3.create();\n        var interZoom = 1;\n        var interRoll = 0;\n        vec3.lerp(interFocalPoint, _this.focalPoint, destFocalPoint_1, t);\n        vec3.lerp(interPosition, _this.position, destPosition_1, t);\n        interRoll = _this.roll * (1 - t) + destRoll_1 * t;\n        interZoom = _this.zoom * (1 - t) + destZoom_1 * t;\n\n        _this.setFocalPoint(interFocalPoint);\n\n        _this.setPosition(interPosition);\n\n        _this.setRoll(interRoll);\n\n        _this.setZoom(interZoom);\n\n        var dist = vec3.dist(interFocalPoint, destFocalPoint_1) + vec3.dist(interPosition, destPosition_1);\n\n        if (dist <= epsilon_1) {\n          endAnimation_1();\n          return;\n        }\n\n        _this.computeMatrix();\n\n        _this.triggerUpdate();\n\n        if (elapsed < duration_1) {\n          _this.landmarkAnimationID = _this.canvas.requestAnimationFrame(animate_1);\n        }\n      };\n\n      this.canvas.requestAnimationFrame(animate_1);\n    }\n  };\n  /**\n   * 根据相机矩阵重新计算各种相机参数\n   */\n\n\n  Camera.prototype._update = function () {\n    this._getAxes();\n\n    this._getPosition();\n\n    this._getDistance();\n\n    this._getAngles();\n\n    this._getOrthoMatrix();\n\n    this.triggerUpdate();\n  };\n  /**\n   * 计算相机矩阵\n   */\n\n\n  Camera.prototype.computeMatrix = function () {\n    // 使用四元数描述 3D 旋转\n    // @see https://xiaoiver.github.io/coding/2018/12/28/Camera-%E8%AE%BE%E8%AE%A1-%E4%B8%80.html\n    var rotZ = quat.setAxisAngle(quat.create(), [0, 0, 1], this.roll * DEG_2_RAD);\n    mat4.identity(this.matrix); // only consider HCS for EXPLORING and ORBITING cameras\n\n    var rotX = quat.setAxisAngle(quat.create(), [1, 0, 0], (this.rotateWorld && this.type !== CameraType.TRACKING || this.type === CameraType.TRACKING ? 1 : -1) * this.elevation * DEG_2_RAD);\n    var rotY = quat.setAxisAngle(quat.create(), [0, 1, 0], (this.rotateWorld && this.type !== CameraType.TRACKING || this.type === CameraType.TRACKING ? 1 : -1) * this.azimuth * DEG_2_RAD);\n    var rotQ = quat.multiply(quat.create(), rotY, rotX);\n    rotQ = quat.multiply(quat.create(), rotQ, rotZ);\n    var rotMatrix = mat4.fromQuat(mat4.create(), rotQ);\n\n    if (this.type === CameraType.ORBITING || this.type === CameraType.EXPLORING) {\n      mat4.translate(this.matrix, this.matrix, this.focalPoint);\n      mat4.multiply(this.matrix, this.matrix, rotMatrix);\n      mat4.translate(this.matrix, this.matrix, [0, 0, this.distance]);\n    } else if (this.type === CameraType.TRACKING) {\n      mat4.translate(this.matrix, this.matrix, this.position);\n      mat4.multiply(this.matrix, this.matrix, rotMatrix);\n    }\n  };\n  /**\n   * Sets the camera position in the camera matrix\n   */\n\n\n  Camera.prototype._setPosition = function (x, y, z) {\n    this.position = createVec3(x, y, z);\n    var m = this.matrix;\n    m[12] = this.position[0];\n    m[13] = this.position[1];\n    m[14] = this.position[2];\n    m[15] = 1;\n\n    this._getOrthoMatrix();\n  };\n  /**\n   * Recalculates axes based on the current matrix\n   */\n\n\n  Camera.prototype._getAxes = function () {\n    vec3.copy(this.right, createVec3(vec4.transformMat4(vec4.create(), [1, 0, 0, 0], this.matrix)));\n    vec3.copy(this.up, createVec3(vec4.transformMat4(vec4.create(), [0, 1, 0, 0], this.matrix)));\n    vec3.copy(this.forward, createVec3(vec4.transformMat4(vec4.create(), [0, 0, 1, 0], this.matrix)));\n    vec3.normalize(this.right, this.right);\n    vec3.normalize(this.up, this.up);\n    vec3.normalize(this.forward, this.forward);\n  };\n  /**\n   * Recalculates euler angles based on the current state\n   */\n\n\n  Camera.prototype._getAngles = function () {\n    // Recalculates angles\n    var x = this.distanceVector[0];\n    var y = this.distanceVector[1];\n    var z = this.distanceVector[2];\n    var r = vec3.length(this.distanceVector); // FAST FAIL: If there is no distance we cannot compute angles\n\n    if (r === 0) {\n      this.elevation = 0;\n      this.azimuth = 0;\n      return;\n    }\n\n    if (this.type === CameraType.TRACKING) {\n      this.elevation = Math.asin(y / r) * RAD_2_DEG;\n      this.azimuth = Math.atan2(-x, -z) * RAD_2_DEG;\n    } else {\n      if (this.rotateWorld) {\n        this.elevation = Math.asin(y / r) * RAD_2_DEG;\n        this.azimuth = Math.atan2(-x, -z) * RAD_2_DEG;\n      } else {\n        this.elevation = -Math.asin(y / r) * RAD_2_DEG;\n        this.azimuth = -Math.atan2(-x, -z) * RAD_2_DEG;\n      }\n    }\n  };\n  /**\n   * 重新计算相机位置，只有 ORBITING 模式相机位置才会发生变化\n   */\n\n\n  Camera.prototype._getPosition = function () {\n    vec3.copy(this.position, createVec3(vec4.transformMat4(vec4.create(), [0, 0, 0, 1], this.matrix))); // 相机位置变化，需要重新计算视距\n\n    this._getDistance();\n  };\n  /**\n   * 重新计算视点，只有 TRACKING 模式视点才会发生变化\n   */\n\n\n  Camera.prototype._getFocalPoint = function () {\n    vec3.transformMat3(this.distanceVector, [0, 0, -this.distance], mat3.fromMat4(mat3.create(), this.matrix));\n    vec3.add(this.focalPoint, this.position, this.distanceVector); // 视点变化，需要重新计算视距\n\n    this._getDistance();\n  };\n  /**\n   * 重新计算视距\n   */\n\n\n  Camera.prototype._getDistance = function () {\n    this.distanceVector = vec3.subtract(vec3.create(), this.focalPoint, this.position);\n    this.distance = vec3.length(this.distanceVector);\n    this.dollyingStep = this.distance / 100;\n  };\n\n  Camera.prototype._getOrthoMatrix = function () {\n    if (this.projectionMode !== CameraProjectionMode.ORTHOGRAPHIC) {\n      return;\n    }\n\n    var position = this.position;\n    var rotZ = quat.setAxisAngle(quat.create(), [0, 0, 1], -this.roll * Math.PI / 180);\n    mat4.fromRotationTranslationScaleOrigin(this.orthoMatrix, rotZ, vec3.fromValues((this.rright - this.left) / 2 - position[0], (this.top - this.bottom) / 2 - position[1], 0), vec3.fromValues(this.zoom, this.zoom, 1), position);\n  };\n\n  Camera.prototype.triggerUpdate = function () {\n    if (this.enableUpdate) {\n      // update frustum\n      var viewMatrix = this.getViewTransform();\n      var vpMatrix = mat4.multiply(mat4.create(), this.getPerspective(), viewMatrix);\n      this.getFrustum().extractFromVPMatrix(vpMatrix);\n      this.emit(CameraEvent.UPDATED);\n    }\n  };\n\n  Camera.prototype.syncFromLandmark = function (landmark) {\n    this.matrix = mat4.copy(this.matrix, landmark.matrix);\n    this.right = vec3.copy(this.right, landmark.right);\n    this.up = vec3.copy(this.up, landmark.up);\n    this.forward = vec3.copy(this.forward, landmark.forward);\n    this.position = vec3.copy(this.position, landmark.position);\n    this.focalPoint = vec3.copy(this.focalPoint, landmark.focalPoint);\n    this.distanceVector = vec3.copy(this.distanceVector, landmark.distanceVector);\n    this.azimuth = landmark.azimuth;\n    this.elevation = landmark.elevation;\n    this.roll = landmark.roll;\n    this.relAzimuth = landmark.relAzimuth;\n    this.relElevation = landmark.relElevation;\n    this.relRoll = landmark.relRoll;\n    this.dollyingStep = landmark.dollyingStep;\n    this.distance = landmark.distance;\n    this.zoom = landmark.zoom;\n  };\n\n  return Camera;\n}(EventEmitter);\n\nexport { Camera };"]},"metadata":{},"sourceType":"module"}