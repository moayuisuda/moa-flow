{"ast":null,"code":"import { __assign, __extends, __rest } from \"tslib\";\nimport { Line as LineUtil } from '@antv/g-math';\nimport { Shape } from '../types';\nimport { DisplayObject } from './DisplayObject';\nimport { Point } from '../shapes';\n\nvar Line =\n/** @class */\nfunction (_super) {\n  __extends(Line, _super);\n\n  function Line(_a) {\n    if (_a === void 0) {\n      _a = {};\n    }\n\n    var style = _a.style,\n        rest = __rest(_a, [\"style\"]);\n\n    return _super.call(this, __assign({\n      type: Shape.LINE,\n      style: __assign({\n        x1: 0,\n        y1: 0,\n        x2: 0,\n        y2: 0,\n        z1: 0,\n        z2: 0,\n\n        /**\n         * @see https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-width\n         */\n        lineWidth: 1,\n        isBillboard: false\n      }, style)\n    }, rest)) || this;\n  }\n\n  Line.prototype.getPoint = function (ratio) {\n    var _a = this.parsedStyle,\n        x1 = _a.x1,\n        y1 = _a.y1,\n        x2 = _a.x2,\n        y2 = _a.y2;\n    var point = LineUtil.pointAt(x1.value, y1.value, x2.value, y2.value, ratio);\n    return new Point(point.x, point.y);\n  };\n\n  Line.prototype.getTotalLength = function () {\n    var _a = this.parsedStyle,\n        x1 = _a.x1,\n        y1 = _a.y1,\n        x2 = _a.x2,\n        y2 = _a.y2;\n    return LineUtil.length(x1.value, y1.value, x2.value, y2.value);\n  };\n\n  return Line;\n}(DisplayObject);\n\nexport { Line };","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/@antv/g/es/display-objects/Line.js"],"names":["__assign","__extends","__rest","Line","LineUtil","Shape","DisplayObject","Point","_super","_a","style","rest","call","type","LINE","x1","y1","x2","y2","z1","z2","lineWidth","isBillboard","prototype","getPoint","ratio","parsedStyle","point","pointAt","value","x","y","getTotalLength","length"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,SAASC,IAAI,IAAIC,QAAjB,QAAiC,cAAjC;AACA,SAASC,KAAT,QAAsB,UAAtB;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,KAAT,QAAsB,WAAtB;;AAEA,IAAIJ,IAAI;AACR;AACA,UAAUK,MAAV,EAAkB;AAChBP,EAAAA,SAAS,CAACE,IAAD,EAAOK,MAAP,CAAT;;AAEA,WAASL,IAAT,CAAcM,EAAd,EAAkB;AAChB,QAAIA,EAAE,KAAK,KAAK,CAAhB,EAAmB;AACjBA,MAAAA,EAAE,GAAG,EAAL;AACD;;AAED,QAAIC,KAAK,GAAGD,EAAE,CAACC,KAAf;AAAA,QACIC,IAAI,GAAGT,MAAM,CAACO,EAAD,EAAK,CAAC,OAAD,CAAL,CADjB;;AAGA,WAAOD,MAAM,CAACI,IAAP,CAAY,IAAZ,EAAkBZ,QAAQ,CAAC;AAChCa,MAAAA,IAAI,EAAER,KAAK,CAACS,IADoB;AAEhCJ,MAAAA,KAAK,EAAEV,QAAQ,CAAC;AACde,QAAAA,EAAE,EAAE,CADU;AAEdC,QAAAA,EAAE,EAAE,CAFU;AAGdC,QAAAA,EAAE,EAAE,CAHU;AAIdC,QAAAA,EAAE,EAAE,CAJU;AAKdC,QAAAA,EAAE,EAAE,CALU;AAMdC,QAAAA,EAAE,EAAE,CANU;;AAQd;AACR;AACA;AACQC,QAAAA,SAAS,EAAE,CAXG;AAYdC,QAAAA,WAAW,EAAE;AAZC,OAAD,EAaZZ,KAbY;AAFiB,KAAD,EAgB9BC,IAhB8B,CAA1B,KAgBM,IAhBb;AAiBD;;AAEDR,EAAAA,IAAI,CAACoB,SAAL,CAAeC,QAAf,GAA0B,UAAUC,KAAV,EAAiB;AACzC,QAAIhB,EAAE,GAAG,KAAKiB,WAAd;AAAA,QACIX,EAAE,GAAGN,EAAE,CAACM,EADZ;AAAA,QAEIC,EAAE,GAAGP,EAAE,CAACO,EAFZ;AAAA,QAGIC,EAAE,GAAGR,EAAE,CAACQ,EAHZ;AAAA,QAIIC,EAAE,GAAGT,EAAE,CAACS,EAJZ;AAKA,QAAIS,KAAK,GAAGvB,QAAQ,CAACwB,OAAT,CAAiBb,EAAE,CAACc,KAApB,EAA2Bb,EAAE,CAACa,KAA9B,EAAqCZ,EAAE,CAACY,KAAxC,EAA+CX,EAAE,CAACW,KAAlD,EAAyDJ,KAAzD,CAAZ;AACA,WAAO,IAAIlB,KAAJ,CAAUoB,KAAK,CAACG,CAAhB,EAAmBH,KAAK,CAACI,CAAzB,CAAP;AACD,GARD;;AAUA5B,EAAAA,IAAI,CAACoB,SAAL,CAAeS,cAAf,GAAgC,YAAY;AAC1C,QAAIvB,EAAE,GAAG,KAAKiB,WAAd;AAAA,QACIX,EAAE,GAAGN,EAAE,CAACM,EADZ;AAAA,QAEIC,EAAE,GAAGP,EAAE,CAACO,EAFZ;AAAA,QAGIC,EAAE,GAAGR,EAAE,CAACQ,EAHZ;AAAA,QAIIC,EAAE,GAAGT,EAAE,CAACS,EAJZ;AAKA,WAAOd,QAAQ,CAAC6B,MAAT,CAAgBlB,EAAE,CAACc,KAAnB,EAA0Bb,EAAE,CAACa,KAA7B,EAAoCZ,EAAE,CAACY,KAAvC,EAA8CX,EAAE,CAACW,KAAjD,CAAP;AACD,GAPD;;AASA,SAAO1B,IAAP;AACD,CAlDD,CAkDEG,aAlDF,CAFA;;AAsDA,SAASH,IAAT","sourcesContent":["import { __assign, __extends, __rest } from \"tslib\";\nimport { Line as LineUtil } from '@antv/g-math';\nimport { Shape } from '../types';\nimport { DisplayObject } from './DisplayObject';\nimport { Point } from '../shapes';\n\nvar Line =\n/** @class */\nfunction (_super) {\n  __extends(Line, _super);\n\n  function Line(_a) {\n    if (_a === void 0) {\n      _a = {};\n    }\n\n    var style = _a.style,\n        rest = __rest(_a, [\"style\"]);\n\n    return _super.call(this, __assign({\n      type: Shape.LINE,\n      style: __assign({\n        x1: 0,\n        y1: 0,\n        x2: 0,\n        y2: 0,\n        z1: 0,\n        z2: 0,\n\n        /**\n         * @see https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/stroke-width\n         */\n        lineWidth: 1,\n        isBillboard: false\n      }, style)\n    }, rest)) || this;\n  }\n\n  Line.prototype.getPoint = function (ratio) {\n    var _a = this.parsedStyle,\n        x1 = _a.x1,\n        y1 = _a.y1,\n        x2 = _a.x2,\n        y2 = _a.y2;\n    var point = LineUtil.pointAt(x1.value, y1.value, x2.value, y2.value, ratio);\n    return new Point(point.x, point.y);\n  };\n\n  Line.prototype.getTotalLength = function () {\n    var _a = this.parsedStyle,\n        x1 = _a.x1,\n        y1 = _a.y1,\n        x2 = _a.x2,\n        y2 = _a.y2;\n    return LineUtil.length(x1.value, y1.value, x2.value, y2.value);\n  };\n\n  return Line;\n}(DisplayObject);\n\nexport { Line };"]},"metadata":{},"sourceType":"module"}