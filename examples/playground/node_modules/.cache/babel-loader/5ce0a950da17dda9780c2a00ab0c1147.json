{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Hook = require(\"./Hook\");\n\nconst HookCodeFactory = require(\"./HookCodeFactory\");\n\nclass SyncHookCodeFactory extends HookCodeFactory {\n  content(_ref) {\n    let {\n      onError,\n      onDone,\n      rethrowIfPossible\n    } = _ref;\n    return this.callTapsSeries({\n      onError: (i, err) => onError(err),\n      onDone,\n      rethrowIfPossible\n    });\n  }\n\n}\n\nconst factory = new SyncHookCodeFactory();\n\nconst TAP_ASYNC = () => {\n  throw new Error(\"tapAsync is not supported on a SyncHook\");\n};\n\nconst TAP_PROMISE = () => {\n  throw new Error(\"tapPromise is not supported on a SyncHook\");\n};\n\nconst COMPILE = function (options) {\n  factory.setup(this, options);\n  return factory.create(options);\n};\n\nfunction SyncHook() {\n  let args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n  const hook = new Hook(args, name);\n  hook.constructor = SyncHook;\n  hook.tapAsync = TAP_ASYNC;\n  hook.tapPromise = TAP_PROMISE;\n  hook.compile = COMPILE;\n  return hook;\n}\n\nSyncHook.prototype = null;\nmodule.exports = SyncHook;","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/tapable/lib/SyncHook.js"],"names":["Hook","require","HookCodeFactory","SyncHookCodeFactory","content","onError","onDone","rethrowIfPossible","callTapsSeries","i","err","factory","TAP_ASYNC","Error","TAP_PROMISE","COMPILE","options","setup","create","SyncHook","args","name","undefined","hook","constructor","tapAsync","tapPromise","compile","prototype","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,MAAMC,eAAe,GAAGD,OAAO,CAAC,mBAAD,CAA/B;;AAEA,MAAME,mBAAN,SAAkCD,eAAlC,CAAkD;AACjDE,EAAAA,OAAO,OAAyC;AAAA,QAAxC;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,MAAX;AAAmBC,MAAAA;AAAnB,KAAwC;AAC/C,WAAO,KAAKC,cAAL,CAAoB;AAC1BH,MAAAA,OAAO,EAAE,CAACI,CAAD,EAAIC,GAAJ,KAAYL,OAAO,CAACK,GAAD,CADF;AAE1BJ,MAAAA,MAF0B;AAG1BC,MAAAA;AAH0B,KAApB,CAAP;AAKA;;AAPgD;;AAUlD,MAAMI,OAAO,GAAG,IAAIR,mBAAJ,EAAhB;;AAEA,MAAMS,SAAS,GAAG,MAAM;AACvB,QAAM,IAAIC,KAAJ,CAAU,yCAAV,CAAN;AACA,CAFD;;AAIA,MAAMC,WAAW,GAAG,MAAM;AACzB,QAAM,IAAID,KAAJ,CAAU,2CAAV,CAAN;AACA,CAFD;;AAIA,MAAME,OAAO,GAAG,UAASC,OAAT,EAAkB;AACjCL,EAAAA,OAAO,CAACM,KAAR,CAAc,IAAd,EAAoBD,OAApB;AACA,SAAOL,OAAO,CAACO,MAAR,CAAeF,OAAf,CAAP;AACA,CAHD;;AAKA,SAASG,QAAT,GAA+C;AAAA,MAA7BC,IAA6B,uEAAtB,EAAsB;AAAA,MAAlBC,IAAkB,uEAAXC,SAAW;AAC9C,QAAMC,IAAI,GAAG,IAAIvB,IAAJ,CAASoB,IAAT,EAAeC,IAAf,CAAb;AACAE,EAAAA,IAAI,CAACC,WAAL,GAAmBL,QAAnB;AACAI,EAAAA,IAAI,CAACE,QAAL,GAAgBb,SAAhB;AACAW,EAAAA,IAAI,CAACG,UAAL,GAAkBZ,WAAlB;AACAS,EAAAA,IAAI,CAACI,OAAL,GAAeZ,OAAf;AACA,SAAOQ,IAAP;AACA;;AAEDJ,QAAQ,CAACS,SAAT,GAAqB,IAArB;AAEAC,MAAM,CAACC,OAAP,GAAiBX,QAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Hook = require(\"./Hook\");\nconst HookCodeFactory = require(\"./HookCodeFactory\");\n\nclass SyncHookCodeFactory extends HookCodeFactory {\n\tcontent({ onError, onDone, rethrowIfPossible }) {\n\t\treturn this.callTapsSeries({\n\t\t\tonError: (i, err) => onError(err),\n\t\t\tonDone,\n\t\t\trethrowIfPossible\n\t\t});\n\t}\n}\n\nconst factory = new SyncHookCodeFactory();\n\nconst TAP_ASYNC = () => {\n\tthrow new Error(\"tapAsync is not supported on a SyncHook\");\n};\n\nconst TAP_PROMISE = () => {\n\tthrow new Error(\"tapPromise is not supported on a SyncHook\");\n};\n\nconst COMPILE = function(options) {\n\tfactory.setup(this, options);\n\treturn factory.create(options);\n};\n\nfunction SyncHook(args = [], name = undefined) {\n\tconst hook = new Hook(args, name);\n\thook.constructor = SyncHook;\n\thook.tapAsync = TAP_ASYNC;\n\thook.tapPromise = TAP_PROMISE;\n\thook.compile = COMPILE;\n\treturn hook;\n}\n\nSyncHook.prototype = null;\n\nmodule.exports = SyncHook;\n"]},"metadata":{},"sourceType":"script"}