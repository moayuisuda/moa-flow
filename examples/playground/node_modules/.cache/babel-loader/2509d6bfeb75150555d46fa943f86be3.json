{"ast":null,"code":"export var TransformComponentType;\n\n(function (TransformComponentType) {\n  TransformComponentType[TransformComponentType[\"kMatrixType\"] = 0] = \"kMatrixType\";\n  TransformComponentType[TransformComponentType[\"kPerspectiveType\"] = 1] = \"kPerspectiveType\";\n  TransformComponentType[TransformComponentType[\"kRotationType\"] = 2] = \"kRotationType\";\n  TransformComponentType[TransformComponentType[\"kScaleType\"] = 3] = \"kScaleType\";\n  TransformComponentType[TransformComponentType[\"kSkewType\"] = 4] = \"kSkewType\";\n  TransformComponentType[TransformComponentType[\"kSkewXType\"] = 5] = \"kSkewXType\";\n  TransformComponentType[TransformComponentType[\"kSkewYType\"] = 6] = \"kSkewYType\";\n  TransformComponentType[TransformComponentType[\"kTranslationType\"] = 7] = \"kTranslationType\";\n})(TransformComponentType || (TransformComponentType = {}));\n/**\n * CSSTransformComponent is the base class used for the representations of\n * the individual CSS transforms. They are combined in a CSSTransformValue\n * before they can be used as a value for properties like \"transform\".\n *\n * @see https://drafts.css-houdini.org/css-typed-om/#csstransformcomponent\n */\n\n\nvar CSSTransformComponent =\n/** @class */\nfunction () {\n  function CSSTransformComponent(is2D) {\n    this.is2D = is2D;\n  }\n\n  return CSSTransformComponent;\n}();\n\nexport { CSSTransformComponent };","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/@antv/g/es/css/cssom/CSSTransformComponent.js"],"names":["TransformComponentType","CSSTransformComponent","is2D"],"mappings":"AAAA,OAAO,IAAIA,sBAAJ;;AAEP,CAAC,UAAUA,sBAAV,EAAkC;AACjCA,EAAAA,sBAAsB,CAACA,sBAAsB,CAAC,aAAD,CAAtB,GAAwC,CAAzC,CAAtB,GAAoE,aAApE;AACAA,EAAAA,sBAAsB,CAACA,sBAAsB,CAAC,kBAAD,CAAtB,GAA6C,CAA9C,CAAtB,GAAyE,kBAAzE;AACAA,EAAAA,sBAAsB,CAACA,sBAAsB,CAAC,eAAD,CAAtB,GAA0C,CAA3C,CAAtB,GAAsE,eAAtE;AACAA,EAAAA,sBAAsB,CAACA,sBAAsB,CAAC,YAAD,CAAtB,GAAuC,CAAxC,CAAtB,GAAmE,YAAnE;AACAA,EAAAA,sBAAsB,CAACA,sBAAsB,CAAC,WAAD,CAAtB,GAAsC,CAAvC,CAAtB,GAAkE,WAAlE;AACAA,EAAAA,sBAAsB,CAACA,sBAAsB,CAAC,YAAD,CAAtB,GAAuC,CAAxC,CAAtB,GAAmE,YAAnE;AACAA,EAAAA,sBAAsB,CAACA,sBAAsB,CAAC,YAAD,CAAtB,GAAuC,CAAxC,CAAtB,GAAmE,YAAnE;AACAA,EAAAA,sBAAsB,CAACA,sBAAsB,CAAC,kBAAD,CAAtB,GAA6C,CAA9C,CAAtB,GAAyE,kBAAzE;AACD,CATD,EASGA,sBAAsB,KAAKA,sBAAsB,GAAG,EAA9B,CATzB;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,IAAIC,qBAAqB;AACzB;AACA,YAAY;AACV,WAASA,qBAAT,CAA+BC,IAA/B,EAAqC;AACnC,SAAKA,IAAL,GAAYA,IAAZ;AACD;;AAED,SAAOD,qBAAP;AACD,CAND,EAFA;;AAUA,SAASA,qBAAT","sourcesContent":["export var TransformComponentType;\n\n(function (TransformComponentType) {\n  TransformComponentType[TransformComponentType[\"kMatrixType\"] = 0] = \"kMatrixType\";\n  TransformComponentType[TransformComponentType[\"kPerspectiveType\"] = 1] = \"kPerspectiveType\";\n  TransformComponentType[TransformComponentType[\"kRotationType\"] = 2] = \"kRotationType\";\n  TransformComponentType[TransformComponentType[\"kScaleType\"] = 3] = \"kScaleType\";\n  TransformComponentType[TransformComponentType[\"kSkewType\"] = 4] = \"kSkewType\";\n  TransformComponentType[TransformComponentType[\"kSkewXType\"] = 5] = \"kSkewXType\";\n  TransformComponentType[TransformComponentType[\"kSkewYType\"] = 6] = \"kSkewYType\";\n  TransformComponentType[TransformComponentType[\"kTranslationType\"] = 7] = \"kTranslationType\";\n})(TransformComponentType || (TransformComponentType = {}));\n/**\n * CSSTransformComponent is the base class used for the representations of\n * the individual CSS transforms. They are combined in a CSSTransformValue\n * before they can be used as a value for properties like \"transform\".\n *\n * @see https://drafts.css-houdini.org/css-typed-om/#csstransformcomponent\n */\n\n\nvar CSSTransformComponent =\n/** @class */\nfunction () {\n  function CSSTransformComponent(is2D) {\n    this.is2D = is2D;\n  }\n\n  return CSSTransformComponent;\n}();\n\nexport { CSSTransformComponent };"]},"metadata":{},"sourceType":"module"}