{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { DCHECK_NE } from '../../utils';\nimport { CSSMathVariadic } from './CSSMathVariadic';\nimport { typeCheck, CSSStyleValueType, CSSNumericValueType, Nested, ParenLess } from '.';\n/**\n * Represents the product of one or more CSSNumericValues.\n * @see https://drafts.css-houdini.org/css-typed-om/#cssmathproduct\n */\n\nvar CSSMathProduct =\n/** @class */\nfunction (_super) {\n  __extends(CSSMathProduct, _super);\n\n  function CSSMathProduct() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.operator = 'product';\n    return _this;\n  }\n\n  CSSMathProduct.create = function (values) {\n    var error = false;\n    var finalType = typeCheck(values, CSSNumericValueType.multiply, error);\n    return error ? null : new CSSMathProduct(values, finalType);\n  };\n\n  CSSMathProduct.multiplyUnitMaps = function (a, b) {\n    Object.keys(b).forEach(function (key) {\n      DCHECK_NE(b[key].value, 0);\n      var old_value = key in a ? a[key].value : 0;\n\n      if (old_value + b[key].value === 0) {\n        delete a[key];\n      } else {\n        a[key] = old_value + b[key].value;\n      }\n    });\n    return a;\n  };\n\n  CSSMathProduct.prototype.clone = function () {\n    return new CSSMathProduct(this.values, this.type_);\n  };\n\n  CSSMathProduct.prototype.getType = function () {\n    return CSSStyleValueType.kProductType;\n  }; // toCalcExpressionNode() {\n  //   return this.toCalcExporessionNodeForVariadic(CSSMathOperator.kMultiply);\n  // }\n\n\n  CSSMathProduct.prototype.sumValue = function () {\n    var sum = [{\n      value: 1,\n      units: {}\n    }];\n    this.numericValues().forEach(function (value) {\n      var child_sum = value.sumValue();\n\n      if (!child_sum.length) {\n        return null;\n      }\n\n      var new_sum = [];\n      sum.forEach(function (a) {\n        child_sum.forEach(function (b) {\n          new_sum.push({\n            value: a.value * b.value,\n            units: CSSMathProduct.multiplyUnitMaps(a.units, b.units)\n          });\n        });\n      });\n      sum = new_sum;\n    });\n    return sum;\n  };\n\n  CSSMathProduct.prototype.buildCSSText = function (nested, paren_less, result) {\n    if (paren_less == ParenLess.kNo) {\n      result += nested === Nested.kYes ? '(' : 'calc(';\n    }\n\n    var values = this.numericValues();\n    result = values[0].buildCSSText(Nested.kYes, ParenLess.kNo, result);\n\n    for (var i = 1; i < values.length; i++) {\n      var arg = values[i];\n\n      if (arg.getType() === CSSStyleValueType.kInvertType) {\n        result += ' / ';\n        result = arg.value.buildCSSText(Nested.kYes, ParenLess.kNo, result);\n      } else {\n        result += ' * ';\n        result = arg.buildCSSText(Nested.kYes, ParenLess.kNo, result);\n      }\n    }\n\n    if (paren_less === ParenLess.kNo) {\n      result += ')';\n    }\n\n    return result;\n  };\n\n  return CSSMathProduct;\n}(CSSMathVariadic);\n\nexport { CSSMathProduct };","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/@antv/g/es/css/cssom/CSSMathProduct.js"],"names":["__extends","DCHECK_NE","CSSMathVariadic","typeCheck","CSSStyleValueType","CSSNumericValueType","Nested","ParenLess","CSSMathProduct","_super","_this","apply","arguments","operator","create","values","error","finalType","multiply","multiplyUnitMaps","a","b","Object","keys","forEach","key","value","old_value","prototype","clone","type_","getType","kProductType","sumValue","sum","units","numericValues","child_sum","length","new_sum","push","buildCSSText","nested","paren_less","result","kNo","kYes","i","arg","kInvertType"],"mappings":"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","sourcesContent":["import { __extends } from \"tslib\";\nimport { DCHECK_NE } from '../../utils';\nimport { CSSMathVariadic } from './CSSMathVariadic';\nimport { typeCheck, CSSStyleValueType, CSSNumericValueType, Nested, ParenLess } from '.';\n/**\n * Represents the product of one or more CSSNumericValues.\n * @see https://drafts.css-houdini.org/css-typed-om/#cssmathproduct\n */\n\nvar CSSMathProduct =\n/** @class */\nfunction (_super) {\n  __extends(CSSMathProduct, _super);\n\n  function CSSMathProduct() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.operator = 'product';\n    return _this;\n  }\n\n  CSSMathProduct.create = function (values) {\n    var error = false;\n    var finalType = typeCheck(values, CSSNumericValueType.multiply, error);\n    return error ? null : new CSSMathProduct(values, finalType);\n  };\n\n  CSSMathProduct.multiplyUnitMaps = function (a, b) {\n    Object.keys(b).forEach(function (key) {\n      DCHECK_NE(b[key].value, 0);\n      var old_value = key in a ? a[key].value : 0;\n\n      if (old_value + b[key].value === 0) {\n        delete a[key];\n      } else {\n        a[key] = old_value + b[key].value;\n      }\n    });\n    return a;\n  };\n\n  CSSMathProduct.prototype.clone = function () {\n    return new CSSMathProduct(this.values, this.type_);\n  };\n\n  CSSMathProduct.prototype.getType = function () {\n    return CSSStyleValueType.kProductType;\n  }; // toCalcExpressionNode() {\n  //   return this.toCalcExporessionNodeForVariadic(CSSMathOperator.kMultiply);\n  // }\n\n\n  CSSMathProduct.prototype.sumValue = function () {\n    var sum = [{\n      value: 1,\n      units: {}\n    }];\n    this.numericValues().forEach(function (value) {\n      var child_sum = value.sumValue();\n\n      if (!child_sum.length) {\n        return null;\n      }\n\n      var new_sum = [];\n      sum.forEach(function (a) {\n        child_sum.forEach(function (b) {\n          new_sum.push({\n            value: a.value * b.value,\n            units: CSSMathProduct.multiplyUnitMaps(a.units, b.units)\n          });\n        });\n      });\n      sum = new_sum;\n    });\n    return sum;\n  };\n\n  CSSMathProduct.prototype.buildCSSText = function (nested, paren_less, result) {\n    if (paren_less == ParenLess.kNo) {\n      result += nested === Nested.kYes ? '(' : 'calc(';\n    }\n\n    var values = this.numericValues();\n    result = values[0].buildCSSText(Nested.kYes, ParenLess.kNo, result);\n\n    for (var i = 1; i < values.length; i++) {\n      var arg = values[i];\n\n      if (arg.getType() === CSSStyleValueType.kInvertType) {\n        result += ' / ';\n        result = arg.value.buildCSSText(Nested.kYes, ParenLess.kNo, result);\n      } else {\n        result += ' * ';\n        result = arg.buildCSSText(Nested.kYes, ParenLess.kNo, result);\n      }\n    }\n\n    if (paren_less === ParenLess.kNo) {\n      result += ')';\n    }\n\n    return result;\n  };\n\n  return CSSMathProduct;\n}(CSSMathVariadic);\n\nexport { CSSMathProduct };"]},"metadata":{},"sourceType":"module"}