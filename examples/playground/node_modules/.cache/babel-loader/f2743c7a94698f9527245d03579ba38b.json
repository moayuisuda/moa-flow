{"ast":null,"code":"import { __decorate, __metadata } from \"tslib\";\nimport { Shape } from '@antv/g';\nimport { inject, singleton } from 'mana-syringe';\nimport { isString } from 'lodash-es';\nimport { ImagePool } from '../ImagePool';\nimport { StyleRenderer } from './interfaces';\n\nvar ImageRenderer =\n/** @class */\nfunction () {\n  function ImageRenderer() {}\n\n  ImageRenderer.prototype.hash = function (parsedStyle) {\n    return '';\n  };\n\n  ImageRenderer.prototype.render = function (context, parsedStyle) {\n    var width = parsedStyle.width,\n        height = parsedStyle.height,\n        img = parsedStyle.img;\n    var image;\n    var iw = width.value;\n    var ih = height.value;\n\n    if (isString(img)) {\n      // image has been loaded in `mounted` hook\n      image = this.imagePool.getImageSync(img);\n    } else {\n      iw || (iw = img.width);\n      ih || (ih = img.height);\n      image = img;\n    }\n\n    if (image) {\n      context.drawImage(image, 0, 0, iw, ih);\n    }\n  };\n\n  __decorate([inject(ImagePool), __metadata(\"design:type\", ImagePool)], ImageRenderer.prototype, \"imagePool\", void 0);\n\n  ImageRenderer = __decorate([singleton({\n    token: {\n      token: StyleRenderer,\n      named: Shape.IMAGE\n    }\n  })], ImageRenderer);\n  return ImageRenderer;\n}();\n\nexport { ImageRenderer };","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/@antv/g-plugin-canvas-renderer/es/shapes/styles/Image.js"],"names":["__decorate","__metadata","Shape","inject","singleton","isString","ImagePool","StyleRenderer","ImageRenderer","prototype","hash","parsedStyle","render","context","width","height","img","image","iw","value","ih","imagePool","getImageSync","drawImage","token","named","IMAGE"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,UAArB,QAAuC,OAAvC;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,cAAlC;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,aAAT,QAA8B,cAA9B;;AAEA,IAAIC,aAAa;AACjB;AACA,YAAY;AACV,WAASA,aAAT,GAAyB,CAAE;;AAE3BA,EAAAA,aAAa,CAACC,SAAd,CAAwBC,IAAxB,GAA+B,UAAUC,WAAV,EAAuB;AACpD,WAAO,EAAP;AACD,GAFD;;AAIAH,EAAAA,aAAa,CAACC,SAAd,CAAwBG,MAAxB,GAAiC,UAAUC,OAAV,EAAmBF,WAAnB,EAAgC;AAC/D,QAAIG,KAAK,GAAGH,WAAW,CAACG,KAAxB;AAAA,QACIC,MAAM,GAAGJ,WAAW,CAACI,MADzB;AAAA,QAEIC,GAAG,GAAGL,WAAW,CAACK,GAFtB;AAGA,QAAIC,KAAJ;AACA,QAAIC,EAAE,GAAGJ,KAAK,CAACK,KAAf;AACA,QAAIC,EAAE,GAAGL,MAAM,CAACI,KAAhB;;AAEA,QAAId,QAAQ,CAACW,GAAD,CAAZ,EAAmB;AACjB;AACAC,MAAAA,KAAK,GAAG,KAAKI,SAAL,CAAeC,YAAf,CAA4BN,GAA5B,CAAR;AACD,KAHD,MAGO;AACLE,MAAAA,EAAE,KAAKA,EAAE,GAAGF,GAAG,CAACF,KAAd,CAAF;AACAM,MAAAA,EAAE,KAAKA,EAAE,GAAGJ,GAAG,CAACD,MAAd,CAAF;AACAE,MAAAA,KAAK,GAAGD,GAAR;AACD;;AAED,QAAIC,KAAJ,EAAW;AACTJ,MAAAA,OAAO,CAACU,SAAR,CAAkBN,KAAlB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+BC,EAA/B,EAAmCE,EAAnC;AACD;AACF,GApBD;;AAsBApB,EAAAA,UAAU,CAAC,CAACG,MAAM,CAACG,SAAD,CAAP,EAAoBL,UAAU,CAAC,aAAD,EAAgBK,SAAhB,CAA9B,CAAD,EAA4DE,aAAa,CAACC,SAA1E,EAAqF,WAArF,EAAkG,KAAK,CAAvG,CAAV;;AAEAD,EAAAA,aAAa,GAAGR,UAAU,CAAC,CAACI,SAAS,CAAC;AACpCoB,IAAAA,KAAK,EAAE;AACLA,MAAAA,KAAK,EAAEjB,aADF;AAELkB,MAAAA,KAAK,EAAEvB,KAAK,CAACwB;AAFR;AAD6B,GAAD,CAAV,CAAD,EAKrBlB,aALqB,CAA1B;AAMA,SAAOA,aAAP;AACD,CAtCD,EAFA;;AA0CA,SAASA,aAAT","sourcesContent":["import { __decorate, __metadata } from \"tslib\";\nimport { Shape } from '@antv/g';\nimport { inject, singleton } from 'mana-syringe';\nimport { isString } from 'lodash-es';\nimport { ImagePool } from '../ImagePool';\nimport { StyleRenderer } from './interfaces';\n\nvar ImageRenderer =\n/** @class */\nfunction () {\n  function ImageRenderer() {}\n\n  ImageRenderer.prototype.hash = function (parsedStyle) {\n    return '';\n  };\n\n  ImageRenderer.prototype.render = function (context, parsedStyle) {\n    var width = parsedStyle.width,\n        height = parsedStyle.height,\n        img = parsedStyle.img;\n    var image;\n    var iw = width.value;\n    var ih = height.value;\n\n    if (isString(img)) {\n      // image has been loaded in `mounted` hook\n      image = this.imagePool.getImageSync(img);\n    } else {\n      iw || (iw = img.width);\n      ih || (ih = img.height);\n      image = img;\n    }\n\n    if (image) {\n      context.drawImage(image, 0, 0, iw, ih);\n    }\n  };\n\n  __decorate([inject(ImagePool), __metadata(\"design:type\", ImagePool)], ImageRenderer.prototype, \"imagePool\", void 0);\n\n  ImageRenderer = __decorate([singleton({\n    token: {\n      token: StyleRenderer,\n      named: Shape.IMAGE\n    }\n  })], ImageRenderer);\n  return ImageRenderer;\n}();\n\nexport { ImageRenderer };"]},"metadata":{},"sourceType":"module"}