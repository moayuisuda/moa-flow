{"ast":null,"code":"import arraySampleSize from './_arraySampleSize.js';\nimport baseSampleSize from './_baseSampleSize.js';\nimport isArray from './isArray.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport toInteger from './toInteger.js';\n/**\n * Gets `n` random elements at unique keys from `collection` up to the\n * size of `collection`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to sample.\n * @param {number} [n=1] The number of elements to sample.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the random elements.\n * @example\n *\n * _.sampleSize([1, 2, 3], 2);\n * // => [3, 1]\n *\n * _.sampleSize([1, 2, 3], 4);\n * // => [2, 3, 1]\n */\n\nfunction sampleSize(collection, n, guard) {\n  if (guard ? isIterateeCall(collection, n, guard) : n === undefined) {\n    n = 1;\n  } else {\n    n = toInteger(n);\n  }\n\n  var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n  return func(collection, n);\n}\n\nexport default sampleSize;","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/lodash-es/sampleSize.js"],"names":["arraySampleSize","baseSampleSize","isArray","isIterateeCall","toInteger","sampleSize","collection","n","guard","undefined","func"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,uBAA5B;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,UAAT,CAAoBC,UAApB,EAAgCC,CAAhC,EAAmCC,KAAnC,EAA0C;AACxC,MAAKA,KAAK,GAAGL,cAAc,CAACG,UAAD,EAAaC,CAAb,EAAgBC,KAAhB,CAAjB,GAA0CD,CAAC,KAAKE,SAA1D,EAAsE;AACpEF,IAAAA,CAAC,GAAG,CAAJ;AACD,GAFD,MAEO;AACLA,IAAAA,CAAC,GAAGH,SAAS,CAACG,CAAD,CAAb;AACD;;AACD,MAAIG,IAAI,GAAGR,OAAO,CAACI,UAAD,CAAP,GAAsBN,eAAtB,GAAwCC,cAAnD;AACA,SAAOS,IAAI,CAACJ,UAAD,EAAaC,CAAb,CAAX;AACD;;AAED,eAAeF,UAAf","sourcesContent":["import arraySampleSize from './_arraySampleSize.js';\nimport baseSampleSize from './_baseSampleSize.js';\nimport isArray from './isArray.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport toInteger from './toInteger.js';\n\n/**\n * Gets `n` random elements at unique keys from `collection` up to the\n * size of `collection`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to sample.\n * @param {number} [n=1] The number of elements to sample.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the random elements.\n * @example\n *\n * _.sampleSize([1, 2, 3], 2);\n * // => [3, 1]\n *\n * _.sampleSize([1, 2, 3], 4);\n * // => [2, 3, 1]\n */\nfunction sampleSize(collection, n, guard) {\n  if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n    n = 1;\n  } else {\n    n = toInteger(n);\n  }\n  var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n  return func(collection, n);\n}\n\nexport default sampleSize;\n"]},"metadata":{},"sourceType":"module"}