{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { DisplayObject } from './DisplayObject';\nimport { ElementEvent } from '../dom/interfaces';\n/**\n * shadow root\n * @see https://yuque.antfin-inc.com/antv/czqvg5/pgqipg\n */\n\nvar CustomElement =\n/** @class */\nfunction (_super) {\n  __extends(CustomElement, _super); // private shadowNodes: DisplayObject[] = [];\n\n\n  function CustomElement(config) {\n    if (config === void 0) {\n      config = {};\n    }\n\n    var _this = _super.call(this, config) || this;\n\n    _this.handleMounted = function (e) {\n      if (e.target === e.currentTarget) {\n        // this.shadowNodes.forEach((node) => {\n        //   // every child and its children should turn into a shadow node\n        //   // a shadow node doesn't mean to be unrenderable, it's just unsearchable in scenegraph\n        //   node.shadow = true;\n        // });\n        if (_this.connectedCallback) {\n          _this.connectedCallback();\n        }\n      }\n    };\n\n    _this.handleUnmounted = function (e) {\n      if (e.target === e.currentTarget) {\n        if (_this.disconnectedCallback) {\n          _this.disconnectedCallback();\n        }\n      }\n    }; // private handleChildInserted = (e: FederatedEvent) => {\n    //   (e.target as DisplayObject).forEach((node) => {\n    //     // append children like other shapes after mounted\n    //     if (!this.isConnected) {\n    //       this.shadowNodes.push(node as DisplayObject);\n    //     }\n    //   });\n    // };\n    // private handleChildRemoved = (e: FederatedEvent) => {\n    //   (e.target as DisplayObject).forEach((node) => {\n    //     node.shadow = false;\n    //   });\n    // };\n\n\n    _this.handleAttributeChanged = function (e) {\n      // only listen itself\n      // RangeError: Maximum call stack size exceeded\n      if (e.target !== _this) {\n        return;\n      }\n\n      var attrName = e.attrName,\n          prevValue = e.prevValue,\n          newValue = e.newValue;\n\n      if (_this.attributeChangedCallback) {\n        _this.attributeChangedCallback(attrName, prevValue, newValue);\n      }\n    }; // this.addEventListener(ElementEvent.CHILD_INSERTED, this.handleChildInserted);\n    // this.addEventListener(ElementEvent.CHILD_REMOVED, this.handleChildRemoved);\n\n\n    if (_this.attributeChangedCallback) {\n      _this.addEventListener(ElementEvent.ATTR_MODIFIED, _this.handleAttributeChanged);\n    }\n\n    if (_this.connectedCallback) {\n      _this.addEventListener(ElementEvent.MOUNTED, _this.handleMounted);\n    }\n\n    if (_this.disconnectedCallback) {\n      _this.addEventListener(ElementEvent.UNMOUNTED, _this.handleUnmounted);\n    }\n\n    return _this;\n  }\n\n  return CustomElement;\n}(DisplayObject);\n\nexport { CustomElement };","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/@antv/g/es/display-objects/CustomElement.js"],"names":["__extends","DisplayObject","ElementEvent","CustomElement","_super","config","_this","call","handleMounted","e","target","currentTarget","connectedCallback","handleUnmounted","disconnectedCallback","handleAttributeChanged","attrName","prevValue","newValue","attributeChangedCallback","addEventListener","ATTR_MODIFIED","MOUNTED","UNMOUNTED"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA;AACA;AACA;AACA;;AAEA,IAAIC,aAAa;AACjB;AACA,UAAUC,MAAV,EAAkB;AAChBJ,EAAAA,SAAS,CAACG,aAAD,EAAgBC,MAAhB,CAAT,CADgB,CACkB;;;AAGlC,WAASD,aAAT,CAAuBE,MAAvB,EAA+B;AAC7B,QAAIA,MAAM,KAAK,KAAK,CAApB,EAAuB;AACrBA,MAAAA,MAAM,GAAG,EAAT;AACD;;AAED,QAAIC,KAAK,GAAGF,MAAM,CAACG,IAAP,CAAY,IAAZ,EAAkBF,MAAlB,KAA6B,IAAzC;;AAEAC,IAAAA,KAAK,CAACE,aAAN,GAAsB,UAAUC,CAAV,EAAa;AACjC,UAAIA,CAAC,CAACC,MAAF,KAAaD,CAAC,CAACE,aAAnB,EAAkC;AAChC;AACA;AACA;AACA;AACA;AACA,YAAIL,KAAK,CAACM,iBAAV,EAA6B;AAC3BN,UAAAA,KAAK,CAACM,iBAAN;AACD;AACF;AACF,KAXD;;AAaAN,IAAAA,KAAK,CAACO,eAAN,GAAwB,UAAUJ,CAAV,EAAa;AACnC,UAAIA,CAAC,CAACC,MAAF,KAAaD,CAAC,CAACE,aAAnB,EAAkC;AAChC,YAAIL,KAAK,CAACQ,oBAAV,EAAgC;AAC9BR,UAAAA,KAAK,CAACQ,oBAAN;AACD;AACF;AACF,KAND,CApB6B,CA0B1B;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGAR,IAAAA,KAAK,CAACS,sBAAN,GAA+B,UAAUN,CAAV,EAAa;AAC1C;AACA;AACA,UAAIA,CAAC,CAACC,MAAF,KAAaJ,KAAjB,EAAwB;AACtB;AACD;;AAED,UAAIU,QAAQ,GAAGP,CAAC,CAACO,QAAjB;AAAA,UACIC,SAAS,GAAGR,CAAC,CAACQ,SADlB;AAAA,UAEIC,QAAQ,GAAGT,CAAC,CAACS,QAFjB;;AAIA,UAAIZ,KAAK,CAACa,wBAAV,EAAoC;AAClCb,QAAAA,KAAK,CAACa,wBAAN,CAA+BH,QAA/B,EAAyCC,SAAzC,EAAoDC,QAApD;AACD;AACF,KAdD,CAzC6B,CAuD1B;AACH;;;AAGA,QAAIZ,KAAK,CAACa,wBAAV,EAAoC;AAClCb,MAAAA,KAAK,CAACc,gBAAN,CAAuBlB,YAAY,CAACmB,aAApC,EAAmDf,KAAK,CAACS,sBAAzD;AACD;;AAED,QAAIT,KAAK,CAACM,iBAAV,EAA6B;AAC3BN,MAAAA,KAAK,CAACc,gBAAN,CAAuBlB,YAAY,CAACoB,OAApC,EAA6ChB,KAAK,CAACE,aAAnD;AACD;;AAED,QAAIF,KAAK,CAACQ,oBAAV,EAAgC;AAC9BR,MAAAA,KAAK,CAACc,gBAAN,CAAuBlB,YAAY,CAACqB,SAApC,EAA+CjB,KAAK,CAACO,eAArD;AACD;;AAED,WAAOP,KAAP;AACD;;AAED,SAAOH,aAAP;AACD,CA/ED,CA+EEF,aA/EF,CAFA;;AAmFA,SAASE,aAAT","sourcesContent":["import { __extends } from \"tslib\";\nimport { DisplayObject } from './DisplayObject';\nimport { ElementEvent } from '../dom/interfaces';\n/**\n * shadow root\n * @see https://yuque.antfin-inc.com/antv/czqvg5/pgqipg\n */\n\nvar CustomElement =\n/** @class */\nfunction (_super) {\n  __extends(CustomElement, _super); // private shadowNodes: DisplayObject[] = [];\n\n\n  function CustomElement(config) {\n    if (config === void 0) {\n      config = {};\n    }\n\n    var _this = _super.call(this, config) || this;\n\n    _this.handleMounted = function (e) {\n      if (e.target === e.currentTarget) {\n        // this.shadowNodes.forEach((node) => {\n        //   // every child and its children should turn into a shadow node\n        //   // a shadow node doesn't mean to be unrenderable, it's just unsearchable in scenegraph\n        //   node.shadow = true;\n        // });\n        if (_this.connectedCallback) {\n          _this.connectedCallback();\n        }\n      }\n    };\n\n    _this.handleUnmounted = function (e) {\n      if (e.target === e.currentTarget) {\n        if (_this.disconnectedCallback) {\n          _this.disconnectedCallback();\n        }\n      }\n    }; // private handleChildInserted = (e: FederatedEvent) => {\n    //   (e.target as DisplayObject).forEach((node) => {\n    //     // append children like other shapes after mounted\n    //     if (!this.isConnected) {\n    //       this.shadowNodes.push(node as DisplayObject);\n    //     }\n    //   });\n    // };\n    // private handleChildRemoved = (e: FederatedEvent) => {\n    //   (e.target as DisplayObject).forEach((node) => {\n    //     node.shadow = false;\n    //   });\n    // };\n\n\n    _this.handleAttributeChanged = function (e) {\n      // only listen itself\n      // RangeError: Maximum call stack size exceeded\n      if (e.target !== _this) {\n        return;\n      }\n\n      var attrName = e.attrName,\n          prevValue = e.prevValue,\n          newValue = e.newValue;\n\n      if (_this.attributeChangedCallback) {\n        _this.attributeChangedCallback(attrName, prevValue, newValue);\n      }\n    }; // this.addEventListener(ElementEvent.CHILD_INSERTED, this.handleChildInserted);\n    // this.addEventListener(ElementEvent.CHILD_REMOVED, this.handleChildRemoved);\n\n\n    if (_this.attributeChangedCallback) {\n      _this.addEventListener(ElementEvent.ATTR_MODIFIED, _this.handleAttributeChanged);\n    }\n\n    if (_this.connectedCallback) {\n      _this.addEventListener(ElementEvent.MOUNTED, _this.handleMounted);\n    }\n\n    if (_this.disconnectedCallback) {\n      _this.addEventListener(ElementEvent.UNMOUNTED, _this.handleUnmounted);\n    }\n\n    return _this;\n  }\n\n  return CustomElement;\n}(DisplayObject);\n\nexport { CustomElement };"]},"metadata":{},"sourceType":"module"}