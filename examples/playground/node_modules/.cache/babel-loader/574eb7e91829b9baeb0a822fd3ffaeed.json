{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nimport { Container as InversifyContainer } from 'inversify';\nimport { GlobalContainer as InversifyGlobalContainer, namedToIdentifier, tokenToIdentifier } from './inversify';\nimport { Utils } from './core';\nimport { Register } from './register';\nimport { isSyringeModule } from './module';\nvar ContainerMap = new Map();\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nexport var Container = /*#__PURE__*/function () {\n  function Container(inversifyContainer) {\n    _classCallCheck(this, Container);\n\n    this.loadedModules = [];\n    this.container = void 0;\n    this.inversify = true;\n    this.parent = void 0;\n\n    if (inversifyContainer) {\n      this.container = inversifyContainer;\n    } else {\n      this.container = new InversifyContainer();\n    }\n\n    Container.setContainer(this.container, this);\n  }\n\n  _createClass(Container, [{\n    key: \"load\",\n    value: function load(module, force) {\n      var _this = this;\n\n      if (force || !this.loadedModules.includes(module.id)) {\n        if (isSyringeModule(module)) {\n          this.container.load(module.inversifyModule);\n        }\n\n        this.loadedModules.push(module.id);\n        return {\n          dispose: function dispose() {\n            _this.unload(module);\n          }\n        };\n      }\n\n      console.warn('Unsupported module.');\n      return {\n        dispose: function dispose() {}\n      };\n    }\n  }, {\n    key: \"unload\",\n    value: function unload(module) {\n      if (isSyringeModule(module)) {\n        this.container.unload(module.inversifyModule);\n        this.loadedModules = this.loadedModules.filter(function (id) {\n          return id !== module.id;\n        });\n      }\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(token) {\n      return this.container.unbind(tokenToIdentifier(token));\n    }\n  }, {\n    key: \"get\",\n    value: function get(token) {\n      return this.container.get(tokenToIdentifier(token));\n    }\n  }, {\n    key: \"getNamed\",\n    value: function getNamed(token, named) {\n      return this.container.getNamed(tokenToIdentifier(token), namedToIdentifier(named));\n    }\n  }, {\n    key: \"getAll\",\n    value: function getAll(token) {\n      return this.container.getAll(tokenToIdentifier(token));\n    }\n  }, {\n    key: \"getAllNamed\",\n    value: function getAllNamed(token, named) {\n      return this.container.getAllNamed(tokenToIdentifier(token), namedToIdentifier(named));\n    }\n  }, {\n    key: \"isBound\",\n    value: function isBound(token) {\n      return this.container.isBound(tokenToIdentifier(token));\n    }\n  }, {\n    key: \"isBoundNamed\",\n    value: function isBoundNamed(token, named) {\n      return this.container.isBoundNamed(tokenToIdentifier(token), namedToIdentifier(named));\n    }\n  }, {\n    key: \"createChild\",\n    value: function createChild() {\n      var childContainer = this.container.createChild();\n      var child = new Container(childContainer);\n      child.parent = this;\n      return child;\n    }\n  }, {\n    key: \"register\",\n    value: function register(token) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (Utils.isInjectOption(token)) {\n        Register.resolveOption(this.container, token);\n      } else {\n        Register.resolveTarget(this.container, token, options);\n      }\n    }\n  }], [{\n    key: \"setContainer\",\n    value: function setContainer(key, value) {\n      return ContainerMap.set(key.id, value);\n    }\n  }, {\n    key: \"getContainer\",\n    value: function getContainer(key) {\n      var exist = ContainerMap.get(key.id);\n\n      if (!exist) {\n        var container = new Container(key);\n        Container.setContainer(key, container);\n        return container;\n      }\n\n      return exist;\n    }\n  }, {\n    key: \"config\",\n    value: function config(option) {\n      Register.globalConfig = option;\n    }\n  }]);\n\n  return Container;\n}();\nexport var GlobalContainer = new Container(InversifyGlobalContainer);\nexport var register = GlobalContainer.register.bind(GlobalContainer);","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/mana-syringe/es/container.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","Container","InversifyContainer","GlobalContainer","InversifyGlobalContainer","namedToIdentifier","tokenToIdentifier","Utils","Register","isSyringeModule","ContainerMap","Map","inversifyContainer","loadedModules","container","inversify","parent","setContainer","value","load","module","force","_this","includes","id","inversifyModule","push","dispose","unload","console","warn","filter","remove","token","unbind","get","getNamed","named","getAll","getAllNamed","isBound","isBoundNamed","createChild","childContainer","child","register","options","arguments","undefined","isInjectOption","resolveOption","resolveTarget","set","getContainer","exist","config","option","globalConfig","bind"],"mappings":"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","sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nimport { Container as InversifyContainer } from 'inversify';\nimport { GlobalContainer as InversifyGlobalContainer, namedToIdentifier, tokenToIdentifier } from './inversify';\nimport { Utils } from './core';\nimport { Register } from './register';\nimport { isSyringeModule } from './module';\nvar ContainerMap = new Map();\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nexport var Container = /*#__PURE__*/function () {\n  function Container(inversifyContainer) {\n    _classCallCheck(this, Container);\n\n    this.loadedModules = [];\n    this.container = void 0;\n    this.inversify = true;\n    this.parent = void 0;\n\n    if (inversifyContainer) {\n      this.container = inversifyContainer;\n    } else {\n      this.container = new InversifyContainer();\n    }\n\n    Container.setContainer(this.container, this);\n  }\n\n  _createClass(Container, [{\n    key: \"load\",\n    value: function load(module, force) {\n      var _this = this;\n\n      if (force || !this.loadedModules.includes(module.id)) {\n        if (isSyringeModule(module)) {\n          this.container.load(module.inversifyModule);\n        }\n\n        this.loadedModules.push(module.id);\n        return {\n          dispose: function dispose() {\n            _this.unload(module);\n          }\n        };\n      }\n\n      console.warn('Unsupported module.');\n      return {\n        dispose: function dispose() {}\n      };\n    }\n  }, {\n    key: \"unload\",\n    value: function unload(module) {\n      if (isSyringeModule(module)) {\n        this.container.unload(module.inversifyModule);\n        this.loadedModules = this.loadedModules.filter(function (id) {\n          return id !== module.id;\n        });\n      }\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(token) {\n      return this.container.unbind(tokenToIdentifier(token));\n    }\n  }, {\n    key: \"get\",\n    value: function get(token) {\n      return this.container.get(tokenToIdentifier(token));\n    }\n  }, {\n    key: \"getNamed\",\n    value: function getNamed(token, named) {\n      return this.container.getNamed(tokenToIdentifier(token), namedToIdentifier(named));\n    }\n  }, {\n    key: \"getAll\",\n    value: function getAll(token) {\n      return this.container.getAll(tokenToIdentifier(token));\n    }\n  }, {\n    key: \"getAllNamed\",\n    value: function getAllNamed(token, named) {\n      return this.container.getAllNamed(tokenToIdentifier(token), namedToIdentifier(named));\n    }\n  }, {\n    key: \"isBound\",\n    value: function isBound(token) {\n      return this.container.isBound(tokenToIdentifier(token));\n    }\n  }, {\n    key: \"isBoundNamed\",\n    value: function isBoundNamed(token, named) {\n      return this.container.isBoundNamed(tokenToIdentifier(token), namedToIdentifier(named));\n    }\n  }, {\n    key: \"createChild\",\n    value: function createChild() {\n      var childContainer = this.container.createChild();\n      var child = new Container(childContainer);\n      child.parent = this;\n      return child;\n    }\n  }, {\n    key: \"register\",\n    value: function register(token) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (Utils.isInjectOption(token)) {\n        Register.resolveOption(this.container, token);\n      } else {\n        Register.resolveTarget(this.container, token, options);\n      }\n    }\n  }], [{\n    key: \"setContainer\",\n    value: function setContainer(key, value) {\n      return ContainerMap.set(key.id, value);\n    }\n  }, {\n    key: \"getContainer\",\n    value: function getContainer(key) {\n      var exist = ContainerMap.get(key.id);\n\n      if (!exist) {\n        var container = new Container(key);\n        Container.setContainer(key, container);\n        return container;\n      }\n\n      return exist;\n    }\n  }, {\n    key: \"config\",\n    value: function config(option) {\n      Register.globalConfig = option;\n    }\n  }]);\n\n  return Container;\n}();\nexport var GlobalContainer = new Container(InversifyGlobalContainer);\nexport var register = GlobalContainer.register.bind(GlobalContainer);"]},"metadata":{},"sourceType":"module"}