{"ast":null,"code":"/* eslint-disable import/prefer-default-export, prefer-destructuring */\nimport { updateCSS } from \"rc-util/es/Dom/dynamicCSS\";\nimport canUseDom from \"rc-util/es/Dom/canUseDom\";\nimport { TinyColor } from '@ctrl/tinycolor';\nimport { generate } from '@ant-design/colors';\nimport devWarning from '../_util/devWarning';\nvar dynamicStyleMark = \"-ant-\".concat(Date.now(), \"-\").concat(Math.random());\nexport function getStyle(globalPrefixCls, theme) {\n  var variables = {};\n\n  var formatColor = function formatColor(color, updater) {\n    var clone = color.clone();\n    clone = (updater === null || updater === void 0 ? void 0 : updater(clone)) || clone;\n    return clone.toRgbString();\n  };\n\n  var fillColor = function fillColor(colorVal, type) {\n    var baseColor = new TinyColor(colorVal);\n    var colorPalettes = generate(baseColor.toRgbString());\n    variables[\"\".concat(type, \"-color\")] = formatColor(baseColor);\n    variables[\"\".concat(type, \"-color-disabled\")] = colorPalettes[1];\n    variables[\"\".concat(type, \"-color-hover\")] = colorPalettes[4];\n    variables[\"\".concat(type, \"-color-active\")] = colorPalettes[7];\n    variables[\"\".concat(type, \"-color-outline\")] = baseColor.clone().setAlpha(0.2).toRgbString();\n    variables[\"\".concat(type, \"-color-deprecated-bg\")] = colorPalettes[1];\n    variables[\"\".concat(type, \"-color-deprecated-border\")] = colorPalettes[3];\n  }; // ================ Primary Color ================\n\n\n  if (theme.primaryColor) {\n    fillColor(theme.primaryColor, 'primary');\n    var primaryColor = new TinyColor(theme.primaryColor);\n    var primaryColors = generate(primaryColor.toRgbString()); // Legacy - We should use semantic naming standard\n\n    primaryColors.forEach(function (color, index) {\n      variables[\"primary-\".concat(index + 1)] = color;\n    }); // Deprecated\n\n    variables['primary-color-deprecated-l-35'] = formatColor(primaryColor, function (c) {\n      return c.lighten(35);\n    });\n    variables['primary-color-deprecated-l-20'] = formatColor(primaryColor, function (c) {\n      return c.lighten(20);\n    });\n    variables['primary-color-deprecated-t-20'] = formatColor(primaryColor, function (c) {\n      return c.tint(20);\n    });\n    variables['primary-color-deprecated-t-50'] = formatColor(primaryColor, function (c) {\n      return c.tint(50);\n    });\n    variables['primary-color-deprecated-f-12'] = formatColor(primaryColor, function (c) {\n      return c.setAlpha(c.getAlpha() * 0.12);\n    });\n    var primaryActiveColor = new TinyColor(primaryColors[0]);\n    variables['primary-color-active-deprecated-f-30'] = formatColor(primaryActiveColor, function (c) {\n      return c.setAlpha(c.getAlpha() * 0.3);\n    });\n    variables['primary-color-active-deprecated-d-02'] = formatColor(primaryActiveColor, function (c) {\n      return c.darken(2);\n    });\n  } // ================ Success Color ================\n\n\n  if (theme.successColor) {\n    fillColor(theme.successColor, 'success');\n  } // ================ Warning Color ================\n\n\n  if (theme.warningColor) {\n    fillColor(theme.warningColor, 'warning');\n  } // ================= Error Color =================\n\n\n  if (theme.errorColor) {\n    fillColor(theme.errorColor, 'error');\n  } // ================= Info Color ==================\n\n\n  if (theme.infoColor) {\n    fillColor(theme.infoColor, 'info');\n  } // Convert to css variables\n\n\n  var cssList = Object.keys(variables).map(function (key) {\n    return \"--\".concat(globalPrefixCls, \"-\").concat(key, \": \").concat(variables[key], \";\");\n  });\n  return \"\\n  :root {\\n    \".concat(cssList.join('\\n'), \"\\n  }\\n  \").trim();\n}\nexport function registerTheme(globalPrefixCls, theme) {\n  var style = getStyle(globalPrefixCls, theme);\n\n  if (canUseDom()) {\n    updateCSS(style, \"\".concat(dynamicStyleMark, \"-dynamic-theme\"));\n  } else {\n    devWarning(false, 'ConfigProvider', 'SSR do not support dynamic theme with css variables.');\n  }\n}","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/antd/es/config-provider/cssVariables.js"],"names":["updateCSS","canUseDom","TinyColor","generate","devWarning","dynamicStyleMark","concat","Date","now","Math","random","getStyle","globalPrefixCls","theme","variables","formatColor","color","updater","clone","toRgbString","fillColor","colorVal","type","baseColor","colorPalettes","setAlpha","primaryColor","primaryColors","forEach","index","c","lighten","tint","getAlpha","primaryActiveColor","darken","successColor","warningColor","errorColor","infoColor","cssList","Object","keys","map","key","join","trim","registerTheme","style"],"mappings":"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","sourcesContent":["/* eslint-disable import/prefer-default-export, prefer-destructuring */\nimport { updateCSS } from \"rc-util/es/Dom/dynamicCSS\";\nimport canUseDom from \"rc-util/es/Dom/canUseDom\";\nimport { TinyColor } from '@ctrl/tinycolor';\nimport { generate } from '@ant-design/colors';\nimport devWarning from '../_util/devWarning';\nvar dynamicStyleMark = \"-ant-\".concat(Date.now(), \"-\").concat(Math.random());\nexport function getStyle(globalPrefixCls, theme) {\n  var variables = {};\n\n  var formatColor = function formatColor(color, updater) {\n    var clone = color.clone();\n    clone = (updater === null || updater === void 0 ? void 0 : updater(clone)) || clone;\n    return clone.toRgbString();\n  };\n\n  var fillColor = function fillColor(colorVal, type) {\n    var baseColor = new TinyColor(colorVal);\n    var colorPalettes = generate(baseColor.toRgbString());\n    variables[\"\".concat(type, \"-color\")] = formatColor(baseColor);\n    variables[\"\".concat(type, \"-color-disabled\")] = colorPalettes[1];\n    variables[\"\".concat(type, \"-color-hover\")] = colorPalettes[4];\n    variables[\"\".concat(type, \"-color-active\")] = colorPalettes[7];\n    variables[\"\".concat(type, \"-color-outline\")] = baseColor.clone().setAlpha(0.2).toRgbString();\n    variables[\"\".concat(type, \"-color-deprecated-bg\")] = colorPalettes[1];\n    variables[\"\".concat(type, \"-color-deprecated-border\")] = colorPalettes[3];\n  }; // ================ Primary Color ================\n\n\n  if (theme.primaryColor) {\n    fillColor(theme.primaryColor, 'primary');\n    var primaryColor = new TinyColor(theme.primaryColor);\n    var primaryColors = generate(primaryColor.toRgbString()); // Legacy - We should use semantic naming standard\n\n    primaryColors.forEach(function (color, index) {\n      variables[\"primary-\".concat(index + 1)] = color;\n    }); // Deprecated\n\n    variables['primary-color-deprecated-l-35'] = formatColor(primaryColor, function (c) {\n      return c.lighten(35);\n    });\n    variables['primary-color-deprecated-l-20'] = formatColor(primaryColor, function (c) {\n      return c.lighten(20);\n    });\n    variables['primary-color-deprecated-t-20'] = formatColor(primaryColor, function (c) {\n      return c.tint(20);\n    });\n    variables['primary-color-deprecated-t-50'] = formatColor(primaryColor, function (c) {\n      return c.tint(50);\n    });\n    variables['primary-color-deprecated-f-12'] = formatColor(primaryColor, function (c) {\n      return c.setAlpha(c.getAlpha() * 0.12);\n    });\n    var primaryActiveColor = new TinyColor(primaryColors[0]);\n    variables['primary-color-active-deprecated-f-30'] = formatColor(primaryActiveColor, function (c) {\n      return c.setAlpha(c.getAlpha() * 0.3);\n    });\n    variables['primary-color-active-deprecated-d-02'] = formatColor(primaryActiveColor, function (c) {\n      return c.darken(2);\n    });\n  } // ================ Success Color ================\n\n\n  if (theme.successColor) {\n    fillColor(theme.successColor, 'success');\n  } // ================ Warning Color ================\n\n\n  if (theme.warningColor) {\n    fillColor(theme.warningColor, 'warning');\n  } // ================= Error Color =================\n\n\n  if (theme.errorColor) {\n    fillColor(theme.errorColor, 'error');\n  } // ================= Info Color ==================\n\n\n  if (theme.infoColor) {\n    fillColor(theme.infoColor, 'info');\n  } // Convert to css variables\n\n\n  var cssList = Object.keys(variables).map(function (key) {\n    return \"--\".concat(globalPrefixCls, \"-\").concat(key, \": \").concat(variables[key], \";\");\n  });\n  return \"\\n  :root {\\n    \".concat(cssList.join('\\n'), \"\\n  }\\n  \").trim();\n}\nexport function registerTheme(globalPrefixCls, theme) {\n  var style = getStyle(globalPrefixCls, theme);\n\n  if (canUseDom()) {\n    updateCSS(style, \"\".concat(dynamicStyleMark, \"-dynamic-theme\"));\n  } else {\n    devWarning(false, 'ConfigProvider', 'SSR do not support dynamic theme with css variables.');\n  }\n}"]},"metadata":{},"sourceType":"module"}