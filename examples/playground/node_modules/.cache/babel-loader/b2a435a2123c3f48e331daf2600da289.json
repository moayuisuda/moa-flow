{"ast":null,"code":"import { distance } from './utils/math';\nexport function isPointInPath(displayObject, position) {\n  var _a = displayObject.parsedStyle,\n      rInPixels = _a.r,\n      fill = _a.fill,\n      stroke = _a.stroke,\n      lineWidth = _a.lineWidth,\n      clipPathTargets = _a.clipPathTargets;\n  var r = rInPixels.value;\n  var halfLineWidth = lineWidth.value / 2;\n  var absDistance = distance(r, r, position.x, position.y);\n  var isClipPath = !!(clipPathTargets === null || clipPathTargets === void 0 ? void 0 : clipPathTargets.length);\n  var hasFill = fill && !fill.isNone;\n  var hasStroke = stroke && !stroke.isNone; // 直接用距离，如果同时存在边和填充时，可以减少两次计算\n\n  if (hasFill && hasStroke || isClipPath) {\n    return absDistance <= r + halfLineWidth;\n  }\n\n  if (hasFill) {\n    return absDistance <= r;\n  }\n\n  if (hasStroke) {\n    return absDistance >= r - halfLineWidth && absDistance <= r + halfLineWidth;\n  }\n\n  return false;\n}","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/@antv/g-plugin-canvas-picker/es/Circle.js"],"names":["distance","isPointInPath","displayObject","position","_a","parsedStyle","rInPixels","r","fill","stroke","lineWidth","clipPathTargets","value","halfLineWidth","absDistance","x","y","isClipPath","length","hasFill","isNone","hasStroke"],"mappings":"AAAA,SAASA,QAAT,QAAyB,cAAzB;AACA,OAAO,SAASC,aAAT,CAAuBC,aAAvB,EAAsCC,QAAtC,EAAgD;AACrD,MAAIC,EAAE,GAAGF,aAAa,CAACG,WAAvB;AAAA,MACIC,SAAS,GAAGF,EAAE,CAACG,CADnB;AAAA,MAEIC,IAAI,GAAGJ,EAAE,CAACI,IAFd;AAAA,MAGIC,MAAM,GAAGL,EAAE,CAACK,MAHhB;AAAA,MAIIC,SAAS,GAAGN,EAAE,CAACM,SAJnB;AAAA,MAKIC,eAAe,GAAGP,EAAE,CAACO,eALzB;AAMA,MAAIJ,CAAC,GAAGD,SAAS,CAACM,KAAlB;AACA,MAAIC,aAAa,GAAGH,SAAS,CAACE,KAAV,GAAkB,CAAtC;AACA,MAAIE,WAAW,GAAGd,QAAQ,CAACO,CAAD,EAAIA,CAAJ,EAAOJ,QAAQ,CAACY,CAAhB,EAAmBZ,QAAQ,CAACa,CAA5B,CAA1B;AACA,MAAIC,UAAU,GAAG,CAAC,EAAEN,eAAe,KAAK,IAApB,IAA4BA,eAAe,KAAK,KAAK,CAArD,GAAyD,KAAK,CAA9D,GAAkEA,eAAe,CAACO,MAApF,CAAlB;AACA,MAAIC,OAAO,GAAGX,IAAI,IAAI,CAACA,IAAI,CAACY,MAA5B;AACA,MAAIC,SAAS,GAAGZ,MAAM,IAAI,CAACA,MAAM,CAACW,MAAlC,CAZqD,CAYX;;AAE1C,MAAID,OAAO,IAAIE,SAAX,IAAwBJ,UAA5B,EAAwC;AACtC,WAAOH,WAAW,IAAIP,CAAC,GAAGM,aAA1B;AACD;;AAED,MAAIM,OAAJ,EAAa;AACX,WAAOL,WAAW,IAAIP,CAAtB;AACD;;AAED,MAAIc,SAAJ,EAAe;AACb,WAAOP,WAAW,IAAIP,CAAC,GAAGM,aAAnB,IAAoCC,WAAW,IAAIP,CAAC,GAAGM,aAA9D;AACD;;AAED,SAAO,KAAP;AACD","sourcesContent":["import { distance } from './utils/math';\nexport function isPointInPath(displayObject, position) {\n  var _a = displayObject.parsedStyle,\n      rInPixels = _a.r,\n      fill = _a.fill,\n      stroke = _a.stroke,\n      lineWidth = _a.lineWidth,\n      clipPathTargets = _a.clipPathTargets;\n  var r = rInPixels.value;\n  var halfLineWidth = lineWidth.value / 2;\n  var absDistance = distance(r, r, position.x, position.y);\n  var isClipPath = !!(clipPathTargets === null || clipPathTargets === void 0 ? void 0 : clipPathTargets.length);\n  var hasFill = fill && !fill.isNone;\n  var hasStroke = stroke && !stroke.isNone; // 直接用距离，如果同时存在边和填充时，可以减少两次计算\n\n  if (hasFill && hasStroke || isClipPath) {\n    return absDistance <= r + halfLineWidth;\n  }\n\n  if (hasFill) {\n    return absDistance <= r;\n  }\n\n  if (hasStroke) {\n    return absDistance >= r - halfLineWidth && absDistance <= r + halfLineWidth;\n  }\n\n  return false;\n}"]},"metadata":{},"sourceType":"module"}