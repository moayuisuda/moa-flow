{"ast":null,"code":"import arrayPush from './_arrayPush.js';\nimport baseFlatten from './_baseFlatten.js';\nimport copyArray from './_copyArray.js';\nimport isArray from './isArray.js';\n/**\n * Creates a new array concatenating `array` with any additional arrays\n * and/or values.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to concatenate.\n * @param {...*} [values] The values to concatenate.\n * @returns {Array} Returns the new concatenated array.\n * @example\n *\n * var array = [1];\n * var other = _.concat(array, 2, [3], [[4]]);\n *\n * console.log(other);\n * // => [1, 2, 3, [4]]\n *\n * console.log(array);\n * // => [1]\n */\n\nfunction concat() {\n  var length = arguments.length;\n\n  if (!length) {\n    return [];\n  }\n\n  var args = Array(length - 1),\n      array = arguments[0],\n      index = length;\n\n  while (index--) {\n    args[index - 1] = arguments[index];\n  }\n\n  return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n}\n\nexport default concat;","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/lodash-es/concat.js"],"names":["arrayPush","baseFlatten","copyArray","isArray","concat","length","arguments","args","Array","array","index"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,iBAAtB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,OAAP,MAAoB,cAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,MAAT,GAAkB;AAChB,MAAIC,MAAM,GAAGC,SAAS,CAACD,MAAvB;;AACA,MAAI,CAACA,MAAL,EAAa;AACX,WAAO,EAAP;AACD;;AACD,MAAIE,IAAI,GAAGC,KAAK,CAACH,MAAM,GAAG,CAAV,CAAhB;AAAA,MACII,KAAK,GAAGH,SAAS,CAAC,CAAD,CADrB;AAAA,MAEII,KAAK,GAAGL,MAFZ;;AAIA,SAAOK,KAAK,EAAZ,EAAgB;AACdH,IAAAA,IAAI,CAACG,KAAK,GAAG,CAAT,CAAJ,GAAkBJ,SAAS,CAACI,KAAD,CAA3B;AACD;;AACD,SAAOV,SAAS,CAACG,OAAO,CAACM,KAAD,CAAP,GAAiBP,SAAS,CAACO,KAAD,CAA1B,GAAoC,CAACA,KAAD,CAArC,EAA8CR,WAAW,CAACM,IAAD,EAAO,CAAP,CAAzD,CAAhB;AACD;;AAED,eAAeH,MAAf","sourcesContent":["import arrayPush from './_arrayPush.js';\nimport baseFlatten from './_baseFlatten.js';\nimport copyArray from './_copyArray.js';\nimport isArray from './isArray.js';\n\n/**\n * Creates a new array concatenating `array` with any additional arrays\n * and/or values.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to concatenate.\n * @param {...*} [values] The values to concatenate.\n * @returns {Array} Returns the new concatenated array.\n * @example\n *\n * var array = [1];\n * var other = _.concat(array, 2, [3], [[4]]);\n *\n * console.log(other);\n * // => [1, 2, 3, [4]]\n *\n * console.log(array);\n * // => [1]\n */\nfunction concat() {\n  var length = arguments.length;\n  if (!length) {\n    return [];\n  }\n  var args = Array(length - 1),\n      array = arguments[0],\n      index = length;\n\n  while (index--) {\n    args[index - 1] = arguments[index];\n  }\n  return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n}\n\nexport default concat;\n"]},"metadata":{},"sourceType":"module"}