{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { singleton } from 'mana-syringe';\nimport { CSSKeywordValue } from '../cssom';\n\nvar CSSPropertyText =\n/** @class */\nfunction () {\n  function CSSPropertyText() {}\n\n  CSSPropertyText.prototype.calculator = function (name, oldParsed, parsed, object) {\n    if (parsed instanceof CSSKeywordValue) {\n      if (parsed.value === 'unset') {\n        return '';\n      } else {\n        return parsed.value;\n      }\n    }\n\n    return parsed;\n  };\n\n  CSSPropertyText.prototype.postProcessor = function (object) {\n    object.nodeValue = \"\".concat(object.parsedStyle.text) || '';\n  };\n\n  CSSPropertyText = __decorate([singleton()], CSSPropertyText);\n  return CSSPropertyText;\n}();\n\nexport { CSSPropertyText };","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/@antv/g/es/css/properties/CSSPropertyText.js"],"names":["__decorate","singleton","CSSKeywordValue","CSSPropertyText","prototype","calculator","name","oldParsed","parsed","object","value","postProcessor","nodeValue","concat","parsedStyle","text"],"mappings":"AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,eAAT,QAAgC,UAAhC;;AAEA,IAAIC,eAAe;AACnB;AACA,YAAY;AACV,WAASA,eAAT,GAA2B,CAAE;;AAE7BA,EAAAA,eAAe,CAACC,SAAhB,CAA0BC,UAA1B,GAAuC,UAAUC,IAAV,EAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,MAAnC,EAA2C;AAChF,QAAID,MAAM,YAAYN,eAAtB,EAAuC;AACrC,UAAIM,MAAM,CAACE,KAAP,KAAiB,OAArB,EAA8B;AAC5B,eAAO,EAAP;AACD,OAFD,MAEO;AACL,eAAOF,MAAM,CAACE,KAAd;AACD;AACF;;AAED,WAAOF,MAAP;AACD,GAVD;;AAYAL,EAAAA,eAAe,CAACC,SAAhB,CAA0BO,aAA1B,GAA0C,UAAUF,MAAV,EAAkB;AAC1DA,IAAAA,MAAM,CAACG,SAAP,GAAmB,GAAGC,MAAH,CAAUJ,MAAM,CAACK,WAAP,CAAmBC,IAA7B,KAAsC,EAAzD;AACD,GAFD;;AAIAZ,EAAAA,eAAe,GAAGH,UAAU,CAAC,CAACC,SAAS,EAAV,CAAD,EAAgBE,eAAhB,CAA5B;AACA,SAAOA,eAAP;AACD,CArBD,EAFA;;AAyBA,SAASA,eAAT","sourcesContent":["import { __decorate } from \"tslib\";\nimport { singleton } from 'mana-syringe';\nimport { CSSKeywordValue } from '../cssom';\n\nvar CSSPropertyText =\n/** @class */\nfunction () {\n  function CSSPropertyText() {}\n\n  CSSPropertyText.prototype.calculator = function (name, oldParsed, parsed, object) {\n    if (parsed instanceof CSSKeywordValue) {\n      if (parsed.value === 'unset') {\n        return '';\n      } else {\n        return parsed.value;\n      }\n    }\n\n    return parsed;\n  };\n\n  CSSPropertyText.prototype.postProcessor = function (object) {\n    object.nodeValue = \"\".concat(object.parsedStyle.text) || '';\n  };\n\n  CSSPropertyText = __decorate([singleton()], CSSPropertyText);\n  return CSSPropertyText;\n}();\n\nexport { CSSPropertyText };"]},"metadata":{},"sourceType":"module"}