{"ast":null,"code":"import { __decorate, __assign } from './node_modules/tslib/tslib.es6.js';\nimport { observable, action, makeObservable } from 'mobx';\nimport { remove, isRectsInterSect, findIndex, arrayMove } from './utils/util.js';\nimport { color } from './theme/style.js';\nimport './node_modules/lodash/lodash.js';\nimport { l as lodash } from './_virtual/lodash.js';\nimport v4 from './packages/flow/node_modules/uuid/dist/esm-browser/v4.js';\n\nvar FlowModel =\n/** @class */\nfunction () {\n  function FlowModel(eventSender) {\n    var _this = this;\n\n    this.setEventSender = function (eventSender) {\n      _this.eventBus.sender = eventSender;\n    };\n\n    this.setCellsDataMap = function () {\n      _this.canvasData.cells.forEach(function (cellData) {\n        _this.setCellDataMap(cellData);\n      });\n    };\n\n    this.extra = {};\n    this._width = 1000;\n    this._height = 600;\n\n    this.width = function (width) {\n      if (lodash.exports.isUndefined(width)) return _this._width;else {\n        _this._width = width;\n        return width;\n      }\n    };\n\n    this.height = function (height) {\n      if (lodash.exports.isUndefined(height)) return _this._height;else {\n        _this._height = height;\n        return height;\n      }\n    };\n\n    this.setSize = function (width, height) {\n      _this._width = width;\n      _this._height = height;\n    };\n\n    this.grid = 1;\n\n    this.setGrid = function (grid) {\n      _this.grid = grid;\n    };\n\n    this.refs = {\n      stageRef: undefined\n    };\n    this.hotKey = {\n      RightMouseDown: false,\n      LeftMouseDown: false,\n      Space: false\n    };\n\n    this.setHotKey = function (key, value) {\n      _this.hotKey[key] = value;\n    };\n\n    this.linkEdge = \"Edge\";\n\n    this.setLinkEdge = function (name) {\n      _this.linkEdge = name;\n    };\n\n    this.getLinkingPort = function () {\n      return _this.buffer.link.source;\n    };\n\n    this.clearPortEdge = function (edgeId) {\n      var edgeData = _this.getCellData(edgeId);\n\n      var sourcePort = _this.getCellData(edgeData.source);\n\n      var targetPort = _this.getCellData(edgeData.target);\n\n      sourcePort.edges && remove(sourcePort.edges, edgeId);\n      targetPort.edges && remove(targetPort.edges, edgeId);\n    }; // 一些中间状态，比如连线中的开始节点的暂存，不应该让外部感知\n\n\n    this.buffer = {\n      rightClickPanel: {\n        visible: false\n      },\n      drag: {\n        movement: {\n          x: 0,\n          y: 0\n        },\n        start: {\n          x: 0,\n          y: 0\n        }\n      },\n      isWheeling: false,\n      select: {\n        isSelecting: false,\n        start: {\n          x: 0,\n          y: 0\n        },\n        end: {\n          x: 0,\n          y: 0\n        }\n      },\n      link: {\n        // 只是为了统一渲染，加$state\n        $state: {\n          isSelect: false,\n          isLinking: true\n        },\n        edge: undefined,\n        source: undefined,\n        target: {\n          x: 0,\n          y: 0\n        }\n      }\n    };\n\n    this.setMultiSelect = function (select, onlySetPosition) {\n      if (onlySetPosition === void 0) {\n        onlySetPosition = false;\n      }\n\n      var bufferSelect = _this.buffer.select;\n      Object.assign(bufferSelect, select);\n      var right = Math.max(bufferSelect.start.x, bufferSelect.end.x);\n      var x = Math.min(bufferSelect.start.x, bufferSelect.end.x);\n      var y = Math.min(bufferSelect.start.y, bufferSelect.end.y);\n      var bottom = Math.max(bufferSelect.start.y, bufferSelect.end.y);\n      if (onlySetPosition) return;\n      var re = [];\n\n      _this.cellsMap.forEach(function (cell) {\n        var _a;\n\n        if (((_a = cell.props.data) === null || _a === void 0 ? void 0 : _a.cellType) === \"node\") {\n          // 判断矩形是否相交\n          if (isRectsInterSect({\n            x: x,\n            y: y,\n            width: right - x,\n            height: bottom - y\n          }, _this.getLocalBBox(cell.props.data.id))) {\n            re.push(cell.props.data.id);\n          }\n        }\n      });\n\n      _this.setSelectedCells(re);\n    };\n\n    this.clearLinkBuffer = function () {\n      Object.assign(_this.buffer.link, {\n        edge: undefined,\n        source: undefined,\n        target: {\n          x: 0,\n          y: 0\n        }\n      });\n    }; // 全局颜色，可以由用户自定义\n\n\n    this.color = color; // cell的<id, 实例>map，方便用id获取到组件实例\n\n    this.cellsMap = new Map(); // cellData的<id, cellData>map，用来修改受控数据\n\n    this.cellsDataMap = new Map(); // 注册节点到model，方便动态引用\n\n    this.componentsMap = new Map();\n\n    this.regist = function (name, component) {\n      _this.componentsMap.set(name, component);\n    };\n\n    this.eventBus = {\n      sender: undefined,\n      receiver: undefined\n    }; // 选中的cell\n\n    this.selectCells = [];\n\n    this.setSelectedCells = function (ids, ifReplace) {\n      if (ifReplace === void 0) {\n        ifReplace = true;\n      }\n\n      if (ifReplace) {\n        _this.selectCells = ids;\n      } else {\n        _this.selectCells = lodash.exports.union(_this.selectCells, ids);\n      }\n    };\n\n    this.canvasData = {\n      scale: 1,\n      x: 0,\n      y: 0,\n      cells: []\n    };\n\n    this.clearSelect = function () {\n      _this.selectCells = [];\n    };\n\n    this.sendEvent = function (data) {\n      var _a, _b;\n\n      (_b = (_a = _this.eventBus).sender) === null || _b === void 0 ? void 0 : _b.call(_a, data);\n    };\n\n    this.setStageScale = function (scale) {\n      _this.canvasData.scale = scale;\n    };\n\n    this.setStagePosition = function (x, y) {\n      _this.canvasData.x = x;\n      _this.canvasData.y = y;\n    };\n\n    this.insertRuntimeState = function (cellData) {\n      cellData.$state = {\n        isSelect: false,\n        isLinking: false\n      };\n    };\n\n    this.getLocalBBox = function (id) {\n      var instanceBounds = _this.cellsMap.get(id).wrapperRef.current.getLocalBounds();\n\n      return {\n        x: instanceBounds.center[0] - instanceBounds.halfExtents[0],\n        y: instanceBounds.center[1] - instanceBounds.halfExtents[1],\n        width: instanceBounds.halfExtents[0] * 2,\n        height: instanceBounds.halfExtents[1] * 2\n      };\n    };\n\n    this.setCanvasData = function (canvasData) {\n      canvasData.cells.forEach(function (cellData) {\n        _this.insertRuntimeState(cellData);\n      });\n      _this.canvasData = canvasData; // 这里考虑到react会复用实例，所以不能简单地清除cellsMap\n      // this.cellsDataMap.clear();\n      // this.cellsMap.clear();\n\n      _this.setCellsDataMap();\n    };\n\n    this.setCellId = function (data) {\n      data.id = v4();\n    };\n\n    this.setCellData = function (id, data) {\n      var cellData = _this.getCellData(id);\n\n      _this.sendEvent({\n        type: \"data:change\"\n      });\n\n      lodash.exports.merge(cellData, data);\n    };\n    /**\n     * @description 获取某个node连接的所有edge\n     */\n\n\n    this.getNodeEdges = function (nodeId) {\n      var re = [];\n\n      var nodeData = _this.getCellData(nodeId);\n\n      if (nodeData.ports) nodeData.ports.forEach(function (port) {\n        if (port.edges) {\n          port.edges.forEach(function (edgeId) {\n            re.push(edgeId);\n          });\n        }\n      });\n      return re;\n    };\n    /**\n     * @description 获取某个port连接的所有port\n     */\n\n\n    this.getPortLinkPorts = function (portId) {\n      var _a;\n\n      var re = [];\n\n      var portData = _this.getCellData(portId);\n\n      (_a = portData.edges) === null || _a === void 0 ? void 0 : _a.forEach(function (edgeId) {\n        var edgeData = _this.getCellData(edgeId);\n\n        var sourcePort = _this.getCellData(edgeData.source);\n\n        var targetPort = _this.getCellData(edgeData.target);\n\n        re.push.apply(re, lodash.exports.without(lodash.exports.union([sourcePort.id], [targetPort.id]), portId));\n      });\n      return re;\n    };\n    /**\n     * @description 获取某个port连接的所有node\n     */\n\n\n    this.getPortLinkNodes = function (portId) {\n      var _a;\n\n      var re = [];\n\n      var portData = _this.getCellData(portId);\n\n      (_a = portData.edges) === null || _a === void 0 ? void 0 : _a.forEach(function (edgeId) {\n        var edgeData = _this.getCellData(edgeId);\n\n        var sourcePort = _this.getCellData(edgeData.source);\n\n        var targetPort = _this.getCellData(edgeData.target);\n\n        re.push.apply(re, lodash.exports.without(lodash.exports.union([sourcePort.host], [targetPort.host]), portData.host));\n      });\n      return re;\n    };\n    /**\n     * @description 获取某个node连接的所有port\n     */\n\n\n    this.getLinkPorts = function (nodeId) {\n      var re = [];\n\n      var nodeData = _this.getCellData(nodeId);\n\n      if (nodeData.ports) nodeData.ports.forEach(function (portData) {\n        re.push.apply(re, _this.getPortLinkPorts(portData.id));\n      });\n      return re;\n    };\n    /**\n     * @description 获取某个node连接的所有node\n     */\n\n\n    this.getLinkNodes = function (nodeId) {\n      var re = [];\n\n      var nodeData = _this.getCellData(nodeId);\n\n      if (nodeData.ports) nodeData.ports.forEach(function (portData) {\n        re.push.apply(re, _this.getPortLinkNodes(portData.id));\n      });\n      return re;\n    };\n\n    this.deleCell = function (id) {\n      var matchCell = _this.getCellData(id);\n\n      if (!matchCell) {\n        console.error(\"[flow-infra] can not find match dele Cell\");\n        return;\n      }\n\n      if (matchCell.cellType === \"edge\") _this.clearPortEdge(matchCell.id);\n      _this.selectCells.includes(id) && remove(_this.selectCells, id);\n      remove(_this.canvasData.cells, matchCell);\n\n      _this.cellsMap.delete(id);\n\n      _this.cellsDataMap.delete(id);\n\n      _this.sendEvent({\n        type: \"data:change\"\n      });\n\n      return matchCell.id;\n    };\n\n    this.snap = function (vector) {\n      var grid = _this.grid;\n      return {\n        x: Math.round(vector.x / grid) * grid,\n        y: Math.round(vector.y / grid) * grid\n      };\n    }; // 自动布局，用自动布局的三方库对每一个节点的x，y进行计算\n    // @action setAutoLayout = (layoutOption) => {};\n\n\n    this.createCellData = function (component, initOptions) {\n      var id = v4();\n      var metaData = Object.assign(_this.componentsMap.get(component).getMetaData(), {\n        component: component\n      });\n\n      _this.insertRuntimeState(metaData);\n\n      return Object.assign(metaData, __assign({\n        id: id\n      }, initOptions));\n    };\n\n    this.addCell = function (componentName, initOptions) {\n      var newCellData = _this.createCellData(componentName, initOptions);\n\n      if (newCellData.ports) {\n        newCellData.ports.forEach(function (port) {\n          port.host = newCellData.id;\n          port.cellType = \"port\";\n          if (!port.id) port.id = v4();\n        });\n      }\n\n      _this.canvasData.cells.push(newCellData);\n\n      _this.setCellDataMap(_this.canvasData.cells[_this.canvasData.cells.length - 1]); // console.log(\n      //   newCellData,\n      //   this.canvasData.cells[this.canvasData.cells.length - 1]\n      // ); // 两者不是一个对象，后者是proxy\n\n\n      _this.sendEvent({\n        type: \"data:change\"\n      });\n\n      return newCellData.id;\n    };\n\n    this.setLinkingPosition = function (e) {\n      var cursorPos = _this.getStageCursor(e);\n\n      _this.buffer.link.target.x = cursorPos.x;\n      _this.buffer.link.target.y = cursorPos.y;\n    };\n\n    this.link = function (source, target) {\n      var sourceCellData = _this.getCellData(source);\n\n      var targetCellData = _this.getCellData(target);\n\n      var edgeId = _this.addCell(_this.linkEdge, {\n        source: source,\n        target: target\n      });\n\n      if (sourceCellData.edges) {\n        sourceCellData.edges.push(edgeId);\n      } else sourceCellData.edges = [edgeId];\n\n      if (targetCellData.edges) {\n        targetCellData.edges.push(edgeId);\n      } else targetCellData.edges = [edgeId];\n\n      _this.sendEvent({\n        type: \"link\",\n        data: {\n          source: source,\n          target: target\n        }\n      });\n\n      _this.clearLinkBuffer();\n    };\n\n    this.scale = function (scale) {\n      if (lodash.exports.isUndefined(scale)) return _this.canvasData.scale;else {\n        _this.setStageScale(scale);\n\n        return scale;\n      }\n    };\n\n    this.getCell = function (id) {\n      return _this.cellsMap.get(id);\n    };\n\n    this.getCellData = function (id) {\n      return _this.cellsDataMap.get(id);\n    };\n\n    this.getCellInstance = function (id) {\n      return _this.cellsMap.get(id);\n    };\n\n    this.getCellsData = function () {\n      return _this.canvasData.cells;\n    };\n    /**\n     * @description 获取当前鼠标的[画布坐标]\n     */\n\n\n    this.getStageCursor = function (e) {\n      return {\n        x: (e.canvas.x - _this.x()) / _this.scale(),\n        y: (e.canvas.y - _this.y()) / _this.scale()\n      };\n    };\n\n    makeObservable(this);\n    if (eventSender) this.eventBus.sender = eventSender;\n  }\n\n  FlowModel.prototype.setCellDataMap = function (cellData) {\n    var _this = this;\n\n    this.cellsDataMap.set(cellData.id, cellData);\n\n    function isNodeDataType(t) {\n      return t.cellType === \"node\";\n    }\n\n    if (isNodeDataType(cellData)) {\n      if (cellData.ports) {\n        cellData.ports.forEach(function (portData) {\n          _this.setCellDataMap(portData);\n        });\n      }\n    }\n  }; // @action\n\n\n  FlowModel.prototype.x = function (x) {\n    if (lodash.exports.isUndefined(x)) return this.canvasData.x;else {\n      this.setStagePosition(x, this.canvasData.y);\n      return x;\n    }\n  }; // @action\n\n\n  FlowModel.prototype.y = function (y) {\n    if (lodash.exports.isUndefined(y)) return this.canvasData.y;else {\n      this.setStagePosition(this.canvasData.x, y);\n      return y;\n    }\n  };\n\n  FlowModel.prototype.moveTo = function (id, index) {\n    var oldIndex = findIndex(this.canvasData.cells, this.getCellData(id));\n    arrayMove(this.canvasData.cells, oldIndex, index);\n  };\n\n  __decorate([observable], FlowModel.prototype, \"_width\", void 0);\n\n  __decorate([observable], FlowModel.prototype, \"_height\", void 0);\n\n  __decorate([action], FlowModel.prototype, \"setSize\", void 0);\n\n  __decorate([observable], FlowModel.prototype, \"grid\", void 0);\n\n  __decorate([action], FlowModel.prototype, \"setGrid\", void 0);\n\n  __decorate([observable], FlowModel.prototype, \"hotKey\", void 0);\n\n  __decorate([action], FlowModel.prototype, \"setHotKey\", void 0);\n\n  __decorate([action], FlowModel.prototype, \"setLinkEdge\", void 0);\n\n  __decorate([action], FlowModel.prototype, \"clearPortEdge\", void 0);\n\n  __decorate([observable], FlowModel.prototype, \"buffer\", void 0);\n\n  __decorate([action], FlowModel.prototype, \"setMultiSelect\", void 0);\n\n  __decorate([action], FlowModel.prototype, \"clearLinkBuffer\", void 0);\n\n  __decorate([observable], FlowModel.prototype, \"color\", void 0);\n\n  __decorate([observable], FlowModel.prototype, \"selectCells\", void 0);\n\n  __decorate([action], FlowModel.prototype, \"setSelectedCells\", void 0);\n\n  __decorate([observable], FlowModel.prototype, \"canvasData\", void 0);\n\n  __decorate([action], FlowModel.prototype, \"clearSelect\", void 0);\n\n  __decorate([action], FlowModel.prototype, \"setStageScale\", void 0);\n\n  __decorate([action], FlowModel.prototype, \"setStagePosition\", void 0);\n\n  __decorate([action], FlowModel.prototype, \"setCanvasData\", void 0);\n\n  __decorate([action], FlowModel.prototype, \"setCellId\", void 0);\n\n  __decorate([action], FlowModel.prototype, \"setCellData\", void 0);\n\n  __decorate([action], FlowModel.prototype, \"deleCell\", void 0);\n\n  __decorate([action], FlowModel.prototype, \"addCell\", void 0);\n\n  __decorate([action], FlowModel.prototype, \"setLinkingPosition\", void 0);\n\n  __decorate([action], FlowModel.prototype, \"link\", void 0);\n\n  __decorate([action], FlowModel.prototype, \"moveTo\", null);\n\n  return FlowModel;\n}();\n\nexport { FlowModel, FlowModel as default };","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/packages/flow/lib/Model.js"],"names":["__decorate","__assign","observable","action","makeObservable","remove","isRectsInterSect","findIndex","arrayMove","color","l","lodash","v4","FlowModel","eventSender","_this","setEventSender","eventBus","sender","setCellsDataMap","canvasData","cells","forEach","cellData","setCellDataMap","extra","_width","_height","width","exports","isUndefined","height","setSize","grid","setGrid","refs","stageRef","undefined","hotKey","RightMouseDown","LeftMouseDown","Space","setHotKey","key","value","linkEdge","setLinkEdge","name","getLinkingPort","buffer","link","source","clearPortEdge","edgeId","edgeData","getCellData","sourcePort","targetPort","target","edges","rightClickPanel","visible","drag","movement","x","y","start","isWheeling","select","isSelecting","end","$state","isSelect","isLinking","edge","setMultiSelect","onlySetPosition","bufferSelect","Object","assign","right","Math","max","min","bottom","re","cellsMap","cell","_a","props","data","cellType","getLocalBBox","id","push","setSelectedCells","clearLinkBuffer","Map","cellsDataMap","componentsMap","regist","component","set","receiver","selectCells","ids","ifReplace","union","scale","clearSelect","sendEvent","_b","call","setStageScale","setStagePosition","insertRuntimeState","instanceBounds","get","wrapperRef","current","getLocalBounds","center","halfExtents","setCanvasData","setCellId","setCellData","type","merge","getNodeEdges","nodeId","nodeData","ports","port","getPortLinkPorts","portId","portData","apply","without","getPortLinkNodes","host","getLinkPorts","getLinkNodes","deleCell","matchCell","console","error","includes","delete","snap","vector","round","createCellData","initOptions","metaData","getMetaData","addCell","componentName","newCellData","length","setLinkingPosition","e","cursorPos","getStageCursor","sourceCellData","targetCellData","getCell","getCellInstance","getCellsData","canvas","prototype","isNodeDataType","t","moveTo","index","oldIndex","default"],"mappings":"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","sourcesContent":["import { __decorate, __assign } from './node_modules/tslib/tslib.es6.js';\nimport { observable, action, makeObservable } from 'mobx';\nimport { remove, isRectsInterSect, findIndex, arrayMove } from './utils/util.js';\nimport { color } from './theme/style.js';\nimport './node_modules/lodash/lodash.js';\nimport { l as lodash } from './_virtual/lodash.js';\nimport v4 from './packages/flow/node_modules/uuid/dist/esm-browser/v4.js';\n\nvar FlowModel = /** @class */ (function () {\n    function FlowModel(eventSender) {\n        var _this = this;\n        this.setEventSender = function (eventSender) {\n            _this.eventBus.sender = eventSender;\n        };\n        this.setCellsDataMap = function () {\n            _this.canvasData.cells.forEach(function (cellData) {\n                _this.setCellDataMap(cellData);\n            });\n        };\n        this.extra = {};\n        this._width = 1000;\n        this._height = 600;\n        this.width = function (width) {\n            if (lodash.exports.isUndefined(width))\n                return _this._width;\n            else {\n                _this._width = width;\n                return width;\n            }\n        };\n        this.height = function (height) {\n            if (lodash.exports.isUndefined(height))\n                return _this._height;\n            else {\n                _this._height = height;\n                return height;\n            }\n        };\n        this.setSize = function (width, height) {\n            _this._width = width;\n            _this._height = height;\n        };\n        this.grid = 1;\n        this.setGrid = function (grid) {\n            _this.grid = grid;\n        };\n        this.refs = {\n            stageRef: undefined,\n        };\n        this.hotKey = {\n            RightMouseDown: false,\n            LeftMouseDown: false,\n            Space: false,\n        };\n        this.setHotKey = function (key, value) {\n            _this.hotKey[key] = value;\n        };\n        this.linkEdge = \"Edge\";\n        this.setLinkEdge = function (name) {\n            _this.linkEdge = name;\n        };\n        this.getLinkingPort = function () {\n            return _this.buffer.link.source;\n        };\n        this.clearPortEdge = function (edgeId) {\n            var edgeData = _this.getCellData(edgeId);\n            var sourcePort = _this.getCellData(edgeData.source);\n            var targetPort = _this.getCellData(edgeData.target);\n            sourcePort.edges && remove(sourcePort.edges, edgeId);\n            targetPort.edges && remove(targetPort.edges, edgeId);\n        };\n        // 一些中间状态，比如连线中的开始节点的暂存，不应该让外部感知\n        this.buffer = {\n            rightClickPanel: {\n                visible: false,\n            },\n            drag: {\n                movement: {\n                    x: 0,\n                    y: 0,\n                },\n                start: {\n                    x: 0,\n                    y: 0,\n                },\n            },\n            isWheeling: false,\n            select: {\n                isSelecting: false,\n                start: { x: 0, y: 0 },\n                end: { x: 0, y: 0 },\n            },\n            link: {\n                // 只是为了统一渲染，加$state\n                $state: {\n                    isSelect: false,\n                    isLinking: true,\n                },\n                edge: undefined,\n                source: undefined,\n                target: {\n                    x: 0,\n                    y: 0,\n                },\n            },\n        };\n        this.setMultiSelect = function (select, onlySetPosition) {\n            if (onlySetPosition === void 0) { onlySetPosition = false; }\n            var bufferSelect = _this.buffer.select;\n            Object.assign(bufferSelect, select);\n            var right = Math.max(bufferSelect.start.x, bufferSelect.end.x);\n            var x = Math.min(bufferSelect.start.x, bufferSelect.end.x);\n            var y = Math.min(bufferSelect.start.y, bufferSelect.end.y);\n            var bottom = Math.max(bufferSelect.start.y, bufferSelect.end.y);\n            if (onlySetPosition)\n                return;\n            var re = [];\n            _this.cellsMap.forEach(function (cell) {\n                var _a;\n                if (((_a = cell.props.data) === null || _a === void 0 ? void 0 : _a.cellType) === \"node\") {\n                    // 判断矩形是否相交\n                    if (isRectsInterSect({\n                        x: x,\n                        y: y,\n                        width: right - x,\n                        height: bottom - y,\n                    }, _this.getLocalBBox(cell.props.data.id))) {\n                        re.push(cell.props.data.id);\n                    }\n                }\n            });\n            _this.setSelectedCells(re);\n        };\n        this.clearLinkBuffer = function () {\n            Object.assign(_this.buffer.link, {\n                edge: undefined,\n                source: undefined,\n                target: {\n                    x: 0,\n                    y: 0,\n                },\n            });\n        };\n        // 全局颜色，可以由用户自定义\n        this.color = color;\n        // cell的<id, 实例>map，方便用id获取到组件实例\n        this.cellsMap = new Map();\n        // cellData的<id, cellData>map，用来修改受控数据\n        this.cellsDataMap = new Map();\n        // 注册节点到model，方便动态引用\n        this.componentsMap = new Map();\n        this.regist = function (name, component) {\n            _this.componentsMap.set(name, component);\n        };\n        this.eventBus = {\n            sender: undefined,\n            receiver: undefined,\n        };\n        // 选中的cell\n        this.selectCells = [];\n        this.setSelectedCells = function (ids, ifReplace) {\n            if (ifReplace === void 0) { ifReplace = true; }\n            if (ifReplace) {\n                _this.selectCells = ids;\n            }\n            else {\n                _this.selectCells = lodash.exports.union(_this.selectCells, ids);\n            }\n        };\n        this.canvasData = {\n            scale: 1,\n            x: 0,\n            y: 0,\n            cells: [],\n        };\n        this.clearSelect = function () {\n            _this.selectCells = [];\n        };\n        this.sendEvent = function (data) {\n            var _a, _b;\n            (_b = (_a = _this.eventBus).sender) === null || _b === void 0 ? void 0 : _b.call(_a, data);\n        };\n        this.setStageScale = function (scale) {\n            _this.canvasData.scale = scale;\n        };\n        this.setStagePosition = function (x, y) {\n            _this.canvasData.x = x;\n            _this.canvasData.y = y;\n        };\n        this.insertRuntimeState = function (cellData) {\n            cellData.$state = {\n                isSelect: false,\n                isLinking: false,\n            };\n        };\n        this.getLocalBBox = function (id) {\n            var instanceBounds = _this.cellsMap\n                .get(id)\n                .wrapperRef.current.getLocalBounds();\n            return {\n                x: instanceBounds.center[0] - instanceBounds.halfExtents[0],\n                y: instanceBounds.center[1] - instanceBounds.halfExtents[1],\n                width: instanceBounds.halfExtents[0] * 2,\n                height: instanceBounds.halfExtents[1] * 2,\n            };\n        };\n        this.setCanvasData = function (canvasData) {\n            canvasData.cells.forEach(function (cellData) {\n                _this.insertRuntimeState(cellData);\n            });\n            _this.canvasData = canvasData;\n            // 这里考虑到react会复用实例，所以不能简单地清除cellsMap\n            // this.cellsDataMap.clear();\n            // this.cellsMap.clear();\n            _this.setCellsDataMap();\n        };\n        this.setCellId = function (data) {\n            data.id = v4();\n        };\n        this.setCellData = function (id, data) {\n            var cellData = _this.getCellData(id);\n            _this.sendEvent({\n                type: \"data:change\",\n            });\n            lodash.exports.merge(cellData, data);\n        };\n        /**\n         * @description 获取某个node连接的所有edge\n         */\n        this.getNodeEdges = function (nodeId) {\n            var re = [];\n            var nodeData = _this.getCellData(nodeId);\n            if (nodeData.ports)\n                nodeData.ports.forEach(function (port) {\n                    if (port.edges) {\n                        port.edges.forEach(function (edgeId) {\n                            re.push(edgeId);\n                        });\n                    }\n                });\n            return re;\n        };\n        /**\n         * @description 获取某个port连接的所有port\n         */\n        this.getPortLinkPorts = function (portId) {\n            var _a;\n            var re = [];\n            var portData = _this.getCellData(portId);\n            (_a = portData.edges) === null || _a === void 0 ? void 0 : _a.forEach(function (edgeId) {\n                var edgeData = _this.getCellData(edgeId);\n                var sourcePort = _this.getCellData(edgeData.source);\n                var targetPort = _this.getCellData(edgeData.target);\n                re.push.apply(re, lodash.exports.without(lodash.exports.union([sourcePort.id], [targetPort.id]), portId));\n            });\n            return re;\n        };\n        /**\n         * @description 获取某个port连接的所有node\n         */\n        this.getPortLinkNodes = function (portId) {\n            var _a;\n            var re = [];\n            var portData = _this.getCellData(portId);\n            (_a = portData.edges) === null || _a === void 0 ? void 0 : _a.forEach(function (edgeId) {\n                var edgeData = _this.getCellData(edgeId);\n                var sourcePort = _this.getCellData(edgeData.source);\n                var targetPort = _this.getCellData(edgeData.target);\n                re.push.apply(re, lodash.exports.without(lodash.exports.union([sourcePort.host], [targetPort.host]), portData.host));\n            });\n            return re;\n        };\n        /**\n         * @description 获取某个node连接的所有port\n         */\n        this.getLinkPorts = function (nodeId) {\n            var re = [];\n            var nodeData = _this.getCellData(nodeId);\n            if (nodeData.ports)\n                nodeData.ports.forEach(function (portData) {\n                    re.push.apply(re, _this.getPortLinkPorts(portData.id));\n                });\n            return re;\n        };\n        /**\n         * @description 获取某个node连接的所有node\n         */\n        this.getLinkNodes = function (nodeId) {\n            var re = [];\n            var nodeData = _this.getCellData(nodeId);\n            if (nodeData.ports)\n                nodeData.ports.forEach(function (portData) {\n                    re.push.apply(re, _this.getPortLinkNodes(portData.id));\n                });\n            return re;\n        };\n        this.deleCell = function (id) {\n            var matchCell = _this.getCellData(id);\n            if (!matchCell) {\n                console.error(\"[flow-infra] can not find match dele Cell\");\n                return;\n            }\n            if (matchCell.cellType === \"edge\")\n                _this.clearPortEdge(matchCell.id);\n            _this.selectCells.includes(id) && remove(_this.selectCells, id);\n            remove(_this.canvasData.cells, matchCell);\n            _this.cellsMap.delete(id);\n            _this.cellsDataMap.delete(id);\n            _this.sendEvent({\n                type: \"data:change\",\n            });\n            return matchCell.id;\n        };\n        this.snap = function (vector) {\n            var grid = _this.grid;\n            return {\n                x: Math.round(vector.x / grid) * grid,\n                y: Math.round(vector.y / grid) * grid,\n            };\n        };\n        // 自动布局，用自动布局的三方库对每一个节点的x，y进行计算\n        // @action setAutoLayout = (layoutOption) => {};\n        this.createCellData = function (component, initOptions) {\n            var id = v4();\n            var metaData = Object.assign(_this.componentsMap.get(component).getMetaData(), {\n                component: component,\n            });\n            _this.insertRuntimeState(metaData);\n            return Object.assign(metaData, __assign({ id: id }, initOptions));\n        };\n        this.addCell = function (componentName, initOptions) {\n            var newCellData = _this.createCellData(componentName, initOptions);\n            if (newCellData.ports) {\n                newCellData.ports.forEach(function (port) {\n                    port.host = newCellData.id;\n                    port.cellType = \"port\";\n                    if (!port.id)\n                        port.id = v4();\n                });\n            }\n            _this.canvasData.cells.push(newCellData);\n            _this.setCellDataMap(_this.canvasData.cells[_this.canvasData.cells.length - 1]);\n            // console.log(\n            //   newCellData,\n            //   this.canvasData.cells[this.canvasData.cells.length - 1]\n            // ); // 两者不是一个对象，后者是proxy\n            _this.sendEvent({\n                type: \"data:change\",\n            });\n            return newCellData.id;\n        };\n        this.setLinkingPosition = function (e) {\n            var cursorPos = _this.getStageCursor(e);\n            _this.buffer.link.target.x = cursorPos.x;\n            _this.buffer.link.target.y = cursorPos.y;\n        };\n        this.link = function (source, target) {\n            var sourceCellData = _this.getCellData(source);\n            var targetCellData = _this.getCellData(target);\n            var edgeId = _this.addCell(_this.linkEdge, {\n                source: source,\n                target: target,\n            });\n            if (sourceCellData.edges) {\n                sourceCellData.edges.push(edgeId);\n            }\n            else\n                sourceCellData.edges = [edgeId];\n            if (targetCellData.edges) {\n                targetCellData.edges.push(edgeId);\n            }\n            else\n                targetCellData.edges = [edgeId];\n            _this.sendEvent({\n                type: \"link\",\n                data: {\n                    source: source,\n                    target: target,\n                },\n            });\n            _this.clearLinkBuffer();\n        };\n        this.scale = function (scale) {\n            if (lodash.exports.isUndefined(scale))\n                return _this.canvasData.scale;\n            else {\n                _this.setStageScale(scale);\n                return scale;\n            }\n        };\n        this.getCell = function (id) {\n            return _this.cellsMap.get(id);\n        };\n        this.getCellData = function (id) {\n            return _this.cellsDataMap.get(id);\n        };\n        this.getCellInstance = function (id) {\n            return _this.cellsMap.get(id);\n        };\n        this.getCellsData = function () {\n            return _this.canvasData.cells;\n        };\n        /**\n         * @description 获取当前鼠标的[画布坐标]\n         */\n        this.getStageCursor = function (e) {\n            return {\n                x: (e.canvas.x - _this.x()) / _this.scale(),\n                y: (e.canvas.y - _this.y()) / _this.scale(),\n            };\n        };\n        makeObservable(this);\n        if (eventSender)\n            this.eventBus.sender = eventSender;\n    }\n    FlowModel.prototype.setCellDataMap = function (cellData) {\n        var _this = this;\n        this.cellsDataMap.set(cellData.id, cellData);\n        function isNodeDataType(t) {\n            return t.cellType === \"node\";\n        }\n        if (isNodeDataType(cellData)) {\n            if (cellData.ports) {\n                cellData.ports.forEach(function (portData) {\n                    _this.setCellDataMap(portData);\n                });\n            }\n        }\n    };\n    // @action\n    FlowModel.prototype.x = function (x) {\n        if (lodash.exports.isUndefined(x))\n            return this.canvasData.x;\n        else {\n            this.setStagePosition(x, this.canvasData.y);\n            return x;\n        }\n    };\n    // @action\n    FlowModel.prototype.y = function (y) {\n        if (lodash.exports.isUndefined(y))\n            return this.canvasData.y;\n        else {\n            this.setStagePosition(this.canvasData.x, y);\n            return y;\n        }\n    };\n    FlowModel.prototype.moveTo = function (id, index) {\n        var oldIndex = findIndex(this.canvasData.cells, this.getCellData(id));\n        arrayMove(this.canvasData.cells, oldIndex, index);\n    };\n    __decorate([\n        observable\n    ], FlowModel.prototype, \"_width\", void 0);\n    __decorate([\n        observable\n    ], FlowModel.prototype, \"_height\", void 0);\n    __decorate([\n        action\n    ], FlowModel.prototype, \"setSize\", void 0);\n    __decorate([\n        observable\n    ], FlowModel.prototype, \"grid\", void 0);\n    __decorate([\n        action\n    ], FlowModel.prototype, \"setGrid\", void 0);\n    __decorate([\n        observable\n    ], FlowModel.prototype, \"hotKey\", void 0);\n    __decorate([\n        action\n    ], FlowModel.prototype, \"setHotKey\", void 0);\n    __decorate([\n        action\n    ], FlowModel.prototype, \"setLinkEdge\", void 0);\n    __decorate([\n        action\n    ], FlowModel.prototype, \"clearPortEdge\", void 0);\n    __decorate([\n        observable\n    ], FlowModel.prototype, \"buffer\", void 0);\n    __decorate([\n        action\n    ], FlowModel.prototype, \"setMultiSelect\", void 0);\n    __decorate([\n        action\n    ], FlowModel.prototype, \"clearLinkBuffer\", void 0);\n    __decorate([\n        observable\n    ], FlowModel.prototype, \"color\", void 0);\n    __decorate([\n        observable\n    ], FlowModel.prototype, \"selectCells\", void 0);\n    __decorate([\n        action\n    ], FlowModel.prototype, \"setSelectedCells\", void 0);\n    __decorate([\n        observable\n    ], FlowModel.prototype, \"canvasData\", void 0);\n    __decorate([\n        action\n    ], FlowModel.prototype, \"clearSelect\", void 0);\n    __decorate([\n        action\n    ], FlowModel.prototype, \"setStageScale\", void 0);\n    __decorate([\n        action\n    ], FlowModel.prototype, \"setStagePosition\", void 0);\n    __decorate([\n        action\n    ], FlowModel.prototype, \"setCanvasData\", void 0);\n    __decorate([\n        action\n    ], FlowModel.prototype, \"setCellId\", void 0);\n    __decorate([\n        action\n    ], FlowModel.prototype, \"setCellData\", void 0);\n    __decorate([\n        action\n    ], FlowModel.prototype, \"deleCell\", void 0);\n    __decorate([\n        action\n    ], FlowModel.prototype, \"addCell\", void 0);\n    __decorate([\n        action\n    ], FlowModel.prototype, \"setLinkingPosition\", void 0);\n    __decorate([\n        action\n    ], FlowModel.prototype, \"link\", void 0);\n    __decorate([\n        action\n    ], FlowModel.prototype, \"moveTo\", null);\n    return FlowModel;\n}());\n\nexport { FlowModel, FlowModel as default };\n"]},"metadata":{},"sourceType":"module"}