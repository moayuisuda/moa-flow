{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { CSSColorValue } from './CSSColorValue';\n/**\n * The CSSRGB class represents the CSS rgb()/rgba() functions.\n *\n * @see https://drafts.css-houdini.org/css-typed-om-1/#cssrgb\n */\n\nvar CSSRGB =\n/** @class */\nfunction (_super) {\n  __extends(CSSRGB, _super);\n\n  function CSSRGB(r, g, b, alpha,\n  /**\n   * 'transparent' & 'none' has the same rgba data\n   */\n  isNone) {\n    if (alpha === void 0) {\n      alpha = 1;\n    }\n\n    if (isNone === void 0) {\n      isNone = false;\n    }\n\n    var _this = _super.call(this, 'rgb') || this;\n\n    _this.r = r;\n    _this.g = g;\n    _this.b = b;\n    _this.alpha = alpha;\n    _this.isNone = isNone;\n    return _this;\n  }\n\n  CSSRGB.prototype.clone = function () {\n    return new CSSRGB(this.r, this.g, this.b, this.alpha);\n  };\n\n  CSSRGB.prototype.buildCSSText = function (n, p, result) {\n    return result + \"rgba(\".concat(this.r, \",\").concat(this.g, \",\").concat(this.b, \",\").concat(this.alpha, \")\");\n  };\n\n  return CSSRGB;\n}(CSSColorValue);\n\nexport { CSSRGB };","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/@antv/g/es/css/cssom/CSSRGB.js"],"names":["__extends","CSSColorValue","CSSRGB","_super","r","g","b","alpha","isNone","_this","call","prototype","clone","buildCSSText","n","p","result","concat"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,MAAM;AACV;AACA,UAAUC,MAAV,EAAkB;AAChBH,EAAAA,SAAS,CAACE,MAAD,EAASC,MAAT,CAAT;;AAEA,WAASD,MAAT,CAAgBE,CAAhB,EAAmBC,CAAnB,EAAsBC,CAAtB,EAAyBC,KAAzB;AACA;AACF;AACA;AACEC,EAAAA,MAJA,EAIQ;AACN,QAAID,KAAK,KAAK,KAAK,CAAnB,EAAsB;AACpBA,MAAAA,KAAK,GAAG,CAAR;AACD;;AAED,QAAIC,MAAM,KAAK,KAAK,CAApB,EAAuB;AACrBA,MAAAA,MAAM,GAAG,KAAT;AACD;;AAED,QAAIC,KAAK,GAAGN,MAAM,CAACO,IAAP,CAAY,IAAZ,EAAkB,KAAlB,KAA4B,IAAxC;;AAEAD,IAAAA,KAAK,CAACL,CAAN,GAAUA,CAAV;AACAK,IAAAA,KAAK,CAACJ,CAAN,GAAUA,CAAV;AACAI,IAAAA,KAAK,CAACH,CAAN,GAAUA,CAAV;AACAG,IAAAA,KAAK,CAACF,KAAN,GAAcA,KAAd;AACAE,IAAAA,KAAK,CAACD,MAAN,GAAeA,MAAf;AACA,WAAOC,KAAP;AACD;;AAEDP,EAAAA,MAAM,CAACS,SAAP,CAAiBC,KAAjB,GAAyB,YAAY;AACnC,WAAO,IAAIV,MAAJ,CAAW,KAAKE,CAAhB,EAAmB,KAAKC,CAAxB,EAA2B,KAAKC,CAAhC,EAAmC,KAAKC,KAAxC,CAAP;AACD,GAFD;;AAIAL,EAAAA,MAAM,CAACS,SAAP,CAAiBE,YAAjB,GAAgC,UAAUC,CAAV,EAAaC,CAAb,EAAgBC,MAAhB,EAAwB;AACtD,WAAOA,MAAM,GAAG,QAAQC,MAAR,CAAe,KAAKb,CAApB,EAAuB,GAAvB,EAA4Ba,MAA5B,CAAmC,KAAKZ,CAAxC,EAA2C,GAA3C,EAAgDY,MAAhD,CAAuD,KAAKX,CAA5D,EAA+D,GAA/D,EAAoEW,MAApE,CAA2E,KAAKV,KAAhF,EAAuF,GAAvF,CAAhB;AACD,GAFD;;AAIA,SAAOL,MAAP;AACD,CAnCD,CAmCED,aAnCF,CAFA;;AAuCA,SAASC,MAAT","sourcesContent":["import { __extends } from \"tslib\";\nimport { CSSColorValue } from './CSSColorValue';\n/**\n * The CSSRGB class represents the CSS rgb()/rgba() functions.\n *\n * @see https://drafts.css-houdini.org/css-typed-om-1/#cssrgb\n */\n\nvar CSSRGB =\n/** @class */\nfunction (_super) {\n  __extends(CSSRGB, _super);\n\n  function CSSRGB(r, g, b, alpha,\n  /**\n   * 'transparent' & 'none' has the same rgba data\n   */\n  isNone) {\n    if (alpha === void 0) {\n      alpha = 1;\n    }\n\n    if (isNone === void 0) {\n      isNone = false;\n    }\n\n    var _this = _super.call(this, 'rgb') || this;\n\n    _this.r = r;\n    _this.g = g;\n    _this.b = b;\n    _this.alpha = alpha;\n    _this.isNone = isNone;\n    return _this;\n  }\n\n  CSSRGB.prototype.clone = function () {\n    return new CSSRGB(this.r, this.g, this.b, this.alpha);\n  };\n\n  CSSRGB.prototype.buildCSSText = function (n, p, result) {\n    return result + \"rgba(\".concat(this.r, \",\").concat(this.g, \",\").concat(this.b, \",\").concat(this.alpha, \")\");\n  };\n\n  return CSSRGB;\n}(CSSColorValue);\n\nexport { CSSRGB };"]},"metadata":{},"sourceType":"module"}