{"ast":null,"code":"var _jsxFileName = \"/Users/dennis.zhang/Desktop/\\u5176\\u5B83\\u4EE3\\u7801\\u5E93/moa-flow/examples/playground/src/BizNode.tsx\";\nimport React from \"react\";\nimport { Node, Graph, Interactor, Portal } from \"@ali/flow-infra-g\";\nimport { message, Input } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Rect,\n  Text,\n  Circle,\n  HTML\n} = Graph;\nconst {\n  Port\n} = Interactor;\n\nclass BizNode extends Node {\n  static getBounds(cellData) {\n    return {\n      x: cellData.x,\n      y: cellData.y,\n      width: 200,\n      height: 100\n    };\n  }\n\n  constructor(props, context) {\n    super(props, context);\n\n    this.getStroke = () => {\n      const isSelect = this.isSelect();\n      const {\n        color\n      } = this.context;\n\n      if (isSelect) {\n        return {\n          stroke: color.active,\n          lineWidth: 3\n        };\n      } else return {\n        stroke: undefined,\n        lineWidth: 0\n      };\n    };\n\n    this.state = {\n      modalVisible: true\n    };\n  }\n\n  getLinkData() {\n    const linkNodes = this.context.getLinkNodes(this.props.data.id);\n    if (linkNodes) return JSON.stringify(this.context.getCellData(linkNodes[0]));\n    this.context;\n  }\n\n  content() {\n    const {\n      color\n    } = this.context;\n    const {\n      data\n    } = this.props;\n    const {\n      label,\n      ports\n    } = data;\n    const {\n      width,\n      height\n    } = BizNode.getBounds(data);\n    const inPorts = (ports === null || ports === void 0 ? void 0 : ports.filter(portData => portData.portType === \"in\")) || [];\n    const outPorts = (ports === null || ports === void 0 ? void 0 : ports.filter(portData => portData.portType === \"out\")) || [];\n    return /*#__PURE__*/_jsxDEV(Interactor, { ...this.props.data,\n      children: [/*#__PURE__*/_jsxDEV(Rect, {\n        width: width,\n        height: height,\n        fill: \"white\",\n        shadowColor: \"rgba(0,0,0,0.1)\",\n        shadowBlur: 10,\n        radius: 10,\n        ...this.getStroke()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Rect, {\n        width: width,\n        height: 40,\n        fill: color.deepGrey,\n        radius: 10\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        x: 10,\n        y: 10,\n        fontWeight: \"bold\",\n        textBaseline: \"top\",\n        text: label || \"\",\n        fill: \"white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        text: this.getLinkData() || ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Portal, {\n        y: 100,\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          onInput: e => {\n            this.setData({\n              label: e.target.value\n            });\n          },\n          onFocus: e => this.context.extra.alert('hello'),\n          style: {\n            width: 200\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), inPorts.map(portData => /*#__PURE__*/_jsxDEV(Port, {\n        y: 70,\n        data: portData,\n        anchor: {\n          x: data.x - 20,\n          y: data.y + 70\n        },\n        children: /*#__PURE__*/_jsxDEV(Circle, {\n          lineWidth: 4,\n          stroke: color.primary,\n          fill: \"white\",\n          r: 10\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)\n      }, portData.label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)), outPorts.map(portData => /*#__PURE__*/_jsxDEV(Port, {\n        x: width,\n        y: 70,\n        data: portData,\n        anchor: {\n          x: data.x + width + 20,\n          y: data.y + 70\n        },\n        link: (target, source) => {\n          message.info(JSON.stringify(target));\n          return true;\n        },\n        children: /*#__PURE__*/_jsxDEV(Circle, {\n          lineWidth: 4,\n          stroke: color.primary,\n          fill: \"white\",\n          r: 10\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this)\n      }, portData.label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nBizNode.metaData = {\n  label: \"\"\n};\nexport default BizNode;","map":null,"metadata":{},"sourceType":"module"}