{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { CSSMathValue } from './CSSMathValue';\nexport function typeCheck(values, op, error) {\n  error = false;\n  var final_type = values[0].type_;\n\n  for (var i = 1; i < values.length; i++) {\n    final_type = op(final_type, values[i].type_, error);\n    if (error) return final_type;\n  }\n\n  return final_type;\n} // Represents an arithmetic operation with one or more CSSNumericValues.\n\nvar CSSMathVariadic =\n/** @class */\nfunction (_super) {\n  __extends(CSSMathVariadic, _super);\n\n  function CSSMathVariadic(values, type) {\n    var _this = _super.call(this, type) || this;\n\n    _this.values = values;\n    return _this;\n  }\n\n  CSSMathVariadic.prototype.numericValues = function () {\n    return this.values;\n  };\n\n  CSSMathVariadic.prototype.equals = function (other) {\n    if (this.getType() !== other.getType()) {\n      return false;\n    }\n\n    return this.values.every(function (value, i) {\n      return value.equals(other.values[i]);\n    });\n  };\n\n  return CSSMathVariadic;\n}(CSSMathValue);\n\nexport { CSSMathVariadic };","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/@antv/g/es/css/cssom/CSSMathVariadic.js"],"names":["__extends","CSSMathValue","typeCheck","values","op","error","final_type","type_","i","length","CSSMathVariadic","_super","type","_this","call","prototype","numericValues","equals","other","getType","every","value"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,OAAO,SAASC,SAAT,CAAmBC,MAAnB,EAA2BC,EAA3B,EAA+BC,KAA/B,EAAsC;AAC3CA,EAAAA,KAAK,GAAG,KAAR;AACA,MAAIC,UAAU,GAAGH,MAAM,CAAC,CAAD,CAAN,CAAUI,KAA3B;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,MAAM,CAACM,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtCF,IAAAA,UAAU,GAAGF,EAAE,CAACE,UAAD,EAAaH,MAAM,CAACK,CAAD,CAAN,CAAUD,KAAvB,EAA8BF,KAA9B,CAAf;AACA,QAAIA,KAAJ,EAAW,OAAOC,UAAP;AACZ;;AAED,SAAOA,UAAP;AACD,C,CAAC;;AAEF,IAAII,eAAe;AACnB;AACA,UAAUC,MAAV,EAAkB;AAChBX,EAAAA,SAAS,CAACU,eAAD,EAAkBC,MAAlB,CAAT;;AAEA,WAASD,eAAT,CAAyBP,MAAzB,EAAiCS,IAAjC,EAAuC;AACrC,QAAIC,KAAK,GAAGF,MAAM,CAACG,IAAP,CAAY,IAAZ,EAAkBF,IAAlB,KAA2B,IAAvC;;AAEAC,IAAAA,KAAK,CAACV,MAAN,GAAeA,MAAf;AACA,WAAOU,KAAP;AACD;;AAEDH,EAAAA,eAAe,CAACK,SAAhB,CAA0BC,aAA1B,GAA0C,YAAY;AACpD,WAAO,KAAKb,MAAZ;AACD,GAFD;;AAIAO,EAAAA,eAAe,CAACK,SAAhB,CAA0BE,MAA1B,GAAmC,UAAUC,KAAV,EAAiB;AAClD,QAAI,KAAKC,OAAL,OAAmBD,KAAK,CAACC,OAAN,EAAvB,EAAwC;AACtC,aAAO,KAAP;AACD;;AAED,WAAO,KAAKhB,MAAL,CAAYiB,KAAZ,CAAkB,UAAUC,KAAV,EAAiBb,CAAjB,EAAoB;AAC3C,aAAOa,KAAK,CAACJ,MAAN,CAAaC,KAAK,CAACf,MAAN,CAAaK,CAAb,CAAb,CAAP;AACD,KAFM,CAAP;AAGD,GARD;;AAUA,SAAOE,eAAP;AACD,CAzBD,CAyBET,YAzBF,CAFA;;AA6BA,SAASS,eAAT","sourcesContent":["import { __extends } from \"tslib\";\nimport { CSSMathValue } from './CSSMathValue';\nexport function typeCheck(values, op, error) {\n  error = false;\n  var final_type = values[0].type_;\n\n  for (var i = 1; i < values.length; i++) {\n    final_type = op(final_type, values[i].type_, error);\n    if (error) return final_type;\n  }\n\n  return final_type;\n} // Represents an arithmetic operation with one or more CSSNumericValues.\n\nvar CSSMathVariadic =\n/** @class */\nfunction (_super) {\n  __extends(CSSMathVariadic, _super);\n\n  function CSSMathVariadic(values, type) {\n    var _this = _super.call(this, type) || this;\n\n    _this.values = values;\n    return _this;\n  }\n\n  CSSMathVariadic.prototype.numericValues = function () {\n    return this.values;\n  };\n\n  CSSMathVariadic.prototype.equals = function (other) {\n    if (this.getType() !== other.getType()) {\n      return false;\n    }\n\n    return this.values.every(function (value, i) {\n      return value.equals(other.values[i]);\n    });\n  };\n\n  return CSSMathVariadic;\n}(CSSMathValue);\n\nexport { CSSMathVariadic };"]},"metadata":{},"sourceType":"module"}