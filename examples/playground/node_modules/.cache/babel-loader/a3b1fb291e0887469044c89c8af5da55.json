{"ast":null,"code":"import { inPolyline } from './utils/math';\nexport function isPointInPath(displayObject, position) {\n  var _a = displayObject.parsedStyle,\n      stroke = _a.stroke,\n      lineWidth = _a.lineWidth,\n      points = _a.points,\n      _b = _a.defX,\n      x = _b === void 0 ? 0 : _b,\n      _c = _a.defY,\n      y = _c === void 0 ? 0 : _c,\n      clipPathTargets = _a.clipPathTargets;\n  var isClipPath = !!(clipPathTargets === null || clipPathTargets === void 0 ? void 0 : clipPathTargets.length);\n  var hasStroke = displayObject.attributes.stroke !== 'none' && !!stroke;\n\n  if (!hasStroke && !isClipPath || !lineWidth) {\n    return false;\n  }\n\n  return inPolyline(points.points, lineWidth.value, position.x + x, position.y + y, false);\n}","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/@antv/g-plugin-canvas-picker/es/Polyline.js"],"names":["inPolyline","isPointInPath","displayObject","position","_a","parsedStyle","stroke","lineWidth","points","_b","defX","x","_c","defY","y","clipPathTargets","isClipPath","length","hasStroke","attributes","value"],"mappings":"AAAA,SAASA,UAAT,QAA2B,cAA3B;AACA,OAAO,SAASC,aAAT,CAAuBC,aAAvB,EAAsCC,QAAtC,EAAgD;AACrD,MAAIC,EAAE,GAAGF,aAAa,CAACG,WAAvB;AAAA,MACIC,MAAM,GAAGF,EAAE,CAACE,MADhB;AAAA,MAEIC,SAAS,GAAGH,EAAE,CAACG,SAFnB;AAAA,MAGIC,MAAM,GAAGJ,EAAE,CAACI,MAHhB;AAAA,MAIIC,EAAE,GAAGL,EAAE,CAACM,IAJZ;AAAA,MAKIC,CAAC,GAAGF,EAAE,KAAK,KAAK,CAAZ,GAAgB,CAAhB,GAAoBA,EAL5B;AAAA,MAMIG,EAAE,GAAGR,EAAE,CAACS,IANZ;AAAA,MAOIC,CAAC,GAAGF,EAAE,KAAK,KAAK,CAAZ,GAAgB,CAAhB,GAAoBA,EAP5B;AAAA,MAQIG,eAAe,GAAGX,EAAE,CAACW,eARzB;AASA,MAAIC,UAAU,GAAG,CAAC,EAAED,eAAe,KAAK,IAApB,IAA4BA,eAAe,KAAK,KAAK,CAArD,GAAyD,KAAK,CAA9D,GAAkEA,eAAe,CAACE,MAApF,CAAlB;AACA,MAAIC,SAAS,GAAGhB,aAAa,CAACiB,UAAd,CAAyBb,MAAzB,KAAoC,MAApC,IAA8C,CAAC,CAACA,MAAhE;;AAEA,MAAI,CAACY,SAAD,IAAc,CAACF,UAAf,IAA6B,CAACT,SAAlC,EAA6C;AAC3C,WAAO,KAAP;AACD;;AAED,SAAOP,UAAU,CAACQ,MAAM,CAACA,MAAR,EAAgBD,SAAS,CAACa,KAA1B,EAAiCjB,QAAQ,CAACQ,CAAT,GAAaA,CAA9C,EAAiDR,QAAQ,CAACW,CAAT,GAAaA,CAA9D,EAAiE,KAAjE,CAAjB;AACD","sourcesContent":["import { inPolyline } from './utils/math';\nexport function isPointInPath(displayObject, position) {\n  var _a = displayObject.parsedStyle,\n      stroke = _a.stroke,\n      lineWidth = _a.lineWidth,\n      points = _a.points,\n      _b = _a.defX,\n      x = _b === void 0 ? 0 : _b,\n      _c = _a.defY,\n      y = _c === void 0 ? 0 : _c,\n      clipPathTargets = _a.clipPathTargets;\n  var isClipPath = !!(clipPathTargets === null || clipPathTargets === void 0 ? void 0 : clipPathTargets.length);\n  var hasStroke = displayObject.attributes.stroke !== 'none' && !!stroke;\n\n  if (!hasStroke && !isClipPath || !lineWidth) {\n    return false;\n  }\n\n  return inPolyline(points.points, lineWidth.value, position.x + x, position.y + y, false);\n}"]},"metadata":{},"sourceType":"module"}