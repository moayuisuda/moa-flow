{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (_isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nfunction _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !_isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return _construct(Class, arguments, _getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return _setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}\n/* eslint no-console:0 */\n\n\nvar formatRegExp = /%[sdj%]/g;\n\nvar warning = function warning() {}; // don't print warning message when in production env or node runtime\n\n\nif (typeof process !== 'undefined' && process.env && process.env.NODE_ENV !== 'production' && typeof window !== 'undefined' && typeof document !== 'undefined') {\n  warning = function warning(type, errors) {\n    if (typeof console !== 'undefined' && console.warn && typeof ASYNC_VALIDATOR_NO_WARNING === 'undefined') {\n      if (errors.every(function (e) {\n        return typeof e === 'string';\n      })) {\n        console.warn(type, errors);\n      }\n    }\n  };\n}\n\nfunction convertFieldsError(errors) {\n  if (!errors || !errors.length) return null;\n  var fields = {};\n  errors.forEach(function (error) {\n    var field = error.field;\n    fields[field] = fields[field] || [];\n    fields[field].push(error);\n  });\n  return fields;\n}\n\nfunction format(template) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  var i = 0;\n  var len = args.length;\n\n  if (typeof template === 'function') {\n    return template.apply(null, args);\n  }\n\n  if (typeof template === 'string') {\n    var str = template.replace(formatRegExp, function (x) {\n      if (x === '%%') {\n        return '%';\n      }\n\n      if (i >= len) {\n        return x;\n      }\n\n      switch (x) {\n        case '%s':\n          return String(args[i++]);\n\n        case '%d':\n          return Number(args[i++]);\n\n        case '%j':\n          try {\n            return JSON.stringify(args[i++]);\n          } catch (_) {\n            return '[Circular]';\n          }\n\n          break;\n\n        default:\n          return x;\n      }\n    });\n    return str;\n  }\n\n  return template;\n}\n\nfunction isNativeStringType(type) {\n  return type === 'string' || type === 'url' || type === 'hex' || type === 'email' || type === 'date' || type === 'pattern';\n}\n\nfunction isEmptyValue(value, type) {\n  if (value === undefined || value === null) {\n    return true;\n  }\n\n  if (type === 'array' && Array.isArray(value) && !value.length) {\n    return true;\n  }\n\n  if (isNativeStringType(type) && typeof value === 'string' && !value) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction asyncParallelArray(arr, func, callback) {\n  var results = [];\n  var total = 0;\n  var arrLength = arr.length;\n\n  function count(errors) {\n    results.push.apply(results, errors || []);\n    total++;\n\n    if (total === arrLength) {\n      callback(results);\n    }\n  }\n\n  arr.forEach(function (a) {\n    func(a, count);\n  });\n}\n\nfunction asyncSerialArray(arr, func, callback) {\n  var index = 0;\n  var arrLength = arr.length;\n\n  function next(errors) {\n    if (errors && errors.length) {\n      callback(errors);\n      return;\n    }\n\n    var original = index;\n    index = index + 1;\n\n    if (original < arrLength) {\n      func(arr[original], next);\n    } else {\n      callback([]);\n    }\n  }\n\n  next([]);\n}\n\nfunction flattenObjArr(objArr) {\n  var ret = [];\n  Object.keys(objArr).forEach(function (k) {\n    ret.push.apply(ret, objArr[k] || []);\n  });\n  return ret;\n}\n\nvar AsyncValidationError = /*#__PURE__*/function (_Error) {\n  _inheritsLoose(AsyncValidationError, _Error);\n\n  function AsyncValidationError(errors, fields) {\n    var _this;\n\n    _this = _Error.call(this, 'Async Validation Error') || this;\n    _this.errors = errors;\n    _this.fields = fields;\n    return _this;\n  }\n\n  return AsyncValidationError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nfunction asyncMap(objArr, option, func, callback, source) {\n  if (option.first) {\n    var _pending = new Promise(function (resolve, reject) {\n      var next = function next(errors) {\n        callback(errors);\n        return errors.length ? reject(new AsyncValidationError(errors, convertFieldsError(errors))) : resolve(source);\n      };\n\n      var flattenArr = flattenObjArr(objArr);\n      asyncSerialArray(flattenArr, func, next);\n    });\n\n    _pending[\"catch\"](function (e) {\n      return e;\n    });\n\n    return _pending;\n  }\n\n  var firstFields = option.firstFields === true ? Object.keys(objArr) : option.firstFields || [];\n  var objArrKeys = Object.keys(objArr);\n  var objArrLength = objArrKeys.length;\n  var total = 0;\n  var results = [];\n  var pending = new Promise(function (resolve, reject) {\n    var next = function next(errors) {\n      results.push.apply(results, errors);\n      total++;\n\n      if (total === objArrLength) {\n        callback(results);\n        return results.length ? reject(new AsyncValidationError(results, convertFieldsError(results))) : resolve(source);\n      }\n    };\n\n    if (!objArrKeys.length) {\n      callback(results);\n      resolve(source);\n    }\n\n    objArrKeys.forEach(function (key) {\n      var arr = objArr[key];\n\n      if (firstFields.indexOf(key) !== -1) {\n        asyncSerialArray(arr, func, next);\n      } else {\n        asyncParallelArray(arr, func, next);\n      }\n    });\n  });\n  pending[\"catch\"](function (e) {\n    return e;\n  });\n  return pending;\n}\n\nfunction isErrorObj(obj) {\n  return !!(obj && obj.message !== undefined);\n}\n\nfunction getValue(value, path) {\n  var v = value;\n\n  for (var i = 0; i < path.length; i++) {\n    if (v == undefined) {\n      return v;\n    }\n\n    v = v[path[i]];\n  }\n\n  return v;\n}\n\nfunction complementError(rule, source) {\n  return function (oe) {\n    var fieldValue;\n\n    if (rule.fullFields) {\n      fieldValue = getValue(source, rule.fullFields);\n    } else {\n      fieldValue = source[oe.field || rule.fullField];\n    }\n\n    if (isErrorObj(oe)) {\n      oe.field = oe.field || rule.fullField;\n      oe.fieldValue = fieldValue;\n      return oe;\n    }\n\n    return {\n      message: typeof oe === 'function' ? oe() : oe,\n      fieldValue: fieldValue,\n      field: oe.field || rule.fullField\n    };\n  };\n}\n\nfunction deepMerge(target, source) {\n  if (source) {\n    for (var s in source) {\n      if (source.hasOwnProperty(s)) {\n        var value = source[s];\n\n        if (typeof value === 'object' && typeof target[s] === 'object') {\n          target[s] = _extends({}, target[s], value);\n        } else {\n          target[s] = value;\n        }\n      }\n    }\n  }\n\n  return target;\n}\n\nvar required$1 = function required(rule, value, source, errors, options, type) {\n  if (rule.required && (!source.hasOwnProperty(rule.field) || isEmptyValue(value, type || rule.type))) {\n    errors.push(format(options.messages.required, rule.fullField));\n  }\n};\n/**\n *  Rule for validating whitespace.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param source The source object being validated.\n *  @param errors An array of errors that this rule may add\n *  validation errors to.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\n\n\nvar whitespace = function whitespace(rule, value, source, errors, options) {\n  if (/^\\s+$/.test(value) || value === '') {\n    errors.push(format(options.messages.whitespace, rule.fullField));\n  }\n};\n/* eslint max-len:0 */\n\n\nvar pattern$2 = {\n  // http://emailregex.com/\n  email: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+\\.)+[a-zA-Z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]{2,}))$/,\n  url: new RegExp(\"^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\\\S+(?::\\\\S*)?@)?(?:(?:(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[0-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]+-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]+-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,})))|localhost)(?::\\\\d{2,5})?(?:(/|\\\\?|#)[^\\\\s]*)?$\", 'i'),\n  hex: /^#?([a-f0-9]{6}|[a-f0-9]{3})$/i\n};\nvar types = {\n  integer: function integer(value) {\n    return types.number(value) && parseInt(value, 10) === value;\n  },\n  \"float\": function float(value) {\n    return types.number(value) && !types.integer(value);\n  },\n  array: function array(value) {\n    return Array.isArray(value);\n  },\n  regexp: function regexp(value) {\n    if (value instanceof RegExp) {\n      return true;\n    }\n\n    try {\n      return !!new RegExp(value);\n    } catch (e) {\n      return false;\n    }\n  },\n  date: function date(value) {\n    return typeof value.getTime === 'function' && typeof value.getMonth === 'function' && typeof value.getYear === 'function' && !isNaN(value.getTime());\n  },\n  number: function number(value) {\n    if (isNaN(value)) {\n      return false;\n    }\n\n    return typeof value === 'number';\n  },\n  object: function object(value) {\n    return typeof value === 'object' && !types.array(value);\n  },\n  method: function method(value) {\n    return typeof value === 'function';\n  },\n  email: function email(value) {\n    return typeof value === 'string' && value.length <= 320 && !!value.match(pattern$2.email);\n  },\n  url: function url(value) {\n    return typeof value === 'string' && value.length <= 2048 && !!value.match(pattern$2.url);\n  },\n  hex: function hex(value) {\n    return typeof value === 'string' && !!value.match(pattern$2.hex);\n  }\n};\n\nvar type$1 = function type(rule, value, source, errors, options) {\n  if (rule.required && value === undefined) {\n    required$1(rule, value, source, errors, options);\n    return;\n  }\n\n  var custom = ['integer', 'float', 'array', 'regexp', 'object', 'method', 'email', 'number', 'date', 'url', 'hex'];\n  var ruleType = rule.type;\n\n  if (custom.indexOf(ruleType) > -1) {\n    if (!types[ruleType](value)) {\n      errors.push(format(options.messages.types[ruleType], rule.fullField, rule.type));\n    } // straight typeof check\n\n  } else if (ruleType && typeof value !== rule.type) {\n    errors.push(format(options.messages.types[ruleType], rule.fullField, rule.type));\n  }\n};\n\nvar range = function range(rule, value, source, errors, options) {\n  var len = typeof rule.len === 'number';\n  var min = typeof rule.min === 'number';\n  var max = typeof rule.max === 'number'; // 正则匹配码点范围从U+010000一直到U+10FFFF的文字（补充平面Supplementary Plane）\n\n  var spRegexp = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n  var val = value;\n  var key = null;\n  var num = typeof value === 'number';\n  var str = typeof value === 'string';\n  var arr = Array.isArray(value);\n\n  if (num) {\n    key = 'number';\n  } else if (str) {\n    key = 'string';\n  } else if (arr) {\n    key = 'array';\n  } // if the value is not of a supported type for range validation\n  // the validation rule rule should use the\n  // type property to also test for a particular type\n\n\n  if (!key) {\n    return false;\n  }\n\n  if (arr) {\n    val = value.length;\n  }\n\n  if (str) {\n    // 处理码点大于U+010000的文字length属性不准确的bug，如\"𠮷𠮷𠮷\".lenght !== 3\n    val = value.replace(spRegexp, '_').length;\n  }\n\n  if (len) {\n    if (val !== rule.len) {\n      errors.push(format(options.messages[key].len, rule.fullField, rule.len));\n    }\n  } else if (min && !max && val < rule.min) {\n    errors.push(format(options.messages[key].min, rule.fullField, rule.min));\n  } else if (max && !min && val > rule.max) {\n    errors.push(format(options.messages[key].max, rule.fullField, rule.max));\n  } else if (min && max && (val < rule.min || val > rule.max)) {\n    errors.push(format(options.messages[key].range, rule.fullField, rule.min, rule.max));\n  }\n};\n\nvar ENUM$1 = 'enum';\n\nvar enumerable$1 = function enumerable(rule, value, source, errors, options) {\n  rule[ENUM$1] = Array.isArray(rule[ENUM$1]) ? rule[ENUM$1] : [];\n\n  if (rule[ENUM$1].indexOf(value) === -1) {\n    errors.push(format(options.messages[ENUM$1], rule.fullField, rule[ENUM$1].join(', ')));\n  }\n};\n\nvar pattern$1 = function pattern(rule, value, source, errors, options) {\n  if (rule.pattern) {\n    if (rule.pattern instanceof RegExp) {\n      // if a RegExp instance is passed, reset `lastIndex` in case its `global`\n      // flag is accidentally set to `true`, which in a validation scenario\n      // is not necessary and the result might be misleading\n      rule.pattern.lastIndex = 0;\n\n      if (!rule.pattern.test(value)) {\n        errors.push(format(options.messages.pattern.mismatch, rule.fullField, value, rule.pattern));\n      }\n    } else if (typeof rule.pattern === 'string') {\n      var _pattern = new RegExp(rule.pattern);\n\n      if (!_pattern.test(value)) {\n        errors.push(format(options.messages.pattern.mismatch, rule.fullField, value, rule.pattern));\n      }\n    }\n  }\n};\n\nvar rules = {\n  required: required$1,\n  whitespace: whitespace,\n  type: type$1,\n  range: range,\n  \"enum\": enumerable$1,\n  pattern: pattern$1\n};\n\nvar string = function string(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n\n  if (validate) {\n    if (isEmptyValue(value, 'string') && !rule.required) {\n      return callback();\n    }\n\n    rules.required(rule, value, source, errors, options, 'string');\n\n    if (!isEmptyValue(value, 'string')) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n      rules.pattern(rule, value, source, errors, options);\n\n      if (rule.whitespace === true) {\n        rules.whitespace(rule, value, source, errors, options);\n      }\n    }\n  }\n\n  callback(errors);\n};\n\nvar method = function method(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n\n    rules.required(rule, value, source, errors, options);\n\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n\n  callback(errors);\n};\n\nvar number = function number(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n\n  if (validate) {\n    if (value === '') {\n      value = undefined;\n    }\n\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n\n    rules.required(rule, value, source, errors, options);\n\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n    }\n  }\n\n  callback(errors);\n};\n\nvar _boolean = function _boolean(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n\n    rules.required(rule, value, source, errors, options);\n\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n\n  callback(errors);\n};\n\nvar regexp = function regexp(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n\n    rules.required(rule, value, source, errors, options);\n\n    if (!isEmptyValue(value)) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n\n  callback(errors);\n};\n\nvar integer = function integer(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n\n    rules.required(rule, value, source, errors, options);\n\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n    }\n  }\n\n  callback(errors);\n};\n\nvar floatFn = function floatFn(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n\n    rules.required(rule, value, source, errors, options);\n\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n    }\n  }\n\n  callback(errors);\n};\n\nvar array = function array(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n\n  if (validate) {\n    if ((value === undefined || value === null) && !rule.required) {\n      return callback();\n    }\n\n    rules.required(rule, value, source, errors, options, 'array');\n\n    if (value !== undefined && value !== null) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n    }\n  }\n\n  callback(errors);\n};\n\nvar object = function object(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n\n    rules.required(rule, value, source, errors, options);\n\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n\n  callback(errors);\n};\n\nvar ENUM = 'enum';\n\nvar enumerable = function enumerable(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n\n    rules.required(rule, value, source, errors, options);\n\n    if (value !== undefined) {\n      rules[ENUM](rule, value, source, errors, options);\n    }\n  }\n\n  callback(errors);\n};\n\nvar pattern = function pattern(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n\n  if (validate) {\n    if (isEmptyValue(value, 'string') && !rule.required) {\n      return callback();\n    }\n\n    rules.required(rule, value, source, errors, options);\n\n    if (!isEmptyValue(value, 'string')) {\n      rules.pattern(rule, value, source, errors, options);\n    }\n  }\n\n  callback(errors);\n};\n\nvar date = function date(rule, value, callback, source, options) {\n  // console.log('integer rule called %j', rule);\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field); // console.log('validate on %s value', value);\n\n  if (validate) {\n    if (isEmptyValue(value, 'date') && !rule.required) {\n      return callback();\n    }\n\n    rules.required(rule, value, source, errors, options);\n\n    if (!isEmptyValue(value, 'date')) {\n      var dateObject;\n\n      if (value instanceof Date) {\n        dateObject = value;\n      } else {\n        dateObject = new Date(value);\n      }\n\n      rules.type(rule, dateObject, source, errors, options);\n\n      if (dateObject) {\n        rules.range(rule, dateObject.getTime(), source, errors, options);\n      }\n    }\n  }\n\n  callback(errors);\n};\n\nvar required = function required(rule, value, callback, source, options) {\n  var errors = [];\n  var type = Array.isArray(value) ? 'array' : typeof value;\n  rules.required(rule, value, source, errors, options, type);\n  callback(errors);\n};\n\nvar type = function type(rule, value, callback, source, options) {\n  var ruleType = rule.type;\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n\n  if (validate) {\n    if (isEmptyValue(value, ruleType) && !rule.required) {\n      return callback();\n    }\n\n    rules.required(rule, value, source, errors, options, ruleType);\n\n    if (!isEmptyValue(value, ruleType)) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n\n  callback(errors);\n};\n\nvar any = function any(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n\n    rules.required(rule, value, source, errors, options);\n  }\n\n  callback(errors);\n};\n\nvar validators = {\n  string: string,\n  method: method,\n  number: number,\n  \"boolean\": _boolean,\n  regexp: regexp,\n  integer: integer,\n  \"float\": floatFn,\n  array: array,\n  object: object,\n  \"enum\": enumerable,\n  pattern: pattern,\n  date: date,\n  url: type,\n  hex: type,\n  email: type,\n  required: required,\n  any: any\n};\n\nfunction newMessages() {\n  return {\n    \"default\": 'Validation error on field %s',\n    required: '%s is required',\n    \"enum\": '%s must be one of %s',\n    whitespace: '%s cannot be empty',\n    date: {\n      format: '%s date %s is invalid for format %s',\n      parse: '%s date could not be parsed, %s is invalid ',\n      invalid: '%s date %s is invalid'\n    },\n    types: {\n      string: '%s is not a %s',\n      method: '%s is not a %s (function)',\n      array: '%s is not an %s',\n      object: '%s is not an %s',\n      number: '%s is not a %s',\n      date: '%s is not a %s',\n      \"boolean\": '%s is not a %s',\n      integer: '%s is not an %s',\n      \"float\": '%s is not a %s',\n      regexp: '%s is not a valid %s',\n      email: '%s is not a valid %s',\n      url: '%s is not a valid %s',\n      hex: '%s is not a valid %s'\n    },\n    string: {\n      len: '%s must be exactly %s characters',\n      min: '%s must be at least %s characters',\n      max: '%s cannot be longer than %s characters',\n      range: '%s must be between %s and %s characters'\n    },\n    number: {\n      len: '%s must equal %s',\n      min: '%s cannot be less than %s',\n      max: '%s cannot be greater than %s',\n      range: '%s must be between %s and %s'\n    },\n    array: {\n      len: '%s must be exactly %s in length',\n      min: '%s cannot be less than %s in length',\n      max: '%s cannot be greater than %s in length',\n      range: '%s must be between %s and %s in length'\n    },\n    pattern: {\n      mismatch: '%s value %s does not match pattern %s'\n    },\n    clone: function clone() {\n      var cloned = JSON.parse(JSON.stringify(this));\n      cloned.clone = this.clone;\n      return cloned;\n    }\n  };\n}\n\nvar messages = newMessages();\n/**\n *  Encapsulates a validation schema.\n *\n *  @param descriptor An object declaring validation rules\n *  for this schema.\n */\n\nvar Schema = /*#__PURE__*/function () {\n  // ========================= Static =========================\n  // ======================== Instance ========================\n  function Schema(descriptor) {\n    this.rules = null;\n    this._messages = messages;\n    this.define(descriptor);\n  }\n\n  var _proto = Schema.prototype;\n\n  _proto.define = function define(rules) {\n    var _this = this;\n\n    if (!rules) {\n      throw new Error('Cannot configure a schema with no rules');\n    }\n\n    if (typeof rules !== 'object' || Array.isArray(rules)) {\n      throw new Error('Rules must be an object');\n    }\n\n    this.rules = {};\n    Object.keys(rules).forEach(function (name) {\n      var item = rules[name];\n      _this.rules[name] = Array.isArray(item) ? item : [item];\n    });\n  };\n\n  _proto.messages = function messages(_messages) {\n    if (_messages) {\n      this._messages = deepMerge(newMessages(), _messages);\n    }\n\n    return this._messages;\n  };\n\n  _proto.validate = function validate(source_, o, oc) {\n    var _this2 = this;\n\n    if (o === void 0) {\n      o = {};\n    }\n\n    if (oc === void 0) {\n      oc = function oc() {};\n    }\n\n    var source = source_;\n    var options = o;\n    var callback = oc;\n\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n\n    if (!this.rules || Object.keys(this.rules).length === 0) {\n      if (callback) {\n        callback(null, source);\n      }\n\n      return Promise.resolve(source);\n    }\n\n    function complete(results) {\n      var errors = [];\n      var fields = {};\n\n      function add(e) {\n        if (Array.isArray(e)) {\n          var _errors;\n\n          errors = (_errors = errors).concat.apply(_errors, e);\n        } else {\n          errors.push(e);\n        }\n      }\n\n      for (var i = 0; i < results.length; i++) {\n        add(results[i]);\n      }\n\n      if (!errors.length) {\n        callback(null, source);\n      } else {\n        fields = convertFieldsError(errors);\n        callback(errors, fields);\n      }\n    }\n\n    if (options.messages) {\n      var messages$1 = this.messages();\n\n      if (messages$1 === messages) {\n        messages$1 = newMessages();\n      }\n\n      deepMerge(messages$1, options.messages);\n      options.messages = messages$1;\n    } else {\n      options.messages = this.messages();\n    }\n\n    var series = {};\n    var keys = options.keys || Object.keys(this.rules);\n    keys.forEach(function (z) {\n      var arr = _this2.rules[z];\n      var value = source[z];\n      arr.forEach(function (r) {\n        var rule = r;\n\n        if (typeof rule.transform === 'function') {\n          if (source === source_) {\n            source = _extends({}, source);\n          }\n\n          value = source[z] = rule.transform(value);\n        }\n\n        if (typeof rule === 'function') {\n          rule = {\n            validator: rule\n          };\n        } else {\n          rule = _extends({}, rule);\n        } // Fill validator. Skip if nothing need to validate\n\n\n        rule.validator = _this2.getValidationMethod(rule);\n\n        if (!rule.validator) {\n          return;\n        }\n\n        rule.field = z;\n        rule.fullField = rule.fullField || z;\n        rule.type = _this2.getType(rule);\n        series[z] = series[z] || [];\n        series[z].push({\n          rule: rule,\n          value: value,\n          source: source,\n          field: z\n        });\n      });\n    });\n    var errorFields = {};\n    return asyncMap(series, options, function (data, doIt) {\n      var rule = data.rule;\n      var deep = (rule.type === 'object' || rule.type === 'array') && (typeof rule.fields === 'object' || typeof rule.defaultField === 'object');\n      deep = deep && (rule.required || !rule.required && data.value);\n      rule.field = data.field;\n\n      function addFullField(key, schema) {\n        return _extends({}, schema, {\n          fullField: rule.fullField + \".\" + key,\n          fullFields: rule.fullFields ? [].concat(rule.fullFields, [key]) : [key]\n        });\n      }\n\n      function cb(e) {\n        if (e === void 0) {\n          e = [];\n        }\n\n        var errorList = Array.isArray(e) ? e : [e];\n\n        if (!options.suppressWarning && errorList.length) {\n          Schema.warning('async-validator:', errorList);\n        }\n\n        if (errorList.length && rule.message !== undefined) {\n          errorList = [].concat(rule.message);\n        } // Fill error info\n\n\n        var filledErrors = errorList.map(complementError(rule, source));\n\n        if (options.first && filledErrors.length) {\n          errorFields[rule.field] = 1;\n          return doIt(filledErrors);\n        }\n\n        if (!deep) {\n          doIt(filledErrors);\n        } else {\n          // if rule is required but the target object\n          // does not exist fail at the rule level and don't\n          // go deeper\n          if (rule.required && !data.value) {\n            if (rule.message !== undefined) {\n              filledErrors = [].concat(rule.message).map(complementError(rule, source));\n            } else if (options.error) {\n              filledErrors = [options.error(rule, format(options.messages.required, rule.field))];\n            }\n\n            return doIt(filledErrors);\n          }\n\n          var fieldsSchema = {};\n\n          if (rule.defaultField) {\n            Object.keys(data.value).map(function (key) {\n              fieldsSchema[key] = rule.defaultField;\n            });\n          }\n\n          fieldsSchema = _extends({}, fieldsSchema, data.rule.fields);\n          var paredFieldsSchema = {};\n          Object.keys(fieldsSchema).forEach(function (field) {\n            var fieldSchema = fieldsSchema[field];\n            var fieldSchemaList = Array.isArray(fieldSchema) ? fieldSchema : [fieldSchema];\n            paredFieldsSchema[field] = fieldSchemaList.map(addFullField.bind(null, field));\n          });\n          var schema = new Schema(paredFieldsSchema);\n          schema.messages(options.messages);\n\n          if (data.rule.options) {\n            data.rule.options.messages = options.messages;\n            data.rule.options.error = options.error;\n          }\n\n          schema.validate(data.value, data.rule.options || options, function (errs) {\n            var finalErrors = [];\n\n            if (filledErrors && filledErrors.length) {\n              finalErrors.push.apply(finalErrors, filledErrors);\n            }\n\n            if (errs && errs.length) {\n              finalErrors.push.apply(finalErrors, errs);\n            }\n\n            doIt(finalErrors.length ? finalErrors : null);\n          });\n        }\n      }\n\n      var res;\n\n      if (rule.asyncValidator) {\n        res = rule.asyncValidator(rule, data.value, cb, data.source, options);\n      } else if (rule.validator) {\n        res = rule.validator(rule, data.value, cb, data.source, options);\n\n        if (res === true) {\n          cb();\n        } else if (res === false) {\n          cb(typeof rule.message === 'function' ? rule.message(rule.fullField || rule.field) : rule.message || (rule.fullField || rule.field) + \" fails\");\n        } else if (res instanceof Array) {\n          cb(res);\n        } else if (res instanceof Error) {\n          cb(res.message);\n        }\n      }\n\n      if (res && res.then) {\n        res.then(function () {\n          return cb();\n        }, function (e) {\n          return cb(e);\n        });\n      }\n    }, function (results) {\n      complete(results);\n    }, source);\n  };\n\n  _proto.getType = function getType(rule) {\n    if (rule.type === undefined && rule.pattern instanceof RegExp) {\n      rule.type = 'pattern';\n    }\n\n    if (typeof rule.validator !== 'function' && rule.type && !validators.hasOwnProperty(rule.type)) {\n      throw new Error(format('Unknown rule type %s', rule.type));\n    }\n\n    return rule.type || 'string';\n  };\n\n  _proto.getValidationMethod = function getValidationMethod(rule) {\n    if (typeof rule.validator === 'function') {\n      return rule.validator;\n    }\n\n    var keys = Object.keys(rule);\n    var messageIndex = keys.indexOf('message');\n\n    if (messageIndex !== -1) {\n      keys.splice(messageIndex, 1);\n    }\n\n    if (keys.length === 1 && keys[0] === 'required') {\n      return validators.required;\n    }\n\n    return validators[this.getType(rule)] || undefined;\n  };\n\n  return Schema;\n}();\n\nSchema.register = function register(type, validator) {\n  if (typeof validator !== 'function') {\n    throw new Error('Cannot register a validator by type, validator is not a function');\n  }\n\n  validators[type] = validator;\n};\n\nSchema.warning = warning;\nSchema.messages = messages;\nSchema.validators = validators;\nexport { Schema as default };","map":{"version":3,"mappings":"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","names":["formatRegExp","warning","process","env","NODE_ENV","window","document","type","errors","console","warn","ASYNC_VALIDATOR_NO_WARNING","every","e","convertFieldsError","length","fields","forEach","field","error","push","format","template","args","arguments","i","len","apply","str","replace","x","String","Number","JSON","stringify","_","isNativeStringType","isEmptyValue","value","undefined","Array","isArray","asyncParallelArray","arr","func","callback","results","total","arrLength","count","a","asyncSerialArray","index","next","original","flattenObjArr","objArr","ret","Object","keys","k","AsyncValidationError","_inheritsLoose","_this","Error","asyncMap","option","source","first","pending","Promise","resolve","reject","flattenArr","firstFields","objArrKeys","objArrLength","key","indexOf","isErrorObj","obj","message","getValue","path","v","complementError","rule","oe","fieldValue","fullFields","fullField","deepMerge","target","s","hasOwnProperty","required","options","messages","whitespace","test","pattern","email","url","RegExp","hex","types","integer","number","parseInt","array","regexp","date","getTime","getMonth","getYear","isNaN","object","method","match","custom","ruleType","range","min","max","spRegexp","val","num","ENUM","enumerable","join","lastIndex","mismatch","_pattern","enumRule","string","validate","rules","boolean","floatFn","dateObject","Date","any","enumValidator","newMessages","parse","invalid","clone","cloned","Schema","descriptor","_messages","defaultMessages","define","item","name","source_","o","oc","complete","add","concat","series","_this2","z","r","transform","validator","getValidationMethod","getType","errorFields","data","doIt","deep","defaultField","addFullField","schema","cb","errorList","suppressWarning","filledErrors","map","fieldsSchema","paredFieldsSchema","fieldSchema","fieldSchemaList","bind","finalErrors","errs","res","asyncValidator","then","validators","messageIndex","splice","register"],"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/src/util.ts","/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/src/rule/required.ts","/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/src/rule/whitespace.ts","/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/src/rule/type.ts","/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/src/rule/range.ts","/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/src/rule/enum.ts","/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/src/rule/pattern.ts","/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/src/rule/index.ts","/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/src/validator/string.ts","/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/src/validator/method.ts","/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/src/validator/number.ts","/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/src/validator/boolean.ts","/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/src/validator/regexp.ts","/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/src/validator/integer.ts","/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/src/validator/float.ts","/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/src/validator/array.ts","/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/src/validator/object.ts","/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/src/validator/enum.ts","/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/src/validator/pattern.ts","/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/src/validator/date.ts","/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/src/validator/required.ts","/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/src/validator/type.ts","/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/src/validator/any.ts","/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/src/validator/index.ts","/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/src/messages.ts","/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/src/index.ts"],"sourcesContent":["/* eslint no-console:0 */\n\nimport {\n  ValidateError,\n  ValidateOption,\n  RuleValuePackage,\n  InternalRuleItem,\n  SyncErrorType,\n  RuleType,\n  Value,\n  Values,\n} from './interface';\n\nconst formatRegExp = /%[sdj%]/g;\n\ndeclare var ASYNC_VALIDATOR_NO_WARNING;\n\nexport let warning: (type: string, errors: SyncErrorType[]) => void = () => { };\n\n// don't print warning message when in production env or node runtime\nif (\n  typeof process !== 'undefined' &&\n  process.env &&\n  process.env.NODE_ENV !== 'production' &&\n  typeof window !== 'undefined' &&\n  typeof document !== 'undefined'\n) {\n  warning = (type, errors) => {\n    if (typeof console !== 'undefined' && console.warn &&\n      typeof ASYNC_VALIDATOR_NO_WARNING === 'undefined'\n    ) {\n      if (errors.every(e => typeof e === 'string')) {\n        console.warn(type, errors);\n      }\n    }\n  };\n}\n\nexport function convertFieldsError(\n  errors: ValidateError[],\n): Record<string, ValidateError[]> {\n  if (!errors || !errors.length) return null;\n  const fields = {};\n  errors.forEach(error => {\n    const field = error.field;\n    fields[field] = fields[field] || [];\n    fields[field].push(error);\n  });\n  return fields;\n}\n\nexport function format(\n  template: ((...args: any[]) => string) | string,\n  ...args: any[]\n): string {\n  let i = 0;\n  const len = args.length;\n  if (typeof template === 'function') {\n    return template.apply(null, args);\n  }\n  if (typeof template === 'string') {\n    let str = template.replace(formatRegExp, x => {\n      if (x === '%%') {\n        return '%';\n      }\n      if (i >= len) {\n        return x;\n      }\n      switch (x) {\n        case '%s':\n          return String(args[i++]);\n        case '%d':\n          return (Number(args[i++]) as unknown) as string;\n        case '%j':\n          try {\n            return JSON.stringify(args[i++]);\n          } catch (_) {\n            return '[Circular]';\n          }\n          break;\n        default:\n          return x;\n      }\n    });\n    return str;\n  }\n  return template;\n}\n\nfunction isNativeStringType(type: string) {\n  return (\n    type === 'string' ||\n    type === 'url' ||\n    type === 'hex' ||\n    type === 'email' ||\n    type === 'date' ||\n    type === 'pattern'\n  );\n}\n\nexport function isEmptyValue(value: Value, type?: string) {\n  if (value === undefined || value === null) {\n    return true;\n  }\n  if (type === 'array' && Array.isArray(value) && !value.length) {\n    return true;\n  }\n  if (isNativeStringType(type) && typeof value === 'string' && !value) {\n    return true;\n  }\n  return false;\n}\n\nexport function isEmptyObject(obj: object) {\n  return Object.keys(obj).length === 0;\n}\n\nfunction asyncParallelArray(\n  arr: RuleValuePackage[],\n  func: ValidateFunc,\n  callback: (errors: ValidateError[]) => void,\n) {\n  const results: ValidateError[] = [];\n  let total = 0;\n  const arrLength = arr.length;\n\n  function count(errors: ValidateError[]) {\n    results.push(...(errors || []));\n    total++;\n    if (total === arrLength) {\n      callback(results);\n    }\n  }\n\n  arr.forEach(a => {\n    func(a, count);\n  });\n}\n\nfunction asyncSerialArray(\n  arr: RuleValuePackage[],\n  func: ValidateFunc,\n  callback: (errors: ValidateError[]) => void,\n) {\n  let index = 0;\n  const arrLength = arr.length;\n\n  function next(errors: ValidateError[]) {\n    if (errors && errors.length) {\n      callback(errors);\n      return;\n    }\n    const original = index;\n    index = index + 1;\n    if (original < arrLength) {\n      func(arr[original], next);\n    } else {\n      callback([]);\n    }\n  }\n\n  next([]);\n}\n\nfunction flattenObjArr(objArr: Record<string, RuleValuePackage[]>) {\n  const ret: RuleValuePackage[] = [];\n  Object.keys(objArr).forEach(k => {\n    ret.push(...(objArr[k] || []));\n  });\n  return ret;\n}\n\nexport class AsyncValidationError extends Error {\n  errors: ValidateError[];\n  fields: Record<string, ValidateError[]>;\n\n  constructor(\n    errors: ValidateError[],\n    fields: Record<string, ValidateError[]>,\n  ) {\n    super('Async Validation Error');\n    this.errors = errors;\n    this.fields = fields;\n  }\n}\n\ntype ValidateFunc = (\n  data: RuleValuePackage,\n  doIt: (errors: ValidateError[]) => void,\n) => void;\n\nexport function asyncMap(\n  objArr: Record<string, RuleValuePackage[]>,\n  option: ValidateOption,\n  func: ValidateFunc,\n  callback: (errors: ValidateError[]) => void,\n  source: Values,\n): Promise<Values> {\n  if (option.first) {\n    const pending = new Promise<Values>((resolve, reject) => {\n      const next = (errors: ValidateError[]) => {\n        callback(errors);\n        return errors.length\n          ? reject(new AsyncValidationError(errors, convertFieldsError(errors)))\n          : resolve(source);\n      };\n      const flattenArr = flattenObjArr(objArr);\n      asyncSerialArray(flattenArr, func, next);\n    });\n    pending.catch(e => e);\n    return pending;\n  }\n  const firstFields =\n    option.firstFields === true\n      ? Object.keys(objArr)\n      : option.firstFields || [];\n\n  const objArrKeys = Object.keys(objArr);\n  const objArrLength = objArrKeys.length;\n  let total = 0;\n  const results: ValidateError[] = [];\n  const pending = new Promise<Values>((resolve, reject) => {\n    const next = (errors: ValidateError[]) => {\n      results.push.apply(results, errors);\n      total++;\n      if (total === objArrLength) {\n        callback(results);\n        return results.length\n          ? reject(\n            new AsyncValidationError(results, convertFieldsError(results)),\n          )\n          : resolve(source);\n      }\n    };\n    if (!objArrKeys.length) {\n      callback(results);\n      resolve(source);\n    }\n    objArrKeys.forEach(key => {\n      const arr = objArr[key];\n      if (firstFields.indexOf(key) !== -1) {\n        asyncSerialArray(arr, func, next);\n      } else {\n        asyncParallelArray(arr, func, next);\n      }\n    });\n  });\n  pending.catch(e => e);\n  return pending;\n}\n\nfunction isErrorObj(\n  obj: ValidateError | string | (() => string),\n): obj is ValidateError {\n  return !!(obj && (obj as ValidateError).message !== undefined);\n}\n\nfunction getValue(value: Values, path: string[]) {\n  let v = value;\n  for (let i = 0; i < path.length; i++) {\n    if (v == undefined) {\n      return v;\n    }\n    v = v[path[i]];\n  }\n  return v;\n}\n\nexport function complementError(rule: InternalRuleItem, source: Values) {\n  return (oe: ValidateError | (() => string) | string): ValidateError => {\n    let fieldValue;\n    if (rule.fullFields) {\n      fieldValue = getValue(source, rule.fullFields);\n    } else {\n      fieldValue = source[(oe as any).field || rule.fullField];\n    }\n    if (isErrorObj(oe)) {\n      oe.field = oe.field || rule.fullField;\n      oe.fieldValue = fieldValue;\n      return oe;\n    }\n    return {\n      message: typeof oe === 'function' ? oe() : oe,\n      fieldValue,\n      field: ((oe as unknown) as ValidateError).field || rule.fullField,\n    };\n  };\n}\n\nexport function deepMerge<T extends object>(target: T, source: Partial<T>): T {\n  if (source) {\n    for (const s in source) {\n      if (source.hasOwnProperty(s)) {\n        const value = source[s];\n        if (typeof value === 'object' && typeof target[s] === 'object') {\n          target[s] = {\n            ...target[s],\n            ...value,\n          };\n        } else {\n          target[s] = value;\n        }\n      }\n    }\n  }\n  return target;\n}\n","import { ExecuteRule } from '../interface';\nimport { format, isEmptyValue } from '../util';\n\nconst required: ExecuteRule = (rule, value, source, errors, options, type) => {\n  if (\n    rule.required &&\n    (!source.hasOwnProperty(rule.field) ||\n      isEmptyValue(value, type || rule.type))\n  ) {\n    errors.push(format(options.messages.required, rule.fullField));\n  }\n};\n\nexport default required;\n","import { ExecuteRule } from '../interface';\nimport { format } from '../util';\n\n/**\n *  Rule for validating whitespace.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param source The source object being validated.\n *  @param errors An array of errors that this rule may add\n *  validation errors to.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nconst whitespace: ExecuteRule = (rule, value, source, errors, options) => {\n  if (/^\\s+$/.test(value) || value === '') {\n    errors.push(format(options.messages.whitespace, rule.fullField));\n  }\n};\n\nexport default whitespace;\n","import { ExecuteRule, Value } from '../interface';\nimport { format } from '../util';\nimport required from './required';\n\n/* eslint max-len:0 */\n\nconst pattern = {\n  // http://emailregex.com/\n  email: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+\\.)+[a-zA-Z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]{2,}))$/,\n  url: new RegExp(\n    '^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\\\S+(?::\\\\S*)?@)?(?:(?:(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[0-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]+-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]+-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,})))|localhost)(?::\\\\d{2,5})?(?:(/|\\\\?|#)[^\\\\s]*)?$',\n    'i',\n  ),\n  hex: /^#?([a-f0-9]{6}|[a-f0-9]{3})$/i,\n};\n\nconst types = {\n  integer(value: Value) {\n    return types.number(value) && parseInt(value, 10) === value;\n  },\n  float(value: Value) {\n    return types.number(value) && !types.integer(value);\n  },\n  array(value: Value) {\n    return Array.isArray(value);\n  },\n  regexp(value: Value) {\n    if (value instanceof RegExp) {\n      return true;\n    }\n    try {\n      return !!new RegExp(value);\n    } catch (e) {\n      return false;\n    }\n  },\n  date(value: Value) {\n    return (\n      typeof value.getTime === 'function' &&\n      typeof value.getMonth === 'function' &&\n      typeof value.getYear === 'function' &&\n      !isNaN(value.getTime())\n    );\n  },\n  number(value: Value) {\n    if (isNaN(value)) {\n      return false;\n    }\n    return typeof value === 'number';\n  },\n  object(value: Value) {\n    return typeof value === 'object' && !types.array(value);\n  },\n  method(value: Value) {\n    return typeof value === 'function';\n  },\n  email(value: Value) {\n    return (\n      typeof value === 'string' &&\n      value.length <= 320 &&\n      !!value.match(pattern.email)\n    );\n  },\n  url(value: Value) {\n    return (\n      typeof value === 'string' &&\n      value.length <= 2048 &&\n      !!value.match(pattern.url)\n    );\n  },\n  hex(value: Value) {\n    return typeof value === 'string' && !!value.match(pattern.hex);\n  },\n};\n\nconst type: ExecuteRule = (rule, value, source, errors, options) => {\n  if (rule.required && value === undefined) {\n    required(rule, value, source, errors, options);\n    return;\n  }\n  const custom = [\n    'integer',\n    'float',\n    'array',\n    'regexp',\n    'object',\n    'method',\n    'email',\n    'number',\n    'date',\n    'url',\n    'hex',\n  ];\n  const ruleType = rule.type;\n  if (custom.indexOf(ruleType) > -1) {\n    if (!types[ruleType](value)) {\n      errors.push(\n        format(options.messages.types[ruleType], rule.fullField, rule.type),\n      );\n    }\n    // straight typeof check\n  } else if (ruleType && typeof value !== rule.type) {\n    errors.push(\n      format(options.messages.types[ruleType], rule.fullField, rule.type),\n    );\n  }\n};\n\nexport default type;\n","import { ExecuteRule } from '../interface';\nimport { format } from '../util';\n\nconst range: ExecuteRule = (rule, value, source, errors, options) => {\n  const len = typeof rule.len === 'number';\n  const min = typeof rule.min === 'number';\n  const max = typeof rule.max === 'number';\n  // 正则匹配码点范围从U+010000一直到U+10FFFF的文字（补充平面Supplementary Plane）\n  const spRegexp = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n  let val = value;\n  let key = null;\n  const num = typeof value === 'number';\n  const str = typeof value === 'string';\n  const arr = Array.isArray(value);\n  if (num) {\n    key = 'number';\n  } else if (str) {\n    key = 'string';\n  } else if (arr) {\n    key = 'array';\n  }\n  // if the value is not of a supported type for range validation\n  // the validation rule rule should use the\n  // type property to also test for a particular type\n  if (!key) {\n    return false;\n  }\n  if (arr) {\n    val = value.length;\n  }\n  if (str) {\n    // 处理码点大于U+010000的文字length属性不准确的bug，如\"𠮷𠮷𠮷\".lenght !== 3\n    val = value.replace(spRegexp, '_').length;\n  }\n  if (len) {\n    if (val !== rule.len) {\n      errors.push(format(options.messages[key].len, rule.fullField, rule.len));\n    }\n  } else if (min && !max && val < rule.min) {\n    errors.push(format(options.messages[key].min, rule.fullField, rule.min));\n  } else if (max && !min && val > rule.max) {\n    errors.push(format(options.messages[key].max, rule.fullField, rule.max));\n  } else if (min && max && (val < rule.min || val > rule.max)) {\n    errors.push(\n      format(options.messages[key].range, rule.fullField, rule.min, rule.max),\n    );\n  }\n};\n\nexport default range;\n","import { ExecuteRule } from '../interface';\nimport { format } from '../util';\n\nconst ENUM = 'enum' as const;\n\nconst enumerable: ExecuteRule = (rule, value, source, errors, options) => {\n  rule[ENUM] = Array.isArray(rule[ENUM]) ? rule[ENUM] : [];\n  if (rule[ENUM].indexOf(value) === -1) {\n    errors.push(\n      format(options.messages[ENUM], rule.fullField, rule[ENUM].join(', ')),\n    );\n  }\n};\n\nexport default enumerable;\n","import { ExecuteRule } from '../interface';\nimport { format } from '../util';\n\nconst pattern: ExecuteRule = (rule, value, source, errors, options) => {\n  if (rule.pattern) {\n    if (rule.pattern instanceof RegExp) {\n      // if a RegExp instance is passed, reset `lastIndex` in case its `global`\n      // flag is accidentally set to `true`, which in a validation scenario\n      // is not necessary and the result might be misleading\n      rule.pattern.lastIndex = 0;\n      if (!rule.pattern.test(value)) {\n        errors.push(\n          format(\n            options.messages.pattern.mismatch,\n            rule.fullField,\n            value,\n            rule.pattern,\n          ),\n        );\n      }\n    } else if (typeof rule.pattern === 'string') {\n      const _pattern = new RegExp(rule.pattern);\n      if (!_pattern.test(value)) {\n        errors.push(\n          format(\n            options.messages.pattern.mismatch,\n            rule.fullField,\n            value,\n            rule.pattern,\n          ),\n        );\n      }\n    }\n  }\n};\n\nexport default pattern;\n","import required from './required';\nimport whitespace from './whitespace';\nimport type from './type';\nimport range from './range';\nimport enumRule from './enum';\nimport pattern from './pattern';\n\nexport default {\n  required,\n  whitespace,\n  type,\n  range,\n  enum: enumRule,\n  pattern,\n};\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst string: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value, 'string') && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options, 'string');\n    if (!isEmptyValue(value, 'string')) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n      rules.pattern(rule, value, source, errors, options);\n      if (rule.whitespace === true) {\n        rules.whitespace(rule, value, source, errors, options);\n      }\n    }\n  }\n  callback(errors);\n};\n\nexport default string;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst method: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default method;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst number: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (value === '') {\n      value = undefined;\n    }\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default number;\n","import { isEmptyValue } from '../util';\nimport rules from '../rule';\nimport { ExecuteValidator } from '../interface';\n\nconst boolean: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default boolean;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst regexp: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (!isEmptyValue(value)) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default regexp;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst integer: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default integer;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst floatFn: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default floatFn;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule/index';\n\nconst array: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if ((value === undefined || value === null) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options, 'array');\n    if (value !== undefined && value !== null) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default array;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst object: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default object;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst ENUM = 'enum' as const;\n\nconst enumerable: ExecuteValidator = (\n  rule,\n  value,\n  callback,\n  source,\n  options,\n) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules[ENUM](rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default enumerable;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst pattern: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value, 'string') && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (!isEmptyValue(value, 'string')) {\n      rules.pattern(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default pattern;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst date: ExecuteValidator = (rule, value, callback, source, options) => {\n  // console.log('integer rule called %j', rule);\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  // console.log('validate on %s value', value);\n  if (validate) {\n    if (isEmptyValue(value, 'date') && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (!isEmptyValue(value, 'date')) {\n      let dateObject;\n\n      if (value instanceof Date) {\n        dateObject = value;\n      } else {\n        dateObject = new Date(value);\n      }\n\n      rules.type(rule, dateObject, source, errors, options);\n      if (dateObject) {\n        rules.range(rule, dateObject.getTime(), source, errors, options);\n      }\n    }\n  }\n  callback(errors);\n};\n\nexport default date;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\n\nconst required: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const type = Array.isArray(value) ? 'array' : typeof value;\n  rules.required(rule, value, source, errors, options, type);\n  callback(errors);\n};\n\nexport default required;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst type: ExecuteValidator = (rule, value, callback, source, options) => {\n  const ruleType = rule.type;\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value, ruleType) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options, ruleType);\n    if (!isEmptyValue(value, ruleType)) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default type;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst any: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n  }\n  callback(errors);\n};\n\nexport default any;\n","import string from './string';\nimport method from './method';\nimport number from './number';\nimport boolean from './boolean';\nimport regexp from './regexp';\nimport integer from './integer';\nimport float from './float';\nimport array from './array';\nimport object from './object';\nimport enumValidator from './enum';\nimport pattern from './pattern';\nimport date from './date';\nimport required from './required';\nimport type from './type';\nimport any from './any';\n\nexport default {\n  string,\n  method,\n  number,\n  boolean,\n  regexp,\n  integer,\n  float,\n  array,\n  object,\n  enum: enumValidator,\n  pattern,\n  date,\n  url: type,\n  hex: type,\n  email: type,\n  required,\n  any,\n};\n","import { InternalValidateMessages } from './interface';\n\nexport function newMessages(): InternalValidateMessages {\n  return {\n    default: 'Validation error on field %s',\n    required: '%s is required',\n    enum: '%s must be one of %s',\n    whitespace: '%s cannot be empty',\n    date: {\n      format: '%s date %s is invalid for format %s',\n      parse: '%s date could not be parsed, %s is invalid ',\n      invalid: '%s date %s is invalid',\n    },\n    types: {\n      string: '%s is not a %s',\n      method: '%s is not a %s (function)',\n      array: '%s is not an %s',\n      object: '%s is not an %s',\n      number: '%s is not a %s',\n      date: '%s is not a %s',\n      boolean: '%s is not a %s',\n      integer: '%s is not an %s',\n      float: '%s is not a %s',\n      regexp: '%s is not a valid %s',\n      email: '%s is not a valid %s',\n      url: '%s is not a valid %s',\n      hex: '%s is not a valid %s',\n    },\n    string: {\n      len: '%s must be exactly %s characters',\n      min: '%s must be at least %s characters',\n      max: '%s cannot be longer than %s characters',\n      range: '%s must be between %s and %s characters',\n    },\n    number: {\n      len: '%s must equal %s',\n      min: '%s cannot be less than %s',\n      max: '%s cannot be greater than %s',\n      range: '%s must be between %s and %s',\n    },\n    array: {\n      len: '%s must be exactly %s in length',\n      min: '%s cannot be less than %s in length',\n      max: '%s cannot be greater than %s in length',\n      range: '%s must be between %s and %s in length',\n    },\n    pattern: {\n      mismatch: '%s value %s does not match pattern %s',\n    },\n    clone() {\n      const cloned = JSON.parse(JSON.stringify(this));\n      cloned.clone = this.clone;\n      return cloned;\n    },\n  };\n}\n\nexport const messages = newMessages();\n","import {\n  format,\n  complementError,\n  asyncMap,\n  warning,\n  deepMerge,\n  convertFieldsError,\n} from './util';\nimport validators from './validator/index';\nimport { messages as defaultMessages, newMessages } from './messages';\nimport {\n  InternalRuleItem,\n  InternalValidateMessages,\n  Rule,\n  RuleItem,\n  Rules,\n  ValidateCallback,\n  ValidateMessages,\n  ValidateOption,\n  Values,\n  RuleValuePackage,\n  ValidateError,\n  ValidateFieldsError,\n  SyncErrorType,\n  ValidateResult,\n} from './interface';\n\nexport * from './interface';\n\n/**\n *  Encapsulates a validation schema.\n *\n *  @param descriptor An object declaring validation rules\n *  for this schema.\n */\nclass Schema {\n  // ========================= Static =========================\n  static register = function register(type: string, validator) {\n    if (typeof validator !== 'function') {\n      throw new Error(\n        'Cannot register a validator by type, validator is not a function',\n      );\n    }\n    validators[type] = validator;\n  };\n\n  static warning = warning;\n\n  static messages = defaultMessages;\n\n  static validators = validators;\n\n  // ======================== Instance ========================\n  rules: Record<string, RuleItem[]> = null;\n  _messages: InternalValidateMessages = defaultMessages;\n\n  constructor(descriptor: Rules) {\n    this.define(descriptor);\n  }\n\n  define(rules: Rules) {\n    if (!rules) {\n      throw new Error('Cannot configure a schema with no rules');\n    }\n    if (typeof rules !== 'object' || Array.isArray(rules)) {\n      throw new Error('Rules must be an object');\n    }\n    this.rules = {};\n\n    Object.keys(rules).forEach(name => {\n      const item: Rule = rules[name];\n      this.rules[name] = Array.isArray(item) ? item : [item];\n    });\n  }\n\n  messages(messages?: ValidateMessages) {\n    if (messages) {\n      this._messages = deepMerge(newMessages(), messages);\n    }\n    return this._messages;\n  }\n\n  validate(\n    source: Values,\n    option?: ValidateOption,\n    callback?: ValidateCallback,\n  ): Promise<Values>;\n  validate(source: Values, callback: ValidateCallback): Promise<Values>;\n  validate(source: Values): Promise<Values>;\n\n  validate(source_: Values, o: any = {}, oc: any = () => {}): Promise<Values> {\n    let source: Values = source_;\n    let options: ValidateOption = o;\n    let callback: ValidateCallback = oc;\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    if (!this.rules || Object.keys(this.rules).length === 0) {\n      if (callback) {\n        callback(null, source);\n      }\n      return Promise.resolve(source);\n    }\n\n    function complete(results: (ValidateError | ValidateError[])[]) {\n      let errors: ValidateError[] = [];\n      let fields: ValidateFieldsError = {};\n\n      function add(e: ValidateError | ValidateError[]) {\n        if (Array.isArray(e)) {\n          errors = errors.concat(...e);\n        } else {\n          errors.push(e);\n        }\n      }\n\n      for (let i = 0; i < results.length; i++) {\n        add(results[i]);\n      }\n      if (!errors.length) {\n        callback(null, source);\n      } else {\n        fields = convertFieldsError(errors);\n        (callback as (\n          errors: ValidateError[],\n          fields: ValidateFieldsError,\n        ) => void)(errors, fields);\n      }\n    }\n\n    if (options.messages) {\n      let messages = this.messages();\n      if (messages === defaultMessages) {\n        messages = newMessages();\n      }\n      deepMerge(messages, options.messages);\n      options.messages = messages;\n    } else {\n      options.messages = this.messages();\n    }\n\n    const series: Record<string, RuleValuePackage[]> = {};\n    const keys = options.keys || Object.keys(this.rules);\n    keys.forEach(z => {\n      const arr = this.rules[z];\n      let value = source[z];\n      arr.forEach(r => {\n        let rule: InternalRuleItem = r;\n        if (typeof rule.transform === 'function') {\n          if (source === source_) {\n            source = { ...source };\n          }\n          value = source[z] = rule.transform(value);\n        }\n        if (typeof rule === 'function') {\n          rule = {\n            validator: rule,\n          };\n        } else {\n          rule = { ...rule };\n        }\n\n        // Fill validator. Skip if nothing need to validate\n        rule.validator = this.getValidationMethod(rule);\n        if (!rule.validator) {\n          return;\n        }\n\n        rule.field = z;\n        rule.fullField = rule.fullField || z;\n        rule.type = this.getType(rule);\n        series[z] = series[z] || [];\n        series[z].push({\n          rule,\n          value,\n          source,\n          field: z,\n        });\n      });\n    });\n    const errorFields = {};\n    return asyncMap(\n      series,\n      options,\n      (data, doIt) => {\n        const rule = data.rule;\n        let deep =\n          (rule.type === 'object' || rule.type === 'array') &&\n          (typeof rule.fields === 'object' ||\n            typeof rule.defaultField === 'object');\n        deep = deep && (rule.required || (!rule.required && data.value));\n        rule.field = data.field;\n\n        function addFullField(key: string, schema: RuleItem) {\n          return {\n            ...schema,\n            fullField: `${rule.fullField}.${key}`,\n            fullFields: rule.fullFields ? [...rule.fullFields, key] : [key],\n          };\n        }\n\n        function cb(e: SyncErrorType | SyncErrorType[] = []) {\n          let errorList = Array.isArray(e) ? e : [e];\n          if (!options.suppressWarning && errorList.length) {\n            Schema.warning('async-validator:', errorList);\n          }\n          if (errorList.length && rule.message !== undefined) {\n            errorList = [].concat(rule.message);\n          }\n\n          // Fill error info\n          let filledErrors = errorList.map(complementError(rule, source));\n\n          if (options.first && filledErrors.length) {\n            errorFields[rule.field] = 1;\n            return doIt(filledErrors);\n          }\n          if (!deep) {\n            doIt(filledErrors);\n          } else {\n            // if rule is required but the target object\n            // does not exist fail at the rule level and don't\n            // go deeper\n            if (rule.required && !data.value) {\n              if (rule.message !== undefined) {\n                filledErrors = []\n                  .concat(rule.message)\n                  .map(complementError(rule, source));\n              } else if (options.error) {\n                filledErrors = [\n                  options.error(\n                    rule,\n                    format(options.messages.required, rule.field),\n                  ),\n                ];\n              }\n              return doIt(filledErrors);\n            }\n\n            let fieldsSchema: Record<string, Rule> = {};\n            if (rule.defaultField) {\n              Object.keys(data.value).map(key => {\n                fieldsSchema[key] = rule.defaultField;\n              });\n            }\n            fieldsSchema = {\n              ...fieldsSchema,\n              ...data.rule.fields,\n            };\n\n            const paredFieldsSchema: Record<string, RuleItem[]> = {};\n\n            Object.keys(fieldsSchema).forEach(field => {\n              const fieldSchema = fieldsSchema[field];\n              const fieldSchemaList = Array.isArray(fieldSchema)\n                ? fieldSchema\n                : [fieldSchema];\n              paredFieldsSchema[field] = fieldSchemaList.map(\n                addFullField.bind(null, field),\n              );\n            });\n            const schema = new Schema(paredFieldsSchema);\n            schema.messages(options.messages);\n            if (data.rule.options) {\n              data.rule.options.messages = options.messages;\n              data.rule.options.error = options.error;\n            }\n            schema.validate(data.value, data.rule.options || options, errs => {\n              const finalErrors = [];\n              if (filledErrors && filledErrors.length) {\n                finalErrors.push(...filledErrors);\n              }\n              if (errs && errs.length) {\n                finalErrors.push(...errs);\n              }\n              doIt(finalErrors.length ? finalErrors : null);\n            });\n          }\n        }\n\n        let res: ValidateResult;\n        if (rule.asyncValidator) {\n          res = rule.asyncValidator(rule, data.value, cb, data.source, options);\n        } else if (rule.validator) {\n          res = rule.validator(rule, data.value, cb, data.source, options);\n          if (res === true) {\n            cb();\n          } else if (res === false) {\n            cb(\n              typeof rule.message === 'function'\n                ? rule.message(rule.fullField || rule.field)\n                : rule.message || `${rule.fullField || rule.field} fails`,\n            );\n          } else if (res instanceof Array) {\n            cb(res);\n          } else if (res instanceof Error) {\n            cb(res.message);\n          }\n        }\n        if (res && (res as Promise<void>).then) {\n          (res as Promise<void>).then(\n            () => cb(),\n            e => cb(e),\n          );\n        }\n      },\n      results => {\n        complete(results);\n      },\n      source,\n    );\n  }\n\n  getType(rule: InternalRuleItem) {\n    if (rule.type === undefined && rule.pattern instanceof RegExp) {\n      rule.type = 'pattern';\n    }\n    if (\n      typeof rule.validator !== 'function' &&\n      rule.type &&\n      !validators.hasOwnProperty(rule.type)\n    ) {\n      throw new Error(format('Unknown rule type %s', rule.type));\n    }\n    return rule.type || 'string';\n  }\n\n  getValidationMethod(rule: InternalRuleItem) {\n    if (typeof rule.validator === 'function') {\n      return rule.validator;\n    }\n    const keys = Object.keys(rule);\n    const messageIndex = keys.indexOf('message');\n    if (messageIndex !== -1) {\n      keys.splice(messageIndex, 1);\n    }\n    if (keys.length === 1 && keys[0] === 'required') {\n      return validators.required;\n    }\n    return validators[this.getType(rule)] || undefined;\n  }\n}\n\nexport default Schema;\n"]},"metadata":{},"sourceType":"module"}