{"ast":null,"code":"export var CSSMathOperator;\n\n(function (CSSMathOperator) {\n  CSSMathOperator[\"kAdd\"] = \"+\";\n  CSSMathOperator[\"kSubtract\"] = \"-\";\n  CSSMathOperator[\"kMultiply\"] = \"*\";\n  CSSMathOperator[\"kDivide\"] = \"/\";\n  CSSMathOperator[\"kMin\"] = \"min\";\n  CSSMathOperator[\"kMax\"] = \"max\";\n  CSSMathOperator[\"kClamp\"] = \"clamp\";\n  CSSMathOperator[\"kInvalid\"] = \"\";\n})(CSSMathOperator || (CSSMathOperator = {})); // export function parseCSSArithmeticOperator(token: CSSParserToken) {\n//   if (token.GetType() !== kDelimiterToken)\n//     return CSSMathOperator.kInvalid;\n//   switch (token.Delimiter()) {\n//     case '+':\n//       return CSSMathOperator.kAdd;\n//     case '-':\n//       return CSSMathOperator.kSubtract;\n//     case '*':\n//       return CSSMathOperator.kMultiply;\n//     case '/':\n//       return CSSMathOperator.kDivide;\n//     default:\n//       return CSSMathOperator.kInvalid;\n//   }\n// }\n\n\nexport function isComparison(op) {\n  return op === CSSMathOperator.kMin || op === CSSMathOperator.kMax || op === CSSMathOperator.kClamp;\n}","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/@antv/g/es/css/cssom/CSSMathOperator.js"],"names":["CSSMathOperator","isComparison","op","kMin","kMax","kClamp"],"mappings":"AAAA,OAAO,IAAIA,eAAJ;;AAEP,CAAC,UAAUA,eAAV,EAA2B;AAC1BA,EAAAA,eAAe,CAAC,MAAD,CAAf,GAA0B,GAA1B;AACAA,EAAAA,eAAe,CAAC,WAAD,CAAf,GAA+B,GAA/B;AACAA,EAAAA,eAAe,CAAC,WAAD,CAAf,GAA+B,GAA/B;AACAA,EAAAA,eAAe,CAAC,SAAD,CAAf,GAA6B,GAA7B;AACAA,EAAAA,eAAe,CAAC,MAAD,CAAf,GAA0B,KAA1B;AACAA,EAAAA,eAAe,CAAC,MAAD,CAAf,GAA0B,KAA1B;AACAA,EAAAA,eAAe,CAAC,QAAD,CAAf,GAA4B,OAA5B;AACAA,EAAAA,eAAe,CAAC,UAAD,CAAf,GAA8B,EAA9B;AACD,CATD,EASGA,eAAe,KAAKA,eAAe,GAAG,EAAvB,CATlB,E,CAS+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,OAAO,SAASC,YAAT,CAAsBC,EAAtB,EAA0B;AAC/B,SAAOA,EAAE,KAAKF,eAAe,CAACG,IAAvB,IAA+BD,EAAE,KAAKF,eAAe,CAACI,IAAtD,IAA8DF,EAAE,KAAKF,eAAe,CAACK,MAA5F;AACD","sourcesContent":["export var CSSMathOperator;\n\n(function (CSSMathOperator) {\n  CSSMathOperator[\"kAdd\"] = \"+\";\n  CSSMathOperator[\"kSubtract\"] = \"-\";\n  CSSMathOperator[\"kMultiply\"] = \"*\";\n  CSSMathOperator[\"kDivide\"] = \"/\";\n  CSSMathOperator[\"kMin\"] = \"min\";\n  CSSMathOperator[\"kMax\"] = \"max\";\n  CSSMathOperator[\"kClamp\"] = \"clamp\";\n  CSSMathOperator[\"kInvalid\"] = \"\";\n})(CSSMathOperator || (CSSMathOperator = {})); // export function parseCSSArithmeticOperator(token: CSSParserToken) {\n//   if (token.GetType() !== kDelimiterToken)\n//     return CSSMathOperator.kInvalid;\n//   switch (token.Delimiter()) {\n//     case '+':\n//       return CSSMathOperator.kAdd;\n//     case '-':\n//       return CSSMathOperator.kSubtract;\n//     case '*':\n//       return CSSMathOperator.kMultiply;\n//     case '/':\n//       return CSSMathOperator.kDivide;\n//     default:\n//       return CSSMathOperator.kInvalid;\n//   }\n// }\n\n\nexport function isComparison(op) {\n  return op === CSSMathOperator.kMin || op === CSSMathOperator.kMax || op === CSSMathOperator.kClamp;\n}"]},"metadata":{},"sourceType":"module"}