{"ast":null,"code":"var mod = function (n, m) {\n  return (n % m + m) % m;\n}; // 向量长度\n\n\nfunction vMag(v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n} // u.v/|u||v|，计算夹角的余弦值\n\n\nfunction vRatio(u, v) {\n  // 当存在一个向量的长度为 0 时，夹角也为 0，即夹角的余弦值为 1\n  return vMag(u) * vMag(v) ? (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v)) : 1;\n} // 向量角度\n\n\nfunction vAngle(u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n}\n/**\n * 判断两个点是否重合，点坐标的格式为 [x, y]\n * @param {Array} point1 第一个点\n * @param {Array} point2 第二个点\n */\n\n\nexport function isSamePoint(point1, point2) {\n  return point1[0] === point2[0] && point1[1] === point2[1];\n} // A 0:rx 1:ry 2:x-axis-rotation 3:large-arc-flag 4:sweep-flag 5: x 6: y\n\nexport default function getArcParams(startPoint, params) {\n  var rx = params[1];\n  var ry = params[2];\n  var xRotation = mod(params[3] * Math.PI / 180, Math.PI * 2);\n  var arcFlag = params[4];\n  var sweepFlag = params[5]; // 弧形起点坐标\n\n  var x1 = startPoint[0];\n  var y1 = startPoint[1]; // 弧形终点坐标\n\n  var x2 = params[6];\n  var y2 = params[7];\n  var xp = Math.cos(xRotation) * (x1 - x2) / 2.0 + Math.sin(xRotation) * (y1 - y2) / 2.0;\n  var yp = -1 * Math.sin(xRotation) * (x1 - x2) / 2.0 + Math.cos(xRotation) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= Math.sqrt(lambda);\n    ry *= Math.sqrt(lambda);\n  }\n\n  var diff = rx * rx * (yp * yp) + ry * ry * (xp * xp);\n  var f = diff ? Math.sqrt((rx * rx * (ry * ry) - diff) / diff) : 1;\n\n  if (arcFlag === sweepFlag) {\n    f *= -1;\n  }\n\n  if (isNaN(f)) {\n    f = 0;\n  } // 旋转前的起点坐标，且当长半轴和短半轴的长度为 0 时，坐标按 (0, 0) 处理\n\n\n  var cxp = ry ? f * rx * yp / ry : 0;\n  var cyp = rx ? f * -ry * xp / rx : 0; // 椭圆圆心坐标\n\n  var cx = (x1 + x2) / 2.0 + Math.cos(xRotation) * cxp - Math.sin(xRotation) * cyp;\n  var cy = (y1 + y2) / 2.0 + Math.sin(xRotation) * cxp + Math.cos(xRotation) * cyp; // 起始点的单位向量\n\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry]; // 终止点的单位向量\n\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry]; // 计算起始点和圆心的连线，与 x 轴正方向的夹角\n\n  var theta = vAngle([1, 0], u); // 计算圆弧起始点和终止点与椭圆圆心连线的夹角\n\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = Math.PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (sweepFlag === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * Math.PI;\n  }\n\n  if (sweepFlag === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * Math.PI;\n  }\n\n  return {\n    cx: cx,\n    cy: cy,\n    // 弧形的起点和终点相同时，长轴和短轴的长度按 0 处理\n    rx: isSamePoint(startPoint, [x2, y2]) ? 0 : rx,\n    ry: isSamePoint(startPoint, [x2, y2]) ? 0 : ry,\n    startAngle: theta,\n    endAngle: theta + dTheta,\n    xRotation: xRotation,\n    arcFlag: arcFlag,\n    sweepFlag: sweepFlag\n  };\n}","map":{"version":3,"mappings":"AAAA,IAAMA,GAAG,GAAG,UAAUC,CAAV,EAAqBC,CAArB,EAA8B;AACxC,SAAO,CAAED,CAAC,GAAGC,CAAL,GAAUA,CAAX,IAAgBA,CAAvB;AACD,CAFD,C,CAIA;;;AACA,SAASC,IAAT,CAAcC,CAAd,EAAe;AACb,SAAOC,IAAI,CAACC,IAAL,CAAUF,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,CAAD,CAAR,GAAcA,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,CAAD,CAAhC,CAAP;AACD,C,CAED;;;AACA,SAASG,MAAT,CAAgBC,CAAhB,EAAmBJ,CAAnB,EAAoB;AAClB;AACA,SAAOD,IAAI,CAACK,CAAD,CAAJ,GAAUL,IAAI,CAACC,CAAD,CAAd,GAAoB,CAACI,CAAC,CAAC,CAAD,CAAD,GAAOJ,CAAC,CAAC,CAAD,CAAR,GAAcI,CAAC,CAAC,CAAD,CAAD,GAAOJ,CAAC,CAAC,CAAD,CAAvB,KAA+BD,IAAI,CAACK,CAAD,CAAJ,GAAUL,IAAI,CAACC,CAAD,CAA7C,CAApB,GAAwE,CAA/E;AACD,C,CAED;;;AACA,SAASK,MAAT,CAAgBD,CAAhB,EAAmBJ,CAAnB,EAAoB;AAClB,SAAO,CAACI,CAAC,CAAC,CAAD,CAAD,GAAOJ,CAAC,CAAC,CAAD,CAAR,GAAcI,CAAC,CAAC,CAAD,CAAD,GAAOJ,CAAC,CAAC,CAAD,CAAtB,GAA4B,CAAC,CAA7B,GAAiC,CAAlC,IAAuCC,IAAI,CAACK,IAAL,CAAUH,MAAM,CAACC,CAAD,EAAIJ,CAAJ,CAAhB,CAA9C;AACD;AAED;;;;;;;AAKA,OAAM,SAAUO,WAAV,CAAsBC,MAAtB,EAA8BC,MAA9B,EAAoC;AACxC,SAAOD,MAAM,CAAC,CAAD,CAAN,KAAcC,MAAM,CAAC,CAAD,CAApB,IAA2BD,MAAM,CAAC,CAAD,CAAN,KAAcC,MAAM,CAAC,CAAD,CAAtD;AACD,C,CAED;;AACA,eAAc,SAAUC,YAAV,CAAuBC,UAAvB,EAAmCC,MAAnC,EAAyC;AACrD,MAAIC,EAAE,GAAGD,MAAM,CAAC,CAAD,CAAf;AACA,MAAIE,EAAE,GAAGF,MAAM,CAAC,CAAD,CAAf;AACA,MAAMG,SAAS,GAAGnB,GAAG,CAAEgB,MAAM,CAAC,CAAD,CAAN,GAAYX,IAAI,CAACe,EAAlB,GAAwB,GAAzB,EAA8Bf,IAAI,CAACe,EAAL,GAAU,CAAxC,CAArB;AACA,MAAMC,OAAO,GAAGL,MAAM,CAAC,CAAD,CAAtB;AACA,MAAMM,SAAS,GAAGN,MAAM,CAAC,CAAD,CAAxB,CALqD,CAMrD;;AACA,MAAMO,EAAE,GAAGR,UAAU,CAAC,CAAD,CAArB;AACA,MAAMS,EAAE,GAAGT,UAAU,CAAC,CAAD,CAArB,CARqD,CASrD;;AACA,MAAMU,EAAE,GAAGT,MAAM,CAAC,CAAD,CAAjB;AACA,MAAMU,EAAE,GAAGV,MAAM,CAAC,CAAD,CAAjB;AACA,MAAMW,EAAE,GAAItB,IAAI,CAACuB,GAAL,CAAST,SAAT,KAAuBI,EAAE,GAAGE,EAA5B,CAAD,GAAoC,GAApC,GAA2CpB,IAAI,CAACwB,GAAL,CAASV,SAAT,KAAuBK,EAAE,GAAGE,EAA5B,CAAD,GAAoC,GAAzF;AACA,MAAMI,EAAE,GAAI,CAAC,CAAD,GAAKzB,IAAI,CAACwB,GAAL,CAASV,SAAT,CAAL,IAA4BI,EAAE,GAAGE,EAAjC,CAAD,GAAyC,GAAzC,GAAgDpB,IAAI,CAACuB,GAAL,CAAST,SAAT,KAAuBK,EAAE,GAAGE,EAA5B,CAAD,GAAoC,GAA9F;AACA,MAAMK,MAAM,GAAIJ,EAAE,GAAGA,EAAN,IAAaV,EAAE,GAAGA,EAAlB,IAAyBa,EAAE,GAAGA,EAAN,IAAaZ,EAAE,GAAGA,EAAlB,CAAvC;;AAEA,MAAIa,MAAM,GAAG,CAAb,EAAgB;AACdd,MAAE,IAAIZ,IAAI,CAACC,IAAL,CAAUyB,MAAV,CAAN;AACAb,MAAE,IAAIb,IAAI,CAACC,IAAL,CAAUyB,MAAV,CAAN;AACD;;AACD,MAAMC,IAAI,GAAGf,EAAE,GAAGA,EAAL,IAAWa,EAAE,GAAGA,EAAhB,IAAsBZ,EAAE,GAAGA,EAAL,IAAWS,EAAE,GAAGA,EAAhB,CAAnC;AAEA,MAAIM,CAAC,GAAGD,IAAI,GAAG3B,IAAI,CAACC,IAAL,CAAU,CAACW,EAAE,GAAGA,EAAL,IAAWC,EAAE,GAAGA,EAAhB,IAAsBc,IAAvB,IAA+BA,IAAzC,CAAH,GAAoD,CAAhE;;AAEA,MAAIX,OAAO,KAAKC,SAAhB,EAA2B;AACzBW,KAAC,IAAI,CAAC,CAAN;AACD;;AACD,MAAIC,KAAK,CAACD,CAAD,CAAT,EAAc;AACZA,KAAC,GAAG,CAAJ;AACD,GA7BoD,CA+BrD;;;AACA,MAAME,GAAG,GAAGjB,EAAE,GAAIe,CAAC,GAAGhB,EAAJ,GAASa,EAAV,GAAgBZ,EAAnB,GAAwB,CAAtC;AACA,MAAMkB,GAAG,GAAGnB,EAAE,GAAIgB,CAAC,GAAG,CAACf,EAAL,GAAUS,EAAX,GAAiBV,EAApB,GAAyB,CAAvC,CAjCqD,CAmCrD;;AACA,MAAMoB,EAAE,GAAG,CAACd,EAAE,GAAGE,EAAN,IAAY,GAAZ,GAAkBpB,IAAI,CAACuB,GAAL,CAAST,SAAT,IAAsBgB,GAAxC,GAA8C9B,IAAI,CAACwB,GAAL,CAASV,SAAT,IAAsBiB,GAA/E;AACA,MAAME,EAAE,GAAG,CAACd,EAAE,GAAGE,EAAN,IAAY,GAAZ,GAAkBrB,IAAI,CAACwB,GAAL,CAASV,SAAT,IAAsBgB,GAAxC,GAA8C9B,IAAI,CAACuB,GAAL,CAAST,SAAT,IAAsBiB,GAA/E,CArCqD,CAuCrD;;AACA,MAAM5B,CAAC,GAAG,CAAC,CAACmB,EAAE,GAAGQ,GAAN,IAAalB,EAAd,EAAkB,CAACa,EAAE,GAAGM,GAAN,IAAalB,EAA/B,CAAV,CAxCqD,CAyCrD;;AACA,MAAMd,CAAC,GAAG,CAAC,CAAC,CAAC,CAAD,GAAKuB,EAAL,GAAUQ,GAAX,IAAkBlB,EAAnB,EAAuB,CAAC,CAAC,CAAD,GAAKa,EAAL,GAAUM,GAAX,IAAkBlB,EAAzC,CAAV,CA1CqD,CA2CrD;;AACA,MAAMqB,KAAK,GAAG9B,MAAM,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAASD,CAAT,CAApB,CA5CqD,CA8CrD;;AACA,MAAIgC,MAAM,GAAG/B,MAAM,CAACD,CAAD,EAAIJ,CAAJ,CAAnB;;AAEA,MAAIG,MAAM,CAACC,CAAD,EAAIJ,CAAJ,CAAN,IAAgB,CAAC,CAArB,EAAwB;AACtBoC,UAAM,GAAGnC,IAAI,CAACe,EAAd;AACD;;AACD,MAAIb,MAAM,CAACC,CAAD,EAAIJ,CAAJ,CAAN,IAAgB,CAApB,EAAuB;AACrBoC,UAAM,GAAG,CAAT;AACD;;AACD,MAAIlB,SAAS,KAAK,CAAd,IAAmBkB,MAAM,GAAG,CAAhC,EAAmC;AACjCA,UAAM,GAAGA,MAAM,GAAG,IAAInC,IAAI,CAACe,EAA3B;AACD;;AACD,MAAIE,SAAS,KAAK,CAAd,IAAmBkB,MAAM,GAAG,CAAhC,EAAmC;AACjCA,UAAM,GAAGA,MAAM,GAAG,IAAInC,IAAI,CAACe,EAA3B;AACD;;AACD,SAAO;AACLiB,MAAE,IADG;AAELC,MAAE,IAFG;AAGL;AACArB,MAAE,EAAEN,WAAW,CAACI,UAAD,EAAa,CAACU,EAAD,EAAKC,EAAL,CAAb,CAAX,GAAoC,CAApC,GAAwCT,EAJvC;AAKLC,MAAE,EAAEP,WAAW,CAACI,UAAD,EAAa,CAACU,EAAD,EAAKC,EAAL,CAAb,CAAX,GAAoC,CAApC,GAAwCR,EALvC;AAMLuB,cAAU,EAAEF,KANP;AAOLG,YAAQ,EAAEH,KAAK,GAAGC,MAPb;AAQLrB,aAAS,WARJ;AASLE,WAAO,SATF;AAULC,aAAS;AAVJ,GAAP;AAYD","names":["mod","n","m","vMag","v","Math","sqrt","vRatio","u","vAngle","acos","isSamePoint","point1","point2","getArcParams","startPoint","params","rx","ry","xRotation","PI","arcFlag","sweepFlag","x1","y1","x2","y2","xp","cos","sin","yp","lambda","diff","f","isNaN","cxp","cyp","cx","cy","theta","dTheta","startAngle","endAngle"],"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/@antv/path-util/src/get-arc-params.ts"],"sourcesContent":["const mod = function (n: number, m: number): number {\n  return ((n % m) + m) % m;\n};\n\n// 向量长度\nfunction vMag(v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n}\n\n// u.v/|u||v|，计算夹角的余弦值\nfunction vRatio(u, v) {\n  // 当存在一个向量的长度为 0 时，夹角也为 0，即夹角的余弦值为 1\n  return vMag(u) * vMag(v) ? (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v)) : 1;\n}\n\n// 向量角度\nfunction vAngle(u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n}\n\n/**\n * 判断两个点是否重合，点坐标的格式为 [x, y]\n * @param {Array} point1 第一个点\n * @param {Array} point2 第二个点\n */\nexport function isSamePoint(point1, point2) {\n  return point1[0] === point2[0] && point1[1] === point2[1];\n}\n\n// A 0:rx 1:ry 2:x-axis-rotation 3:large-arc-flag 4:sweep-flag 5: x 6: y\nexport default function getArcParams(startPoint, params) {\n  let rx = params[1];\n  let ry = params[2];\n  const xRotation = mod((params[3] * Math.PI) / 180, Math.PI * 2);\n  const arcFlag = params[4];\n  const sweepFlag = params[5];\n  // 弧形起点坐标\n  const x1 = startPoint[0];\n  const y1 = startPoint[1];\n  // 弧形终点坐标\n  const x2 = params[6];\n  const y2 = params[7];\n  const xp = (Math.cos(xRotation) * (x1 - x2)) / 2.0 + (Math.sin(xRotation) * (y1 - y2)) / 2.0;\n  const yp = (-1 * Math.sin(xRotation) * (x1 - x2)) / 2.0 + (Math.cos(xRotation) * (y1 - y2)) / 2.0;\n  const lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= Math.sqrt(lambda);\n    ry *= Math.sqrt(lambda);\n  }\n  const diff = rx * rx * (yp * yp) + ry * ry * (xp * xp);\n\n  let f = diff ? Math.sqrt((rx * rx * (ry * ry) - diff) / diff) : 1;\n\n  if (arcFlag === sweepFlag) {\n    f *= -1;\n  }\n  if (isNaN(f)) {\n    f = 0;\n  }\n\n  // 旋转前的起点坐标，且当长半轴和短半轴的长度为 0 时，坐标按 (0, 0) 处理\n  const cxp = ry ? (f * rx * yp) / ry : 0;\n  const cyp = rx ? (f * -ry * xp) / rx : 0;\n\n  // 椭圆圆心坐标\n  const cx = (x1 + x2) / 2.0 + Math.cos(xRotation) * cxp - Math.sin(xRotation) * cyp;\n  const cy = (y1 + y2) / 2.0 + Math.sin(xRotation) * cxp + Math.cos(xRotation) * cyp;\n\n  // 起始点的单位向量\n  const u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  // 终止点的单位向量\n  const v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  // 计算起始点和圆心的连线，与 x 轴正方向的夹角\n  const theta = vAngle([1, 0], u);\n\n  // 计算圆弧起始点和终止点与椭圆圆心连线的夹角\n  let dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = Math.PI;\n  }\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n  if (sweepFlag === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * Math.PI;\n  }\n  if (sweepFlag === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * Math.PI;\n  }\n  return {\n    cx,\n    cy,\n    // 弧形的起点和终点相同时，长轴和短轴的长度按 0 处理\n    rx: isSamePoint(startPoint, [x2, y2]) ? 0 : rx,\n    ry: isSamePoint(startPoint, [x2, y2]) ? 0 : ry,\n    startAngle: theta,\n    endAngle: theta + dTheta,\n    xRotation,\n    arcFlag,\n    sweepFlag,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}