{"ast":null,"code":"import { __assign, __extends, __rest } from \"tslib\";\nimport { Line as LineUtil } from '@antv/g-math';\nimport { Shape } from '../types';\nimport { DisplayObject } from './DisplayObject';\nimport { Point } from '../shapes';\n\nvar Polyline =\n/** @class */\nfunction (_super) {\n  __extends(Polyline, _super);\n\n  function Polyline(_a) {\n    if (_a === void 0) {\n      _a = {};\n    }\n\n    var style = _a.style,\n        rest = __rest(_a, [\"style\"]);\n\n    return _super.call(this, __assign({\n      type: Shape.POLYLINE,\n      style: __assign({\n        points: [],\n        lineWidth: 1,\n        miterLimit: 4\n      }, style)\n    }, rest)) || this;\n  }\n\n  Polyline.prototype.getTotalLength = function () {\n    return this.parsedStyle.points.totalLength;\n  };\n\n  Polyline.prototype.getPoint = function (ratio) {\n    var _a = this.parsedStyle.points,\n        points = _a.points,\n        segments = _a.segments;\n    var subt = 0;\n    var index = 0;\n    segments.forEach(function (v, i) {\n      if (ratio >= v[0] && ratio <= v[1]) {\n        subt = (ratio - v[0]) / (v[1] - v[0]);\n        index = i;\n      }\n    });\n\n    var _b = LineUtil.pointAt(points[index][0], points[index][1], points[index + 1][0], points[index + 1][1], subt),\n        x = _b.x,\n        y = _b.y;\n\n    return new Point(x, y);\n  };\n\n  Polyline.prototype.getStartTangent = function () {\n    var points = this.parsedStyle.points.points;\n    var result = [];\n    result.push([points[1][0], points[1][1]]);\n    result.push([points[0][0], points[0][1]]);\n    return result;\n  };\n\n  Polyline.prototype.getEndTangent = function () {\n    var points = this.parsedStyle.points.points;\n    var l = points.length - 1;\n    var result = [];\n    result.push([points[l - 1][0], points[l - 1][1]]);\n    result.push([points[l][0], points[l][1]]);\n    return result;\n  };\n\n  return Polyline;\n}(DisplayObject);\n\nexport { Polyline };","map":{"version":3,"sources":["/Users/dennis.zhang/Desktop/其它代码库/moa-flow/node_modules/@antv/g/es/display-objects/Polyline.js"],"names":["__assign","__extends","__rest","Line","LineUtil","Shape","DisplayObject","Point","Polyline","_super","_a","style","rest","call","type","POLYLINE","points","lineWidth","miterLimit","prototype","getTotalLength","parsedStyle","totalLength","getPoint","ratio","segments","subt","index","forEach","v","i","_b","pointAt","x","y","getStartTangent","result","push","getEndTangent","l","length"],"mappings":"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","sourcesContent":["import { __assign, __extends, __rest } from \"tslib\";\nimport { Line as LineUtil } from '@antv/g-math';\nimport { Shape } from '../types';\nimport { DisplayObject } from './DisplayObject';\nimport { Point } from '../shapes';\n\nvar Polyline =\n/** @class */\nfunction (_super) {\n  __extends(Polyline, _super);\n\n  function Polyline(_a) {\n    if (_a === void 0) {\n      _a = {};\n    }\n\n    var style = _a.style,\n        rest = __rest(_a, [\"style\"]);\n\n    return _super.call(this, __assign({\n      type: Shape.POLYLINE,\n      style: __assign({\n        points: [],\n        lineWidth: 1,\n        miterLimit: 4\n      }, style)\n    }, rest)) || this;\n  }\n\n  Polyline.prototype.getTotalLength = function () {\n    return this.parsedStyle.points.totalLength;\n  };\n\n  Polyline.prototype.getPoint = function (ratio) {\n    var _a = this.parsedStyle.points,\n        points = _a.points,\n        segments = _a.segments;\n    var subt = 0;\n    var index = 0;\n    segments.forEach(function (v, i) {\n      if (ratio >= v[0] && ratio <= v[1]) {\n        subt = (ratio - v[0]) / (v[1] - v[0]);\n        index = i;\n      }\n    });\n\n    var _b = LineUtil.pointAt(points[index][0], points[index][1], points[index + 1][0], points[index + 1][1], subt),\n        x = _b.x,\n        y = _b.y;\n\n    return new Point(x, y);\n  };\n\n  Polyline.prototype.getStartTangent = function () {\n    var points = this.parsedStyle.points.points;\n    var result = [];\n    result.push([points[1][0], points[1][1]]);\n    result.push([points[0][0], points[0][1]]);\n    return result;\n  };\n\n  Polyline.prototype.getEndTangent = function () {\n    var points = this.parsedStyle.points.points;\n    var l = points.length - 1;\n    var result = [];\n    result.push([points[l - 1][0], points[l - 1][1]]);\n    result.push([points[l][0], points[l][1]]);\n    return result;\n  };\n\n  return Polyline;\n}(DisplayObject);\n\nexport { Polyline };"]},"metadata":{},"sourceType":"module"}