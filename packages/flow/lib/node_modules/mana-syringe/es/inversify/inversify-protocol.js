function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function isInversifyRegister(data) {
  return data && _typeof(data) === 'object' && 'bind' in data && 'unbind' in data && 'rebind' in data && 'isBound' in data;
}

export { isInversifyRegister };
