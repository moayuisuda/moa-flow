import { __exports as inject$1 } from '../../../../_virtual/inject.js';
export { __exports as default } from '../../../../_virtual/inject.js';
import '../constants/error_msgs.js';
import '../constants/metadata_keys.js';
import '../planning/metadata.js';
import './decorator_utils.js';
import { __exports as error_msgs } from '../../../../_virtual/error_msgs.js';
import { __exports as metadata_keys } from '../../../../_virtual/metadata_keys.js';
import { __exports as metadata } from '../../../../_virtual/metadata.js';
import { __exports as decorator_utils } from '../../../../_virtual/decorator_utils.js';

Object.defineProperty(inject$1, "__esModule", { value: true });
inject$1.inject = inject$1.LazyServiceIdentifer = void 0;
var error_msgs_1 = error_msgs;
var METADATA_KEY = metadata_keys;
var metadata_1 = metadata;
var decorator_utils_1 = decorator_utils;
var LazyServiceIdentifer = (function () {
    function LazyServiceIdentifer(cb) {
        this._cb = cb;
    }
    LazyServiceIdentifer.prototype.unwrap = function () {
        return this._cb();
    };
    return LazyServiceIdentifer;
}());
inject$1.LazyServiceIdentifer = LazyServiceIdentifer;
function inject(serviceIdentifier) {
    return function (target, targetKey, index) {
        if (serviceIdentifier === undefined) {
            throw new Error(error_msgs_1.UNDEFINED_INJECT_ANNOTATION(target.name));
        }
        var metadata = new metadata_1.Metadata(METADATA_KEY.INJECT_TAG, serviceIdentifier);
        if (typeof index === "number") {
            decorator_utils_1.tagParameter(target, targetKey, index, metadata);
        }
        else {
            decorator_utils_1.tagProperty(target, targetKey, metadata);
        }
    };
}
inject$1.inject = inject;
