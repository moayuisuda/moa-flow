import { __exports as binding } from '../../../../_virtual/binding.js';
export { __exports as default } from '../../../../_virtual/binding.js';
import '../constants/literal_types.js';
import '../utils/id.js';
import { __exports as literal_types } from '../../../../_virtual/literal_types.js';
import { __exports as id } from '../../../../_virtual/id.js';

Object.defineProperty(binding, "__esModule", { value: true });
binding.Binding = void 0;
var literal_types_1 = literal_types;
var id_1 = id;
var Binding = (function () {
    function Binding(serviceIdentifier, scope) {
        this.id = id_1.id();
        this.activated = false;
        this.serviceIdentifier = serviceIdentifier;
        this.scope = scope;
        this.type = literal_types_1.BindingTypeEnum.Invalid;
        this.constraint = function (request) { return true; };
        this.implementationType = null;
        this.cache = null;
        this.factory = null;
        this.provider = null;
        this.onActivation = null;
        this.dynamicValue = null;
    }
    Binding.prototype.clone = function () {
        var clone = new Binding(this.serviceIdentifier, this.scope);
        clone.activated = (clone.scope === literal_types_1.BindingScopeEnum.Singleton) ? this.activated : false;
        clone.implementationType = this.implementationType;
        clone.dynamicValue = this.dynamicValue;
        clone.scope = this.scope;
        clone.type = this.type;
        clone.factory = this.factory;
        clone.provider = this.provider;
        clone.constraint = this.constraint;
        clone.onActivation = this.onActivation;
        clone.cache = this.cache;
        return clone;
    };
    return Binding;
}());
binding.Binding = Binding;
