import { Shape } from '@antv/g';
import { Module } from 'mana-syringe';
import { PointInPathPickerFactory, CanvasPickerPlugin } from './CanvasPickerPlugin.js';
import { isPointInPath } from './Circle.js';
import { isPointInPath as isPointInPath$1 } from './Ellipse.js';
import { isPointInPath as isPointInPath$3 } from './Line.js';
import { isPointInPath as isPointInPath$4 } from './Polyline.js';
import { isPointInPath as isPointInPath$6 } from './Path.js';
import { isPointInPath as isPointInPath$2 } from './Rect.js';
import { isPointInPath as isPointInPath$5 } from './Polygon.js';

var containerModule = Module(function (register) {
  register({
    token: PointInPathPickerFactory,
    useFactory: function useFactory(context) {
      return function (tagName) {
        if (tagName === Shape.CIRCLE) {
          return isPointInPath;
        } else if (tagName === Shape.ELLIPSE) {
          return isPointInPath$1;
        } else if (tagName === Shape.RECT) {
          return isPointInPath$2;
        } else if (tagName === Shape.LINE) {
          return isPointInPath$3;
        } else if (tagName === Shape.POLYLINE) {
          return isPointInPath$4;
        } else if (tagName === Shape.POLYGON) {
          return isPointInPath$5;
        } else if (tagName === Shape.PATH) {
          return isPointInPath$6;
        } else if (tagName === Shape.IMAGE || tagName === Shape.TEXT // tagName === Shape.GROUP
        ) {
          return function () {
            return true;
          };
        }

        return null;
      };
    }
  });
  register(CanvasPickerPlugin);
});

var Plugin =
/** @class */
function () {
  function Plugin() {}

  Plugin.prototype.init = function (container) {
    container.load(containerModule, true);
  };

  Plugin.prototype.destroy = function (container) {
    container.unload(containerModule);
  };

  return Plugin;
}();

export { Plugin };
