import { inPolyline, inPolygon } from './utils/math.js';

function isPointInPath(displayObject, position) {
  var _a = displayObject.parsedStyle,
      stroke = _a.stroke,
      fill = _a.fill,
      lineWidth = _a.lineWidth,
      points = _a.points,
      _b = _a.defX,
      x = _b === void 0 ? 0 : _b,
      _c = _a.defY,
      y = _c === void 0 ? 0 : _c,
      clipPathTargets = _a.clipPathTargets;
  var isClipPath = !!(clipPathTargets === null || clipPathTargets === void 0 ? void 0 : clipPathTargets.length);
  var hasFill = fill && !fill.isNone;
  var hasStroke = stroke && !stroke.isNone;
  var isHit = false;

  if (hasStroke || isClipPath) {
    isHit = inPolyline(points.points, lineWidth.value, position.x + x, position.y + y, true);
  }

  if (!isHit && (hasFill || isClipPath)) {
    isHit = inPolygon(points.points, position.x + x, position.y + y);
  }

  return isHit;
}

export { isPointInPath };
