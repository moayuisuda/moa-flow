import { distance } from './utils/math.js';

function isPointInPath(displayObject, position) {
  var _a = displayObject.parsedStyle,
      rInPixels = _a.r,
      fill = _a.fill,
      stroke = _a.stroke,
      lineWidth = _a.lineWidth,
      clipPathTargets = _a.clipPathTargets;
  var r = rInPixels.value;
  var halfLineWidth = lineWidth.value / 2;
  var absDistance = distance(r, r, position.x, position.y);
  var isClipPath = !!(clipPathTargets === null || clipPathTargets === void 0 ? void 0 : clipPathTargets.length);
  var hasFill = fill && !fill.isNone;
  var hasStroke = stroke && !stroke.isNone; // 直接用距离，如果同时存在边和填充时，可以减少两次计算

  if (hasFill && hasStroke || isClipPath) {
    return absDistance <= r + halfLineWidth;
  }

  if (hasFill) {
    return absDistance <= r;
  }

  if (hasStroke) {
    return absDistance >= r - halfLineWidth && absDistance <= r + halfLineWidth;
  }

  return false;
}

export { isPointInPath };
