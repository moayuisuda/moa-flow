import { inPolyline } from './utils/math.js';

function isPointInPath(displayObject, position) {
  var _a = displayObject.parsedStyle,
      stroke = _a.stroke,
      lineWidth = _a.lineWidth,
      points = _a.points,
      _b = _a.defX,
      x = _b === void 0 ? 0 : _b,
      _c = _a.defY,
      y = _c === void 0 ? 0 : _c,
      clipPathTargets = _a.clipPathTargets;
  var isClipPath = !!(clipPathTargets === null || clipPathTargets === void 0 ? void 0 : clipPathTargets.length);
  var hasStroke = displayObject.attributes.stroke !== 'none' && !!stroke;

  if (!hasStroke && !isClipPath || !lineWidth) {
    return false;
  }

  return inPolyline(points.points, lineWidth.value, position.x + x, position.y + y, false);
}

export { isPointInPath };
