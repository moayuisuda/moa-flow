import { __decorate, __metadata } from '../../../tslib/tslib.es6.js';
import { inject, singleton } from 'mana-syringe';
import { ElementEvent, RenderingContext, RenderingPluginContribution, Shape } from '@antv/g';
import { ImagePool } from './shapes/ImagePool.js';
import isString from '../../../lodash-es/isString.js';

var LoadImagePlugin =
/** @class */
function () {
  function LoadImagePlugin() {}

  LoadImagePlugin_1 = LoadImagePlugin;

  LoadImagePlugin.prototype.apply = function (renderingService) {
    var _this = this;

    var handleMounted = function handleMounted(e) {
      var object = e.target;
      var nodeName = object.nodeName,
          attributes = object.attributes;

      if (nodeName === Shape.IMAGE) {
        var img = attributes.img;

        if (isString(img)) {
          _this.imagePool.getOrCreateImage(img).then(function () {
            // set dirty rectangle flag
            object.renderable.dirty = true;
            renderingService.dirtify();
          });
        }
      }
    };

    var handleAttributeChanged = function handleAttributeChanged(e) {
      var object = e.target;
      var attrName = e.attrName,
          newValue = e.newValue;

      if (object.nodeName === Shape.IMAGE) {
        if (attrName === 'img') {
          if (isString(newValue)) {
            _this.imagePool.getOrCreateImage(newValue).then(function () {
              // set dirty rectangle flag
              object.renderable.dirty = true;
              renderingService.dirtify();
            });
          }
        }
      }
    };

    renderingService.hooks.init.tap(LoadImagePlugin_1.tag, function () {
      _this.renderingContext.root.addEventListener(ElementEvent.MOUNTED, handleMounted);

      _this.renderingContext.root.addEventListener(ElementEvent.ATTR_MODIFIED, handleAttributeChanged);
    });
    renderingService.hooks.destroy.tap(LoadImagePlugin_1.tag, function () {
      _this.renderingContext.root.removeEventListener(ElementEvent.MOUNTED, handleMounted);

      _this.renderingContext.root.removeEventListener(ElementEvent.ATTR_MODIFIED, handleAttributeChanged);
    });
  };

  var LoadImagePlugin_1;
  LoadImagePlugin.tag = 'LoadImagePlugin';

  __decorate([inject(ImagePool), __metadata("design:type", ImagePool)], LoadImagePlugin.prototype, "imagePool", void 0);

  __decorate([inject(RenderingContext), __metadata("design:type", Object)], LoadImagePlugin.prototype, "renderingContext", void 0);

  LoadImagePlugin = LoadImagePlugin_1 = __decorate([singleton({
    contrib: RenderingPluginContribution
  })], LoadImagePlugin);
  return LoadImagePlugin;
}();

export { LoadImagePlugin };
