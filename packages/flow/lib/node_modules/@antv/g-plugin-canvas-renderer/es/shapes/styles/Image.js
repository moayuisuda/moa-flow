import { __decorate, __metadata } from '../../../../../tslib/tslib.es6.js';
import { Shape } from '@antv/g';
import { inject, singleton } from 'mana-syringe';
import { ImagePool } from '../ImagePool.js';
import { StyleRenderer } from './interfaces.js';
import isString from '../../../../../lodash-es/isString.js';

var ImageRenderer =
/** @class */
function () {
  function ImageRenderer() {}

  ImageRenderer.prototype.hash = function (parsedStyle) {
    return '';
  };

  ImageRenderer.prototype.render = function (context, parsedStyle) {
    var width = parsedStyle.width,
        height = parsedStyle.height,
        img = parsedStyle.img;
    var image;
    var iw = width.value;
    var ih = height.value;

    if (isString(img)) {
      // image has been loaded in `mounted` hook
      image = this.imagePool.getImageSync(img);
    } else {
      iw || (iw = img.width);
      ih || (ih = img.height);
      image = img;
    }

    if (image) {
      context.drawImage(image, 0, 0, iw, ih);
    }
  };

  __decorate([inject(ImagePool), __metadata("design:type", ImagePool)], ImageRenderer.prototype, "imagePool", void 0);

  ImageRenderer = __decorate([singleton({
    token: {
      token: StyleRenderer,
      named: Shape.IMAGE
    }
  })], ImageRenderer);
  return ImageRenderer;
}();

export { ImageRenderer };
