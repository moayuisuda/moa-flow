import { fromValues, dot, len, scale, lerp } from '../../../../gl-matrix/esm/vec3.js';

var Plane =
/** @class */
function () {
  function Plane(distance, normal) {
    this.distance = distance || 0;
    this.normal = normal || fromValues(0, 1, 0);
    this.updatePNVertexFlag();
  }

  Plane.prototype.updatePNVertexFlag = function () {
    this.pnVertexFlag = (Number(this.normal[0] >= 0) << 8) + (Number(this.normal[1] >= 0) << 4) + Number(this.normal[2] >= 0);
  };

  Plane.prototype.distanceToPoint = function (point) {
    return dot(point, this.normal) - this.distance;
  };

  Plane.prototype.normalize = function () {
    var invLen = 1 / len(this.normal);
    scale(this.normal, this.normal, invLen);
    this.distance *= invLen;
  };

  Plane.prototype.intersectsLine = function (start, end, point) {
    var d0 = this.distanceToPoint(start);
    var d1 = this.distanceToPoint(end);
    var t = d0 / (d0 - d1);
    var intersects = t >= 0 && t <= 1;

    if (intersects && point) {
      lerp(point, start, end, t);
    }

    return intersects;
  };

  return Plane;
}();

export { Plane };
