import { __extends, __rest, __assign } from '../../../../tslib/tslib.es6.js';
import { Shape } from '../types.js';
import { DisplayObject } from './DisplayObject.js';

/**
 * <text> @see https://developer.mozilla.org/en-US/docs/Web/API/SVGTextElement
 */

var Text =
/** @class */
function (_super) {
  __extends(Text, _super);

  function Text(_a) {
    if (_a === void 0) {
      _a = {};
    }

    var _this = this;

    var style = _a.style,
        rest = __rest(_a, ["style"]);

    _this = _super.call(this, __assign({
      type: Shape.TEXT,
      style: __assign({
        text: '',
        fontSize: '',
        fontFamily: '',
        fontStyle: '',
        fontWeight: '',
        fontVariant: '',
        textAlign: '',
        textBaseline: '',
        textTransform: '',
        // dropShadow: false,
        // dropShadowAlpha: 1,
        // dropShadowAngle: Math.PI / 6,
        // dropShadowBlur: 0,
        // dropShadowColor: '#000',
        // dropShadowDistance: 5,
        fill: 'black',
        stroke: 'black',
        letterSpacing: 0,
        lineHeight: 0,
        lineWidth: 0,
        miterLimit: 10,
        whiteSpace: 'pre',
        wordWrap: false,
        wordWrapWidth: 0,
        leading: 0,
        dx: 0,
        dy: 0
      }, style)
    }, rest)) || this;
    /**
     * @see https://developer.mozilla.org/en-US/docs/Web/API/SVGTextContentElement#constants
     */

    _this.LENGTHADJUST_SPACING = 1;
    _this.LENGTHADJUST_SPACINGANDGLYPHS = 2;
    _this.LENGTHADJUST_UNKNOWN = 0;
    return _this;
  }

  Text.prototype.getCharNumAtPosition = function (point) {
    throw new Error('Method not implemented.');
  };
  /**
   * @see https://developer.mozilla.org/en-US/docs/Web/API/SVGTextContentElement
   */


  Text.prototype.getComputedTextLength = function () {
    var _a;

    return ((_a = this.parsedStyle.metrics) === null || _a === void 0 ? void 0 : _a.maxLineWidth) || 0;
  };

  Text.prototype.getEndPositionOfChar = function (charnum) {
    throw new Error('Method not implemented.');
  };

  Text.prototype.getExtentOfChar = function (charnum) {
    throw new Error('Method not implemented.');
  };

  Text.prototype.getNumberOfChars = function () {
    throw new Error('Method not implemented.');
  };

  Text.prototype.getRotationOfChar = function (charnum) {
    throw new Error('Method not implemented.');
  };

  Text.prototype.getStartPositionOfChar = function (charnum) {
    throw new Error('Method not implemented.');
  };

  Text.prototype.getSubStringLength = function (charnum, nchars) {
    throw new Error('Method not implemented.');
  };

  Text.prototype.selectSubString = function (charnum, nchars) {
    throw new Error('Method not implemented.');
  };

  Text.prototype.getLineBoundingRects = function () {
    var _a;

    return ((_a = this.parsedStyle.metrics) === null || _a === void 0 ? void 0 : _a.lineMetrics) || [];
  };

  return Text;
}(DisplayObject);

export { Text };
