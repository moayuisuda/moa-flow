var TransformComponentType;

(function (TransformComponentType) {
  TransformComponentType[TransformComponentType["kMatrixType"] = 0] = "kMatrixType";
  TransformComponentType[TransformComponentType["kPerspectiveType"] = 1] = "kPerspectiveType";
  TransformComponentType[TransformComponentType["kRotationType"] = 2] = "kRotationType";
  TransformComponentType[TransformComponentType["kScaleType"] = 3] = "kScaleType";
  TransformComponentType[TransformComponentType["kSkewType"] = 4] = "kSkewType";
  TransformComponentType[TransformComponentType["kSkewXType"] = 5] = "kSkewXType";
  TransformComponentType[TransformComponentType["kSkewYType"] = 6] = "kSkewYType";
  TransformComponentType[TransformComponentType["kTranslationType"] = 7] = "kTranslationType";
})(TransformComponentType || (TransformComponentType = {}));
/**
 * CSSTransformComponent is the base class used for the representations of
 * the individual CSS transforms. They are combined in a CSSTransformValue
 * before they can be used as a value for properties like "transform".
 *
 * @see https://drafts.css-houdini.org/css-typed-om/#csstransformcomponent
 */


var CSSTransformComponent =
/** @class */
function () {
  function CSSTransformComponent(is2D) {
    this.is2D = is2D;
  }

  return CSSTransformComponent;
}();

export { CSSTransformComponent, TransformComponentType };
