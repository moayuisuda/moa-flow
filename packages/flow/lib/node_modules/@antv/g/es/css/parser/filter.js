import { parseColor } from './color.js';
import { parseDimension } from './dimension.js';

var parseParam = parseDimension.bind(null, /deg|rad|grad|turn|px|%/g);
var supportedFilters = ['blur', 'brightness', 'drop-shadow', 'contrast', 'grayscale', 'sepia', 'saturate', 'hue-rotate', 'invert'];
function parseFilter(filterStr) {
  if (filterStr === void 0) {
    filterStr = '';
  }

  filterStr = filterStr.toLowerCase().trim();

  if (filterStr === 'none') {
    return [];
  }

  var filterRegExp = /\s*([\w-]+)\(([^)]*)\)/g;
  var result = [];
  var match;
  var prevLastIndex = 0;

  while (match = filterRegExp.exec(filterStr)) {
    if (match.index !== prevLastIndex) {
      return [];
    }

    prevLastIndex = match.index + match[0].length;

    if (supportedFilters.indexOf(match[1]) > -1) {
      result.push({
        name: match[1],
        params: match[2].split(' ').map(function (p) {
          return parseParam(p) || parseColor(p);
        })
      });
    }

    if (filterRegExp.lastIndex === filterStr.length) {
      return result;
    }
  }

  return [];
}

export { parseFilter, parseParam };
