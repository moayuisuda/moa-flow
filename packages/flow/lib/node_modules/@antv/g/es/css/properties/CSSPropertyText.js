import { __decorate } from '../../../../../tslib/tslib.es6.js';
import { singleton } from '../../../../../mana-syringe/es/decorator.js';
import '../../../../../mana-syringe/es/container.js';
import '../../../../../mana-syringe/es/core.js';
import '../../../../../mana-syringe/es/contribution/contribution-protocol.js';
import '../../../../../inversify/lib/inversify.js';
import '../../../../../mana-syringe/es/register.js';
import '../../../../../mana-syringe/es/contribution/index.js';
import '../cssom/types.js';
import '../cssom/CSSColorValue.js';
import { CSSKeywordValue } from '../cssom/CSSKeywordValue.js';
import '../cssom/CSSMathOperator.js';
import '../cssom/CSSMathInvert.js';
import '../cssom/CSSMathMax.js';
import '../cssom/CSSMathMin.js';
import '../cssom/CSSMathNegate.js';
import '../cssom/CSSMathProduct.js';
import '../cssom/CSSMathSum.js';
import '../cssom/CSSMathValue.js';
import '../cssom/CSSMathVariadic.js';
import '../cssom/CSSNumericValue.js';
import '../cssom/CSSNumericValueType.js';
import '../cssom/CSSRGB.js';
import '../cssom/CSSGradientValue.js';
import '../cssom/CSSStyleValue.js';
import '../cssom/CSSTransformValue.js';
import '../cssom/CSSTranslate.js';
import '../cssom/CSSUnitValue.js';

var CSSPropertyText =
/** @class */
function () {
  function CSSPropertyText() {}

  CSSPropertyText.prototype.calculator = function (name, oldParsed, parsed, object) {
    if (parsed instanceof CSSKeywordValue) {
      if (parsed.value === 'unset') {
        return '';
      } else {
        return parsed.value;
      }
    }

    return parsed;
  };

  CSSPropertyText.prototype.postProcessor = function (object) {
    object.nodeValue = "".concat(object.parsedStyle.text) || '';
  };

  CSSPropertyText = __decorate([singleton()], CSSPropertyText);
  return CSSPropertyText;
}();

export { CSSPropertyText };
