import { __extends } from '../../../../../tslib/tslib.es6.js';
import { CSSColorValue } from './CSSColorValue.js';

/**
 * The CSSRGB class represents the CSS rgb()/rgba() functions.
 *
 * @see https://drafts.css-houdini.org/css-typed-om-1/#cssrgb
 */

var CSSRGB =
/** @class */
function (_super) {
  __extends(CSSRGB, _super);

  function CSSRGB(r, g, b, alpha,
  /**
   * 'transparent' & 'none' has the same rgba data
   */
  isNone) {
    if (alpha === void 0) {
      alpha = 1;
    }

    if (isNone === void 0) {
      isNone = false;
    }

    var _this = _super.call(this, 'rgb') || this;

    _this.r = r;
    _this.g = g;
    _this.b = b;
    _this.alpha = alpha;
    _this.isNone = isNone;
    return _this;
  }

  CSSRGB.prototype.clone = function () {
    return new CSSRGB(this.r, this.g, this.b, this.alpha);
  };

  CSSRGB.prototype.buildCSSText = function (n, p, result) {
    return result + "rgba(".concat(this.r, ",").concat(this.g, ",").concat(this.b, ",").concat(this.alpha, ")");
  };

  return CSSRGB;
}(CSSColorValue);

export { CSSRGB };
