import { __extends } from '../../../../../tslib/tslib.es6.js';
import { CSSMathValue } from './CSSMathValue.js';

function typeCheck(values, op, error) {
  error = false;
  var final_type = values[0].type_;

  for (var i = 1; i < values.length; i++) {
    final_type = op(final_type, values[i].type_, error);
    if (error) return final_type;
  }

  return final_type;
} // Represents an arithmetic operation with one or more CSSNumericValues.

var CSSMathVariadic =
/** @class */
function (_super) {
  __extends(CSSMathVariadic, _super);

  function CSSMathVariadic(values, type) {
    var _this = _super.call(this, type) || this;

    _this.values = values;
    return _this;
  }

  CSSMathVariadic.prototype.numericValues = function () {
    return this.values;
  };

  CSSMathVariadic.prototype.equals = function (other) {
    if (this.getType() !== other.getType()) {
      return false;
    }

    return this.values.every(function (value, i) {
      return value.equals(other.values[i]);
    });
  };

  return CSSMathVariadic;
}(CSSMathValue);

export { CSSMathVariadic, typeCheck };
