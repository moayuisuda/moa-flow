import { injectable } from '../../../mana-syringe/es/decorator.js';
import '../../../mana-syringe/es/container.js';
import { Module } from '../../../mana-syringe/es/module/index.js';
import '../../../mana-syringe/es/contribution/index.js';
import '../../../mana-syringe/es/core.js';
import '../../../eventemitter3/index.js';
import { DisplayObjectPool } from './DisplayObjectPool.js';
import { SceneGraphService, DefaultSceneGraphService } from './services/SceneGraphService.js';
import './services/ContextService.js';
import './services/RenderingContext.js';
import './services/RenderingService.js';
import './services/EventService.js';
import { DefaultSceneGraphSelector, SceneGraphSelectorFactory, SceneGraphSelector } from './services/SceneGraphSelector.js';
import { TextService } from './services/TextService.js';
import { OffscreenCanvasCreator } from './services/OffscreenCanvasCreator.js';
import { GeometryUpdaterFactory, GeometryAABBUpdater } from './services/aabb/interfaces.js';
import { CircleUpdater } from './services/aabb/CircleUpdater.js';
import { EllipseUpdater } from './services/aabb/EllipseUpdater.js';
import { RectUpdater } from './services/aabb/RectUpdater.js';
import { TextUpdater } from './services/aabb/TextUpdater.js';
import { LineUpdater } from './services/aabb/LineUpdater.js';
import { PolylineUpdater } from './services/aabb/PolylineUpdater.js';
import { PathUpdater } from './services/aabb/PathUpdater.js';
import './css/cssom/types.js';
import './css/cssom/CSSColorValue.js';
import './css/cssom/CSSKeywordValue.js';
import './css/cssom/CSSMathOperator.js';
import './css/cssom/CSSMathInvert.js';
import './css/cssom/CSSMathMax.js';
import './css/cssom/CSSMathMin.js';
import './css/cssom/CSSMathNegate.js';
import './css/cssom/CSSMathProduct.js';
import './css/cssom/CSSMathSum.js';
import './css/cssom/CSSMathValue.js';
import './css/cssom/CSSMathVariadic.js';
import './css/cssom/CSSNumericValue.js';
import './css/cssom/CSSNumericValueType.js';
import './css/cssom/CSSRGB.js';
import './css/cssom/CSSGradientValue.js';
import './css/cssom/CSSStyleValue.js';
import './css/cssom/CSSTransformValue.js';
import './css/cssom/CSSTranslate.js';
import './css/cssom/CSSUnitValue.js';
import './css/parser/dimension.js';
import './types.js';
import './shapes/Rectangle.js';
import './css/parser/filter.js';
import './css/parser/transform.js';
import { CSSPropertyLengthOrPercentage } from './css/properties/CSSPropertyLengthOrPercentage.js';
import { CSSPropertyLocalPosition } from './css/properties/CSSPropertyLocalPosition.js';
import { CSSPropertyOpacity } from './css/properties/CSSPropertyOpacity.js';
import { CSSPropertyColor } from './css/properties/CSSPropertyColor.js';
import { CSSPropertyFilter } from './css/properties/CSSPropertyFilter.js';
import { CSSPropertyLineDash } from './css/properties/CSSPropertyLineDash.js';
import { CSSPropertyShadowBlur } from './css/properties/CSSPropertyShadowBlur.js';
import { CSSPropertyOffsetPath } from './css/properties/CSSPropertyOffsetPath.js';
import { CSSPropertyOffsetDistance } from './css/properties/CSSPropertyOffsetDistance.js';
import { CSSPropertyAnchor } from './css/properties/CSSPropertyAnchor.js';
import { CSSPropertyZIndex } from './css/properties/CSSPropertyZIndex.js';
import { CSSPropertyTransform } from './css/properties/CSSPropertyTransform.js';
import { CSSPropertyTransformOrigin } from './css/properties/CSSPropertyTransformOrigin.js';
import { CSSPropertyPath } from './css/properties/CSSPropertyPath.js';
import { CSSPropertyPoints } from './css/properties/CSSPropertyPoints.js';
import { CSSPropertyClipPath } from './css/properties/CSSPropertyClipPath.js';
import { CSSPropertyText } from './css/properties/CSSPropertyText.js';
import { CSSPropertyTextTransform } from './css/properties/CSSPropertyTextTransform.js';
import { StyleValueRegistry } from './css/StyleValueRegistry.js';
import { LayoutRegistry } from './css/LayoutRegistry.js';
import '../../../inversify/lib/inversify.js';
import { __exports as inversify } from '../../../../_virtual/inversify.js';
import { e as eventemitter3 } from '../../../../_virtual/index4.js';

var containerModule = Module(function (register) {
  inversify.decorate(injectable(), eventemitter3.exports.EventEmitter); // bind DisplayObject pool

  register(DisplayObjectPool); // bind Selector

  register(DefaultSceneGraphSelector);
  register({
    token: SceneGraphSelectorFactory,
    useFactory: function useFactory(context) {
      return function () {
        return context.container.get(SceneGraphSelector);
      };
    }
  }); // bind scenegraph service

  register({
    token: SceneGraphService,
    useClass: DefaultSceneGraphService
  }); // bind text service

  register(OffscreenCanvasCreator);
  register(TextService); // bind aabb updater

  register(CircleUpdater);
  register(EllipseUpdater);
  register(RectUpdater);
  register(TextUpdater);
  register(LineUpdater);
  register(PolylineUpdater);
  register(PathUpdater);
  register({
    token: GeometryUpdaterFactory,
    useFactory: function useFactory(context) {
      var cache = {};
      return function (tagName) {
        if (!cache[tagName]) {
          if (context.container.isBoundNamed(GeometryAABBUpdater, tagName)) {
            cache[tagName] = context.container.getNamed(GeometryAABBUpdater, tagName);
          }
        }

        return cache[tagName];
      };
    }
  }); // bind CSS property handlers

  register(LayoutRegistry);
  register(StyleValueRegistry);
  register(CSSPropertyLengthOrPercentage);
  register(CSSPropertyLocalPosition);
  register(CSSPropertyOpacity);
  register(CSSPropertyColor);
  register(CSSPropertyFilter);
  register(CSSPropertyLineDash);
  register(CSSPropertyShadowBlur);
  register(CSSPropertyOffsetPath);
  register(CSSPropertyOffsetDistance);
  register(CSSPropertyAnchor);
  register(CSSPropertyZIndex);
  register(CSSPropertyTransform);
  register(CSSPropertyTransformOrigin);
  register(CSSPropertyPath);
  register(CSSPropertyPoints);
  register(CSSPropertyClipPath);
  register(CSSPropertyText);
  register(CSSPropertyTextTransform);
});

export { containerModule };
