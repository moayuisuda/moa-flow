import { __decorate } from '../../../../tslib/tslib.es6.js';
import { singleton } from '../../../../mana-syringe/es/decorator.js';
import '../../../../mana-syringe/es/container.js';
import { Syringe } from '../../../../mana-syringe/es/core.js';
import '../../../../mana-syringe/es/contribution/contribution-protocol.js';
import '../../../../inversify/lib/inversify.js';
import '../../../../mana-syringe/es/register.js';
import '../../../../mana-syringe/es/contribution/index.js';

var SceneGraphSelectorFactory = Syringe.defineToken('SceneGraphSelectorFactory');
var SceneGraphSelector = Syringe.defineToken('SceneGraphSelector', {
  multiple: false
});
var NAME_REGEXP = /\[\s*name=(.*)\s*\]/;
/**
 * support the following DOM API:
 * * getElementById
 * * getElementsByClassName
 * * getElementsByName
 * * getElementsByTag
 * * querySelector
 * * querySelectorAll
 */

var DefaultSceneGraphSelector =
/** @class */
function () {
  function DefaultSceneGraphSelector() {}

  DefaultSceneGraphSelector.prototype.selectOne = function (query, root) {
    if (query.startsWith('.')) {
      return root.find(function (node) {
        // return !node.shadow && node.id === query.substring(1);
        return node.className === query.substring(1);
      });
    } else if (query.startsWith('#')) {
      // getElementById('id')
      return root.find(function (node) {
        // return !node.shadow && node.id === query.substring(1);
        return node.id === query.substring(1);
      });
    } else if (query.startsWith('[name=')) {
      var matches = query.match(NAME_REGEXP);

      if (matches && matches.length > 1) {
        var targetName_1 = matches[1].replace(/"/g, ''); // getElementByName();

        return root.find(function (node) {
          return root !== node && node.name === targetName_1;
        });
      } else {
        return null;
      }
    } else {
      // getElementsByTag('circle');
      return root.find(function (node) {
        return root !== node && node.nodeName === query;
      });
    }
  };

  DefaultSceneGraphSelector.prototype.selectAll = function (query, root) {
    // only support `[name="${name}"]` `.className` `#id`
    if (query.startsWith('.')) {
      // getElementsByClassName('className');
      // should not include itself
      return root.findAll(function (node) {
        return root !== node && node.className === query.substring(1);
      });
    } else if (query.startsWith('#')) {
      return root.findAll(function (node) {
        return root !== node && node.id === query.substring(1);
      });
    } else if (query.startsWith('[name=')) {
      // getElementsByName();
      var matches = query.match(NAME_REGEXP);

      if (matches && matches.length > 1) {
        var targetName_2 = matches[1].replace(/"/g, ''); // getElementByName();

        return root.findAll(function (node) {
          return root !== node && node.name === targetName_2;
        });
      } else {
        return [];
      }
    } else {
      // getElementsByTag('circle');
      return root.findAll(function (node) {
        return root !== node && node.nodeName === query;
      });
    }
  }; // eslint-disable-next-line @typescript-eslint/no-unused-vars


  DefaultSceneGraphSelector.prototype.is = function () {
    // TODO: need a simple `matches` implementation
    return true;
  };

  DefaultSceneGraphSelector = __decorate([singleton({
    token: SceneGraphSelector
  })], DefaultSceneGraphSelector);
  return DefaultSceneGraphSelector;
}();

export { DefaultSceneGraphSelector, SceneGraphSelector, SceneGraphSelectorFactory };
