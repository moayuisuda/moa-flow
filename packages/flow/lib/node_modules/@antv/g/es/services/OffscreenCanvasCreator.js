import { __decorate } from '../../../../tslib/tslib.es6.js';
import { singleton } from '../../../../mana-syringe/es/decorator.js';
import '../../../../mana-syringe/es/container.js';
import '../../../../mana-syringe/es/core.js';
import '../../../../mana-syringe/es/contribution/contribution-protocol.js';
import '../../../../inversify/lib/inversify.js';
import '../../../../mana-syringe/es/register.js';
import '../../../../mana-syringe/es/contribution/index.js';

/**
 * used in following scenes:
 * - g `ctx.measureText`
 * - g-plugin-canvas-picker `ctx.isPointInPath`
 * - g-plugin-webgl-renderer `ctx.createLinearGradient` and generate texture
 */

var OffscreenCanvasCreator =
/** @class */
function () {
  function OffscreenCanvasCreator() {}

  OffscreenCanvasCreator.prototype.getOrCreateCanvas = function (offscreenCanvas) {
    if (this.canvas) {
      return this.canvas;
    } // user-defined offscreen canvas


    if (offscreenCanvas) {
      this.canvas = offscreenCanvas;
      this.context = this.canvas.getContext('2d');
    } else {
      try {
        // OffscreenCanvas2D measureText can be up to 40% faster.
        this.canvas = new window.OffscreenCanvas(0, 0);
        this.context = this.canvas.getContext('2d');

        if (!this.context || !this.context.measureText) {
          this.canvas = document.createElement('canvas');
          this.context = this.canvas.getContext('2d');
        }
      } catch (ex) {
        this.canvas = document.createElement('canvas');
        this.context = this.canvas.getContext('2d');
      }
    }

    this.canvas.width = 10;
    this.canvas.height = 10;
    return this.canvas;
  };

  OffscreenCanvasCreator.prototype.getOrCreateContext = function (offscreenCanvas) {
    if (this.context) {
      return this.context;
    }

    this.getOrCreateCanvas(offscreenCanvas);
    return this.context;
  };

  OffscreenCanvasCreator = __decorate([singleton()], OffscreenCanvasCreator);
  return OffscreenCanvasCreator;
}();

export { OffscreenCanvasCreator };
