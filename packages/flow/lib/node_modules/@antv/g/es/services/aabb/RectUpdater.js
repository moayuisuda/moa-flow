import { __decorate } from '../../../../../tslib/tslib.es6.js';
import { singleton } from '../../../../../mana-syringe/es/decorator.js';
import '../../../../../mana-syringe/es/container.js';
import '../../../../../mana-syringe/es/core.js';
import '../../../../../mana-syringe/es/contribution/contribution-protocol.js';
import '../../../../../inversify/lib/inversify.js';
import '../../../../../mana-syringe/es/register.js';
import '../../../../../mana-syringe/es/contribution/index.js';
import { GeometryAABBUpdater } from './interfaces.js';
import { Shape } from '../../types.js';
import { UnitType } from '../../css/cssom/types.js';
import '../../css/cssom/CSSColorValue.js';
import '../../css/cssom/CSSKeywordValue.js';
import '../../css/cssom/CSSMathOperator.js';
import '../../css/cssom/CSSMathInvert.js';
import '../../css/cssom/CSSMathMax.js';
import '../../css/cssom/CSSMathMin.js';
import '../../css/cssom/CSSMathNegate.js';
import '../../css/cssom/CSSMathProduct.js';
import '../../css/cssom/CSSMathSum.js';
import '../../css/cssom/CSSMathValue.js';
import '../../css/cssom/CSSMathVariadic.js';
import '../../css/cssom/CSSNumericValue.js';
import '../../css/cssom/CSSNumericValueType.js';
import '../../css/cssom/CSSRGB.js';
import '../../css/cssom/CSSGradientValue.js';
import '../../css/cssom/CSSStyleValue.js';
import '../../css/cssom/CSSTransformValue.js';
import '../../css/cssom/CSSTranslate.js';
import { CSSUnitValue } from '../../css/cssom/CSSUnitValue.js';
import '../../css/parser/dimension.js';
import '../../shapes/Rectangle.js';
import '../../css/parser/filter.js';
import '../../css/parser/transform.js';
import '../../css/properties/CSSPropertyLengthOrPercentage.js';
import '../../css/properties/CSSPropertyLocalPosition.js';
import '../../css/properties/CSSPropertyOpacity.js';
import '../../css/properties/CSSPropertyColor.js';
import '../../css/properties/CSSPropertyFilter.js';
import '../../css/properties/CSSPropertyLineDash.js';
import '../../css/properties/CSSPropertyShadowBlur.js';
import '../../css/properties/CSSPropertyOffsetPath.js';
import '../../css/properties/CSSPropertyOffsetDistance.js';
import '../../css/properties/CSSPropertyAnchor.js';
import '../../css/properties/CSSPropertyZIndex.js';
import '../../css/properties/CSSPropertyTransform.js';
import '../../css/properties/CSSPropertyTransformOrigin.js';
import '../../css/properties/CSSPropertyPath.js';
import '../../css/properties/CSSPropertyPoints.js';
import '../../css/properties/CSSPropertyClipPath.js';
import '../../css/properties/CSSPropertyText.js';
import '../../css/properties/CSSPropertyTextTransform.js';
import '../../css/StyleValueRegistry.js';
import '../../css/LayoutRegistry.js';
import isString from '../../../../../lodash-es/isString.js';

var RectUpdater =
/** @class */
function () {
  function RectUpdater() {}

  RectUpdater.prototype.update = function (parsedStyle, object) {
    var img = parsedStyle.img,
        x = parsedStyle.x,
        y = parsedStyle.y,
        width = parsedStyle.width,
        height = parsedStyle.height;
    var contentWidth = 0;
    var contentHeight = 0;

    if (width instanceof CSSUnitValue) {
      if (width.unit === UnitType.kPixels) {
        contentWidth = width.value;
      }
    }

    if (height instanceof CSSUnitValue) {
      if (height.unit === UnitType.kPixels) {
        contentHeight = height.value;
      }
    } // resize with HTMLImageElement's size


    if (img && !isString(img)) {
      if (!contentWidth) {
        contentWidth = img.width;
      }

      if (!contentHeight) {
        contentHeight = img.height;
      }
    }

    if (width instanceof CSSUnitValue) {
      width.value = contentWidth;
    }

    if (height instanceof CSSUnitValue) {
      height.value = contentHeight;
    }

    return {
      width: contentWidth,
      height: contentHeight,
      x: x.value || 0,
      y: y.value || 0
    };
  };

  RectUpdater = __decorate([singleton({
    token: [{
      token: GeometryAABBUpdater,
      named: Shape.RECT
    }, {
      token: GeometryAABBUpdater,
      named: Shape.IMAGE
    }, {
      token: GeometryAABBUpdater,
      named: Shape.GROUP
    }]
  })], RectUpdater);
  return RectUpdater;
}();

export { RectUpdater };
