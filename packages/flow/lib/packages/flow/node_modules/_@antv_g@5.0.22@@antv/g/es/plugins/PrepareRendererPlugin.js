import { __decorate, __metadata } from '../../../../_tslib@2.4.0@tslib/tslib.es6.js';
import { inject, singleton } from '../../../../_mana-syringe@0.3.1@mana-syringe/es/decorator.js';
import '../../../../_mana-syringe@0.3.1@mana-syringe/es/container.js';
import '../../../../_mana-syringe@0.3.1@mana-syringe/es/core.js';
import '../../../../_mana-syringe@0.3.1@mana-syringe/es/contribution/contribution-protocol.js';
import '../../../../_inversify@5.1.1@inversify/lib/inversify.js';
import '../../../../_mana-syringe@0.3.1@mana-syringe/es/register.js';
import '../../../../_mana-syringe@0.3.1@mana-syringe/es/contribution/index.js';
import '../css/cssom/types.js';
import '../css/cssom/CSSColorValue.js';
import '../css/cssom/CSSKeywordValue.js';
import '../css/cssom/CSSMathOperator.js';
import '../css/cssom/CSSMathInvert.js';
import '../css/cssom/CSSMathMax.js';
import '../css/cssom/CSSMathMin.js';
import '../css/cssom/CSSMathNegate.js';
import '../css/cssom/CSSMathProduct.js';
import '../css/cssom/CSSMathSum.js';
import '../css/cssom/CSSMathValue.js';
import '../css/cssom/CSSMathVariadic.js';
import '../css/cssom/CSSNumericValue.js';
import '../css/cssom/CSSNumericValueType.js';
import '../css/cssom/CSSRGB.js';
import '../css/cssom/CSSGradientValue.js';
import '../css/cssom/CSSStyleValue.js';
import '../css/cssom/CSSTransformValue.js';
import '../css/cssom/CSSTranslate.js';
import '../css/cssom/CSSUnitValue.js';
import '../css/parser/dimension.js';
import '../types.js';
import '../shapes/Rectangle.js';
import '../css/parser/filter.js';
import '../css/parser/transform.js';
import '../css/properties/CSSPropertyLengthOrPercentage.js';
import '../css/properties/CSSPropertyLocalPosition.js';
import '../css/properties/CSSPropertyOpacity.js';
import '../css/properties/CSSPropertyColor.js';
import '../css/properties/CSSPropertyFilter.js';
import '../css/properties/CSSPropertyLineDash.js';
import '../css/properties/CSSPropertyShadowBlur.js';
import '../css/properties/CSSPropertyOffsetPath.js';
import '../css/properties/CSSPropertyOffsetDistance.js';
import '../css/properties/CSSPropertyAnchor.js';
import '../css/properties/CSSPropertyZIndex.js';
import '../css/properties/CSSPropertyTransform.js';
import '../css/properties/CSSPropertyTransformOrigin.js';
import '../css/properties/CSSPropertyPath.js';
import '../css/properties/CSSPropertyPoints.js';
import '../css/properties/CSSPropertyClipPath.js';
import '../css/properties/CSSPropertyText.js';
import '../css/properties/CSSPropertyTextTransform.js';
import { StyleValueRegistry } from '../css/StyleValueRegistry.js';
import '../css/LayoutRegistry.js';
import { ElementEvent } from '../dom/interfaces.js';
import '../dom/EventTarget.js';
import '../dom/Node.js';
import '../dom/Element.js';
import '../dom/Document.js';
import '../dom/FederatedEvent.js';
import '../dom/FederatedMouseEvent.js';
import '../dom/FederatedPointerEvent.js';
import '../dom/FederatedWheelEvent.js';
import '../dom/Animation.js';
import '../dom/AnimationEvent.js';
import '../dom/AnimationEffectTiming.js';
import '../dom/CustomEvent.js';
import '../dom/MutationEvent.js';
import '../dom/KeyframeEffect.js';
import '../dom/AnimationTimeline.js';
import '../dom/CustomElementRegistry.js';
import { dirtifyToRoot } from '../services/SceneGraphService.js';
import '../services/ContextService.js';
import { RenderingContext } from '../services/RenderingContext.js';
import { RenderingPluginContribution } from '../services/RenderingService.js';
import '../services/EventService.js';
import '../services/SceneGraphSelector.js';
import '../services/TextService.js';
import '../services/OffscreenCanvasCreator.js';
import '../services/aabb/interfaces.js';
import '../services/aabb/CircleUpdater.js';
import '../services/aabb/EllipseUpdater.js';
import '../services/aabb/RectUpdater.js';
import '../services/aabb/TextUpdater.js';
import '../services/aabb/LineUpdater.js';
import '../services/aabb/PolylineUpdater.js';
import '../services/aabb/PathUpdater.js';

var PrepareRendererPlugin =
/** @class */
function () {
  function PrepareRendererPlugin() {}

  PrepareRendererPlugin_1 = PrepareRendererPlugin;

  PrepareRendererPlugin.prototype.apply = function (renderingService) {
    var _this = this;

    var handleAttributeChanged = function handleAttributeChanged(e) {
      // this.renderingContext.renderReasons.add(RenderReason.DISPLAY_OBJECT_CHANGED);
      var object = e.target;
      object.renderable.dirty = true;
      renderingService.dirtify();
    };

    var handleBoundsChanged = function handleBoundsChanged() {
      renderingService.dirtify();
    };

    var handleMounted = function handleMounted(e) {
      var object = e.target; // recalc style values

      _this.styleValueRegistry.recalc(object);

      dirtifyToRoot(object);
      renderingService.dirtify();
    };

    var handleUnmounted = function handleUnmounted(e) {
      dirtifyToRoot(e.target);
      renderingService.dirtify();
    };

    renderingService.hooks.init.tap(PrepareRendererPlugin_1.tag, function () {
      _this.renderingContext.root.addEventListener(ElementEvent.MOUNTED, handleMounted);

      _this.renderingContext.root.addEventListener(ElementEvent.UNMOUNTED, handleUnmounted);

      _this.renderingContext.root.addEventListener(ElementEvent.ATTR_MODIFIED, handleAttributeChanged);

      _this.renderingContext.root.addEventListener(ElementEvent.BOUNDS_CHANGED, handleBoundsChanged);
    });
    renderingService.hooks.destroy.tap(PrepareRendererPlugin_1.tag, function () {
      _this.renderingContext.root.removeEventListener(ElementEvent.MOUNTED, handleMounted);

      _this.renderingContext.root.removeEventListener(ElementEvent.UNMOUNTED, handleUnmounted);

      _this.renderingContext.root.removeEventListener(ElementEvent.ATTR_MODIFIED, handleAttributeChanged);

      _this.renderingContext.root.removeEventListener(ElementEvent.BOUNDS_CHANGED, handleBoundsChanged);
    });
  };

  var PrepareRendererPlugin_1;
  PrepareRendererPlugin.tag = 'PrepareRendererPlugin';

  __decorate([inject(RenderingContext), __metadata("design:type", Object)], PrepareRendererPlugin.prototype, "renderingContext", void 0);

  __decorate([inject(StyleValueRegistry), __metadata("design:type", StyleValueRegistry)], PrepareRendererPlugin.prototype, "styleValueRegistry", void 0);

  PrepareRendererPlugin = PrepareRendererPlugin_1 = __decorate([singleton({
    contrib: RenderingPluginContribution
  })], PrepareRendererPlugin);
  return PrepareRendererPlugin;
}();

export { PrepareRendererPlugin };
