import { Point } from '../shapes/Point.js';

/**
 * An DOM-compatible synthetic event implementation that is "forwarded" on behalf of an original
 * FederatedEvent or native {@link https://dom.spec.whatwg.org/#event Event}.
 */

var FederatedEvent =
/** @class */
function () {
  /**
   * The event boundary which manages this event. Propagation can only occur
   *  within the boundary's jurisdiction.
   */
  function FederatedEvent(manager) {
    /**
     * The propagation phase.
     * @see https://developer.mozilla.org/en-US/docs/Web/API/Event/eventPhase
     */
    this.eventPhase = FederatedEvent.prototype.NONE;
    /**
     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/Event/bubbles
     */

    this.bubbles = true;
    /**
     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/Event/cancelBubble
     */

    this.cancelBubble = true;
    /**
     * @see https://developer.mozilla.org/en-US/docs/Web/API/Event/cancelable
     */

    this.cancelable = false;
    /** Flags whether the default response of the user agent was prevent through this event. */

    this.defaultPrevented = false;
    /** Flags whether propagation was stopped. */

    this.propagationStopped = false;
    /** Flags whether propagation was immediately stopped. */

    this.propagationImmediatelyStopped = false;
    /**
     * The coordinates of the evnet relative to the nearest DOM layer.
     * This is a non-standard property.
     */

    this.layer = new Point();
    /**
     * The coordinates of the event relative to the DOM document.
     * This is a non-standard property.
     * relative to the DOM document.
     * @see https://developer.mozilla.org/zh-CN/docs/Web/API/MouseEvent/pageX
     */

    this.page = new Point();
    /**
     * relative to Canvas, origin is left-top
     */

    this.canvas = new Point();
    /**
     * relative to Viewport, account for Camera
     */

    this.viewport = new Point();
    this.composed = false;
    this.NONE = 0;
    this.CAPTURING_PHASE = 1;
    this.AT_TARGET = 2;
    this.BUBBLING_PHASE = 3;
    this.manager = manager;
  }

  Object.defineProperty(FederatedEvent.prototype, "name", {
    /**
     * @deprecated
     */
    get: function get() {
      return this.type;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(FederatedEvent.prototype, "layerX", {
    get: function get() {
      return this.layer.x;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(FederatedEvent.prototype, "layerY", {
    get: function get() {
      return this.layer.y;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(FederatedEvent.prototype, "pageX", {
    get: function get() {
      return this.page.x;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(FederatedEvent.prototype, "pageY", {
    get: function get() {
      return this.page.y;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(FederatedEvent.prototype, "x", {
    get: function get() {
      return this.canvas.x;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(FederatedEvent.prototype, "y", {
    get: function get() {
      return this.canvas.y;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(FederatedEvent.prototype, "canvasX", {
    get: function get() {
      return this.canvas.x;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(FederatedEvent.prototype, "canvasY", {
    get: function get() {
      return this.canvas.y;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(FederatedEvent.prototype, "viewportX", {
    get: function get() {
      return this.viewport.x;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(FederatedEvent.prototype, "viewportY", {
    get: function get() {
      return this.viewport.y;
    },
    enumerable: false,
    configurable: true
  });
  /**
   * The propagation path for this event
   * @see https://developer.mozilla.org/zh-CN/docs/Web/API/Event/composedPath
   *
   * So composedPath()[0] represents the original target.
   * @see https://polymer-library.polymer-project.org/3.0/docs/devguide/events#retargeting
   */

  FederatedEvent.prototype.composedPath = function () {
    if (this.manager && (!this.path || this.path[0] !== this.target)) {
      this.path = this.target ? this.manager.propagationPath(this.target) : [];
    }

    return this.path;
  };

  Object.defineProperty(FederatedEvent.prototype, "propagationPath", {
    /**
     * @deprecated
     */
    get: function get() {
      return this.composedPath();
    },
    enumerable: false,
    configurable: true
  });
  /**
   * @see https://developer.mozilla.org/zh-CN/docs/Web/API/Event/preventDefault
   */

  FederatedEvent.prototype.preventDefault = function () {
    if (this.nativeEvent instanceof Event && this.nativeEvent.cancelable) {
      this.nativeEvent.preventDefault();
    }

    this.defaultPrevented = true;
  };
  /**
   * @see https://developer.mozilla.org/zh-CN/docs/Web/API/Event/stopImmediatePropagation
   */


  FederatedEvent.prototype.stopImmediatePropagation = function () {
    this.propagationImmediatelyStopped = true;
  };
  /**
   * @see https://developer.mozilla.org/zh-CN/docs/Web/API/Event/stopPropagation
   */


  FederatedEvent.prototype.stopPropagation = function () {
    this.propagationStopped = true;
  };
  /**
   * added for compatibility with DOM Event,
   * deprecated props and methods
   */


  FederatedEvent.prototype.initEvent = function () {};

  FederatedEvent.prototype.initUIEvent = function () {};

  return FederatedEvent;
}();

export { FederatedEvent };
