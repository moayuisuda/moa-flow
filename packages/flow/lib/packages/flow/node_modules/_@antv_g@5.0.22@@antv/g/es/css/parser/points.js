import LineUtil from '../../../../../_@antv_g-math@1.0.19@@antv/g-math/es/line.js';
import PolylineUtil from '../../../../../_@antv_g-math@1.0.19@@antv/g-math/es/polyline.js';
import isString from '../../../../../_lodash-es@4.17.21@lodash-es/isString.js';

function parsePoints(points) {
  if (isString(points)) {
    return null;
  }

  var segments = [];
  var tempLength = 0;
  var segmentT;
  var segmentL;
  var totalLength = PolylineUtil.length(points);
  points.forEach(function (p, i) {
    if (points[i + 1]) {
      segmentT = [0, 0];
      segmentT[0] = tempLength / totalLength;
      segmentL = LineUtil.length(p[0], p[1], points[i + 1][0], points[i + 1][1]);
      tempLength += segmentL;
      segmentT[1] = tempLength / totalLength;
      segments.push(segmentT);
    }
  });
  return {
    points: points,
    totalLength: totalLength,
    segments: segments
  };
}

export { parsePoints };
