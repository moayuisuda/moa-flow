import { __extends } from '../../../../../_tslib@2.4.0@tslib/tslib.es6.js';
import { CSSStyleValueType, CSSStyleValue } from './CSSStyleValue.js';

/**
 * CSSColorValue is the base class used for the various CSS color interfaces.
 *
 * @see https://drafts.css-houdini.org/css-typed-om-1/#colorvalue-objects
 */

var CSSColorValue =
/** @class */
function (_super) {
  __extends(CSSColorValue, _super);

  function CSSColorValue(colorSpace) {
    var _this = _super.call(this) || this;

    _this.colorSpace = colorSpace;
    return _this;
  }

  CSSColorValue.prototype.getType = function () {
    return CSSStyleValueType.kColorType;
  }; // buildCSSText(n: Nested, p: ParenLess, result: string): string {
  //   let text = '';
  //   if (this.colorSpace === 'rgb') {
  //     text = `rgba(${this.channels.join(',')},${this.alpha})`;
  //   }
  //   return (result += text);
  // }

  /**
   * @see https://drafts.css-houdini.org/css-typed-om-1/#dom-csscolorvalue-to
   */


  CSSColorValue.prototype.to = function (colorSpace) {
    return this;
  };

  return CSSColorValue;
}(CSSStyleValue);

export { CSSColorValue };
