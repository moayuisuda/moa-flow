import { __spreadArray, __read, __decorate } from '../../../../../_tslib@2.4.0@tslib/tslib.es6.js';
import { singleton } from '../../../../../_mana-syringe@0.3.1@mana-syringe/es/decorator.js';
import '../../../../../_mana-syringe@0.3.1@mana-syringe/es/container.js';
import '../../../../../_mana-syringe@0.3.1@mana-syringe/es/core.js';
import '../../../../../_mana-syringe@0.3.1@mana-syringe/es/contribution/contribution-protocol.js';
import '../../../../../_inversify@5.1.1@inversify/lib/inversify.js';
import '../../../../../_mana-syringe@0.3.1@mana-syringe/es/register.js';
import '../../../../../_mana-syringe@0.3.1@mana-syringe/es/contribution/index.js';
import { GeometryAABBUpdater } from './interfaces.js';
import { Shape } from '../../types.js';

var PolylineUpdater =
/** @class */
function () {
  function PolylineUpdater() {}

  PolylineUpdater.prototype.update = function (parsedStyle) {
    var points = parsedStyle.points.points; // FIXME: account for miter lineJoin

    var minX = Math.min.apply(Math, __spreadArray([], __read(points.map(function (point) {
      return point[0];
    })), false));
    var maxX = Math.max.apply(Math, __spreadArray([], __read(points.map(function (point) {
      return point[0];
    })), false));
    var minY = Math.min.apply(Math, __spreadArray([], __read(points.map(function (point) {
      return point[1];
    })), false));
    var maxY = Math.max.apply(Math, __spreadArray([], __read(points.map(function (point) {
      return point[1];
    })), false));
    var width = maxX - minX;
    var height = maxY - minY;
    return {
      width: width,
      height: height,
      x: minX,
      y: minY
    };
  };

  PolylineUpdater = __decorate([singleton({
    token: [{
      token: GeometryAABBUpdater,
      named: Shape.POLYLINE
    }, {
      token: GeometryAABBUpdater,
      named: Shape.POLYGON
    }]
  })], PolylineUpdater);
  return PolylineUpdater;
}();

export { PolylineUpdater };
