var zIndexWarningShowed = false;
var Z_INDEX_WARNING = "ReactG: You are using \"zIndex\" attribute for an element.\nreact-g may get confused with ordering. Just define correct order of elements in your render function of a component.\n";

var isEvent = function isEvent(key) {
  return key.slice(0, 2) === 'on';
};

var getEventName = function getEventName(key) {
  return key.substr(2).toLowerCase();
};

var bindShapeEvent = function bindShapeEvent(newProps, instance) {
  Object.keys(newProps).forEach(function (propKey) {
    if (isEvent(propKey)) {
      instance.addEventListener(getEventName(propKey), newProps[propKey]);
    }
  });
};
var updateProps = function updateProps(instance, newProps, oldProps) {
  if (oldProps === void 0) {
    oldProps = {};
  } // don't use zIndex


  if (!zIndexWarningShowed && 'zIndex' in newProps) {
    console.warn(Z_INDEX_WARNING);
    zIndexWarningShowed = true;
  }

  Object.keys(oldProps).forEach(function (key) {
    var propChanged = oldProps[key] !== newProps[key];

    if (propChanged) {
      if (isEvent(key)) {
        instance.removeEventListener(getEventName(key));
      } else {
        instance.removeAttribute(key);
      }
    }
  });
  Object.keys(newProps).forEach(function (key) {
    var propChanged = oldProps[key] !== newProps[key];

    if (propChanged) {
      if (isEvent(key)) {
        if (typeof newProps[key] === 'function') {
          instance.addEventListener(getEventName(key), newProps[key]);
        }
      } else {
        instance.setAttribute(key, newProps[key]);
      }
    }
  });
};

export { bindShapeEvent, updateProps };
