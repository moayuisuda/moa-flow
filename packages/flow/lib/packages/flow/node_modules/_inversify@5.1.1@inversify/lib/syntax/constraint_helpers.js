import { __exports as constraint_helpers } from '../../../../../../_virtual/constraint_helpers.js';
export { __exports as default } from '../../../../../../_virtual/constraint_helpers.js';
import '../constants/metadata_keys.js';
import '../planning/metadata.js';
import { __exports as metadata_keys } from '../../../../../../_virtual/metadata_keys.js';
import { __exports as metadata } from '../../../../../../_virtual/metadata.js';

Object.defineProperty(constraint_helpers, "__esModule", { value: true });
constraint_helpers.typeConstraint = constraint_helpers.namedConstraint = constraint_helpers.taggedConstraint = constraint_helpers.traverseAncerstors = void 0;
var METADATA_KEY = metadata_keys;
var metadata_1 = metadata;
var traverseAncerstors = function (request, constraint) {
    var parent = request.parentRequest;
    if (parent !== null) {
        return constraint(parent) ? true : traverseAncerstors(parent, constraint);
    }
    else {
        return false;
    }
};
constraint_helpers.traverseAncerstors = traverseAncerstors;
var taggedConstraint = function (key) { return function (value) {
    var constraint = function (request) {
        return request !== null && request.target !== null && request.target.matchesTag(key)(value);
    };
    constraint.metaData = new metadata_1.Metadata(key, value);
    return constraint;
}; };
constraint_helpers.taggedConstraint = taggedConstraint;
var namedConstraint = taggedConstraint(METADATA_KEY.NAMED_TAG);
constraint_helpers.namedConstraint = namedConstraint;
var typeConstraint = function (type) { return function (request) {
    var binding = null;
    if (request !== null) {
        binding = request.bindings[0];
        if (typeof type === "string") {
            var serviceIdentifier = binding.serviceIdentifier;
            return serviceIdentifier === type;
        }
        else {
            var constructor = request.bindings[0].implementationType;
            return type === constructor;
        }
    }
    return false;
}; };
constraint_helpers.typeConstraint = typeConstraint;
