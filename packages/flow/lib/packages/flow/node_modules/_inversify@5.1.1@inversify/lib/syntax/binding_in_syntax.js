import { __exports as binding_in_syntax } from '../../../../../../_virtual/binding_in_syntax.js';
export { __exports as default } from '../../../../../../_virtual/binding_in_syntax.js';
import '../constants/literal_types.js';
import './binding_when_on_syntax.js';
import { __exports as literal_types } from '../../../../../../_virtual/literal_types.js';
import { __exports as binding_when_on_syntax } from '../../../../../../_virtual/binding_when_on_syntax.js';

Object.defineProperty(binding_in_syntax, "__esModule", { value: true });
binding_in_syntax.BindingInSyntax = void 0;
var literal_types_1 = literal_types;
var binding_when_on_syntax_1 = binding_when_on_syntax;
var BindingInSyntax = (function () {
    function BindingInSyntax(binding) {
        this._binding = binding;
    }
    BindingInSyntax.prototype.inRequestScope = function () {
        this._binding.scope = literal_types_1.BindingScopeEnum.Request;
        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);
    };
    BindingInSyntax.prototype.inSingletonScope = function () {
        this._binding.scope = literal_types_1.BindingScopeEnum.Singleton;
        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);
    };
    BindingInSyntax.prototype.inTransientScope = function () {
        this._binding.scope = literal_types_1.BindingScopeEnum.Transient;
        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);
    };
    return BindingInSyntax;
}());
binding_in_syntax.BindingInSyntax = BindingInSyntax;
